local i18n = require("i18n")
require("constants")
local anchor_x = 0
local anchor_y = 0
local image_x = 0
local image_y = nil
local tt = nil
local scripts = require("game_scripts")
require("templates")
local function adx(v)
    return v - anchor_x * image_x
end
local function ady(v)
    return v - anchor_y * image_y
end
require("game_templates_utils")

local function heroes()
    tt = RT("hero_gerald", "hero")
    AC(tt, "melee", "timed_attacks", "dodge")
    anchor_y = 0.12
    anchor_x = 0.5
    image_y = 110
    image_x = 92
    tt.hero.fixed_stat_attack = 6
    tt.hero.fixed_stat_health = 8
    tt.hero.fixed_stat_range = 0
    tt.hero.fixed_stat_speed = 5
    tt.hero.level_stats.armor = {0.34, 0.38, 0.42, 0.46, 0.50, 0.54, 0.58, 0.62, 0.66, 0.7}
    tt.hero.level_stats.hp_max = {400, 425, 450, 475, 500, 525, 550, 575, 600, 625}
    tt.hero.level_stats.melee_damage_max = {20, 23, 27, 30, 34, 37, 41, 45, 48, 50}
    tt.hero.level_stats.melee_damage_min = {12, 14, 15, 17, 19, 21, 23, 25, 27, 29}
    tt.hero.skills.block_counter = CC("hero_skill")
    tt.hero.skills.block_counter.xp_level_steps = {
        [4] = 1,
        [7] = 2,
        [10] = 3
    }
    tt.hero.skills.block_counter.xp_gain = {100, 200, 300}
    tt.hero.skills.courage = CC("hero_skill")
    tt.hero.skills.courage.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.courage.xp_gain = {60, 120, 180}
    tt.hero.skills.paladin = CC("hero_skill")
    tt.hero.skills.paladin.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [9] = 3
    }
    tt.hero.skills.paladin.xp_gain = {60, 120, 180}
    tt.hero.skills.paladin.hp_max = {150, 200, 250}
    tt.hero.skills.paladin.melee_damage_min = {6, 8, 10}
    tt.hero.skills.paladin.melee_damage_max = {20, 25, 30}
    tt.hero.skills.paladin.max_speed = {60, 65, 70}
    tt.health.dead_lifetime = 15
    tt.health_bar.offset = vec_2(0, 36)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_gerald.level_up
    tt.hero.tombstone_show_time = fts(90)
    tt.info.fn = scripts.hero_basic.get_info
    tt.info.hero_portrait = IS_PHONE_OR_TABLET and "hero_portraits_0002" or "heroPortrait_portraits_0002"
    tt.info.i18n_key = "HERO_PALADIN"
    tt.info.portrait = IS_PHONE_OR_TABLET and "portraits_hero_0002" or "info_portraits_hero_0005"
    tt.main_script.update = scripts.hero_gerald.update
    tt.motion.max_speed = 3 * FPS
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor = vec_2(0.5, 0.12)
    tt.render.sprites[1].prefix = "hero_gerald"
    tt.soldier.melee_slot_offset = vec_2(5, 0)
    tt.sound_events.change_rally_point = "HeroPaladinTaunt"
    tt.sound_events.death = "HeroPaladinDeath"
    tt.sound_events.hero_room_select = "HeroPaladinTauntSelect"
    tt.sound_events.insert = "HeroPaladinTauntIntro"
    tt.sound_events.respawn = "HeroPaladinTauntIntro"
    tt.unit.marker_offset = vec_2(0, 0)
    tt.unit.mod_offset = vec_2(0, 20)
    tt.melee.attacks[1].cooldown = 1
    tt.melee.attacks[1].xp_gain_factor = 2
    tt.melee.attacks[1].hit_time = fts(5)
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].shared_cooldown = true
    tt.melee.attacks[2] = table.deepclone(tt.melee.attacks[1])
    tt.melee.attacks[2].animation = "attack2"
    tt.melee.attacks[2].chance = 0.5
    tt.melee.attacks[2].xp_gain_factor = 5
    tt.melee.range = 65
    tt.timed_attacks.list[1] = E:clone_c("mod_attack")
    tt.timed_attacks.list[1].animation = "courage"
    tt.timed_attacks.list[1].cooldown = 6.5 + fts(55)
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].min_count = 2
    tt.timed_attacks.list[1].mod = "mod_gerald_courage"
    tt.timed_attacks.list[1].range = 120
    tt.timed_attacks.list[1].shoot_time = fts(17)
    tt.timed_attacks.list[1].sound = "HeroPaladinValor"
    tt.timed_attacks.list[1].sound_args = {
        delay = fts(3)
    }
    tt.timed_attacks.list[1].vis_flags = bor(F_RANGED, F_MOD)
    tt.timed_attacks.list[1].vis_bans = 0
    tt.timed_attacks.list[2] = E:clone_c("spawn_attack")
    tt.timed_attacks.list[2].animation = "levelup"
    tt.timed_attacks.list[2].cooldown = 13
    tt.timed_attacks.list[2].disabled = true
    tt.timed_attacks.list[2].entity = "soldier_gerald_paladin"
    tt.timed_attacks.list[2].sound = "HeroPaladinTauntSelect"
    tt.timed_attacks.list[2].min_range = 45
    tt.timed_attacks.list[2].max_range = 85
    tt.dodge.animation = "counter"
    tt.dodge.can_dodge = scripts.hero_gerald.fn_can_dodge
    tt.dodge.chance = 0
    tt.dodge.chance_base = 0
    tt.dodge.chance_inc = 0.25
    tt.dodge.time_before_hit = fts(4)
    tt.dodge.low_chance_factor = 0.5
    tt.dodge.counter_attack = E:clone_c("melee_attack")
    tt.dodge.counter_attack.animation = "counter"
    tt.dodge.counter_attack.damage_type = bor(DAMAGE_TRUE, DAMAGE_NO_DODGE)
    tt.dodge.counter_attack.reflected_damage_factor = 0.5
    tt.dodge.counter_attack.reflected_damage_factor_inc = 0.5
    tt.dodge.counter_attack.hit_time = fts(5)
    tt.dodge.counter_attack.sound = "HeroPaladinDeflect"

    tt = RT("mod_gerald_courage", "modifier")
    AC(tt, "render")
    tt.courage = {
        heal_once_factor = 0.12,
        heal_inc = 0.06,
        damage_inc = 4,
        damage_inc_base = 1,
        armor_inc = 0.05,
        magic_armor_inc = 0.05
    }
    tt.modifier.duration = 6
    tt.modifier.use_mod_offset = false
    tt.main_script.insert = scripts.mod_gerald_courage.insert
    tt.main_script.remove = scripts.mod_gerald_courage.remove
    tt.main_script.update = scripts.mod_track_target.update
    tt.render.sprites[1].name = "mod_gerald_courage"
    tt.render.sprites[1].anchor = vec_2(0.51, 0.17307692307692307)
    tt.render.sprites[1].draw_order = 2

    -- 艾莉瑞亚
    tt = RT("hero_alleria", "hero")
    AC(tt, "melee", "ranged", "timed_attacks")
    anchor_y = 0.14
    anchor_x = 0.5
    image_y = 76
    image_x = 60
    tt.hero.fixed_stat_attack = 3
    tt.hero.fixed_stat_health = 4
    tt.hero.fixed_stat_range = 7
    tt.hero.fixed_stat_speed = 7
    tt.hero.level_stats.armor = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    tt.hero.level_stats.hp_max = {200, 220, 240, 260, 280, 300, 320, 350, 380, 410}
    tt.hero.level_stats.melee_damage_max = {5, 7, 9, 12, 15, 18, 22, 26, 30, 34}
    tt.hero.level_stats.melee_damage_min = {3, 5, 7, 9, 11, 13, 15, 17, 19, 21}
    tt.hero.level_stats.ranged_damage_max = {16, 19, 24, 27, 30, 36, 41, 47, 50, 55}
    tt.hero.level_stats.ranged_damage_min = {4, 5, 6, 7, 8, 9, 10, 11, 12, 13}
    tt.hero.skills.multishot = CC("hero_skill")
    tt.hero.skills.multishot.count_base = 0
    tt.hero.skills.multishot.count_inc = 2
    tt.hero.skills.multishot.xp_level_steps = {
        [2] = 1,
        [4] = 2,
        [6] = 3,
        [8] = 4,
        [10] = 5
    }
    tt.hero.skills.multishot.xp_gain = {20, 30, 40, 50, 60}
    tt.hero.skills.callofwild = CC("hero_skill")
    tt.hero.skills.callofwild.damage_max_base = 4
    tt.hero.skills.callofwild.damage_min_base = 2
    tt.hero.skills.callofwild.damage_inc = 4
    tt.hero.skills.callofwild.hp_base = -50
    tt.hero.skills.callofwild.hp_inc = 250
    tt.hero.skills.callofwild.xp_gain = {35, 70, 100}
    tt.hero.skills.callofwild.xp_level_steps = {
        [4] = 1,
        [7] = 2,
        [10] = 3
    }
    tt.health.dead_lifetime = 15
    tt.health_bar.offset = vec_2(0, 33)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_alleria.level_up
    tt.hero.tombstone_show_time = fts(90)
    tt.info.damage_icon = "arrow"
    tt.info.hero_portrait = IS_PHONE_OR_TABLET and "hero_portraits_0004" or "heroPortrait_portraits_0004"
    tt.info.i18n_key = "HERO_ARCHER"
    tt.info.portrait = IS_PHONE_OR_TABLET and "portraits_hero_0004" or "info_portraits_hero_0001"
    tt.main_script.update = scripts.hero_alleria.update
    tt.motion.max_speed = 4.8 * FPS
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor = vec_2(0.5, 0.14)
    tt.render.sprites[1].prefix = "hero_alleria"
    tt.soldier.melee_slot_offset = vec_2(4, 0)
    tt.sound_events.change_rally_point = "HeroArcherTaunt"
    tt.sound_events.death = "HeroArcherDeath"
    tt.sound_events.hero_room_select = "HeroArcherTauntSelect"
    tt.sound_events.insert = "HeroArcherTauntIntro"
    tt.sound_events.respawn = "HeroArcherTauntIntro"
    tt.unit.marker_offset = vec_2(0, 0)
    tt.unit.mod_offset = vec_2(0, 15)
    tt.melee.attacks[1].cooldown = 1
    tt.melee.attacks[1].hit_time = fts(8)
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].xp_gain_factor = 2.5
    tt.melee.range = 40
    tt.ranged.attacks[1] = E:clone_c("bullet_attack")
    tt.ranged.attacks[1].bullet = "arrow_hero_alleria"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(0, 12)}
    tt.ranged.attacks[1].max_range = 185
    tt.ranged.attacks[1].min_range = 40
    tt.ranged.attacks[1].shoot_time = fts(5)
    tt.ranged.attacks[1].cooldown = 0.4
    tt.ranged.attacks[2] = E:clone_c("bullet_attack")
    tt.ranged.attacks[2].animation = "multishot"
    tt.ranged.attacks[2].bullet = "arrow_multishot_hero_alleria"
    tt.ranged.attacks[2].bullet_start_offset = {vec_2(0, 12)}
    tt.ranged.attacks[2].cooldown = 3 + fts(29)
    tt.ranged.attacks[2].disabled = true
    tt.ranged.attacks[2].max_range = 200
    tt.ranged.attacks[2].min_range = 40
    tt.ranged.attacks[2].node_prediction = fts(10)
    tt.ranged.attacks[2].shoot_time = fts(12)
    tt.ranged.attacks[2].sound = "HeroArcherShoot"
    tt.ranged.attacks[2].xp_from_skill = "multishot"
    tt.timed_attacks.list[1] = E:clone_c("spawn_attack")
    tt.timed_attacks.list[1].animation = "callofwild"
    tt.timed_attacks.list[1].cooldown = 12
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].entity = "soldier_alleria_wildcat"
    tt.timed_attacks.list[1].pet = nil
    tt.timed_attacks.list[1].sound = "HeroArcherSummon"
    tt.timed_attacks.list[1].spawn_time = fts(10)
    tt.timed_attacks.list[1].min_range = 30
    tt.timed_attacks.list[1].max_range = 50

    tt = RT("arrow_hero_alleria", "arrow")
    tt.bullet.xp_gain_factor = 2.9
    tt.bullet.flight_time = fts(15)

    tt = RT("arrow_multishot_hero_alleria", "arrow")
    tt.bullet.particles_name = "ps_arrow_multishot_hero_alleria"
    tt.bullet.damage_min = 15
    tt.bullet.damage_max = 50
    tt.bullet.damage_type = DAMAGE_TRUE
    tt.extra_arrows_range = 200
    tt.extra_arrows = 2
    tt.main_script.insert = scripts.arrow_multishot_hero_alleria.insert
    tt.render.sprites[1].name = "hero_archer_arrow"

    tt = RT("ps_arrow_multishot_hero_alleria")
    AC(tt, "pos", "particle_system")
    tt.particle_system.name = "hero_archer_arrow_particle"
    tt.particle_system.animated = false
    tt.particle_system.alphas = {255, 0}
    tt.particle_system.particle_lifetime = {0.1, 0.1}
    tt.particle_system.emission_rate = 30
    tt.particle_system.track_rotation = true
    tt.particle_system.z = Z_BULLETS

    -- 博林
    tt = RT("hero_bolin", "hero")
    AC(tt, "melee", "timed_attacks")
    anchor_y = 0.24
    anchor_x = 0.5
    image_y = 82
    image_x = 92
    tt.hero.fixed_stat_attack = 6
    tt.hero.fixed_stat_health = 6
    tt.hero.fixed_stat_range = 5
    tt.hero.fixed_stat_speed = 4
    tt.hero.level_stats.armor = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    tt.hero.level_stats.hp_max = {400, 430, 460, 490, 520, 550, 580, 610, 640, 670}
    tt.hero.level_stats.melee_damage_max = {15, 18, 20, 23, 25, 28, 30, 33, 35, 38}
    tt.hero.level_stats.melee_damage_min = {9, 11, 12, 14, 15, 17, 18, 20, 21, 23}
    tt.hero.level_stats.ranged_damage_max = {26, 30, 36, 40, 46, 50, 56, 60, 66, 70}
    tt.hero.level_stats.ranged_damage_min = {9, 11, 12, 14, 15, 17, 18, 20, 21, 23}
    tt.hero.skills.mines = CC("hero_skill")
    tt.hero.skills.mines.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.mines.xp_gain = {25, 50, 75}
    tt.hero.skills.mines.damage_min = {30, 60, 100}
    tt.hero.skills.mines.damage_max = {60, 120, 150}
    tt.hero.skills.tar = CC("hero_skill")
    tt.hero.skills.tar.duration = {4, 6, 8}
    tt.hero.skills.tar.xp_level_steps = {
        [4] = 1,
        [7] = 2,
        [10] = 3
    }
    tt.hero.skills.tar.xp_gain = {50, 100, 150}
    tt.health.dead_lifetime = 15
    tt.health_bar.offset = vec_2(0, 43)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_bolin.level_up
    tt.hero.tombstone_show_time = fts(60)
    tt.info.damage_icon = "shot"
    tt.info.hero_portrait = IS_PHONE_OR_TABLET and "hero_portraits_0003" or "heroPortrait_portraits_0003"
    tt.info.i18n_key = "HERO_RIFLEMAN"
    tt.info.portrait = IS_PHONE_OR_TABLET and "portraits_hero_0003" or "info_portraits_hero_0002"
    tt.melee.range = 40
    tt.main_script.update = scripts.hero_bolin.update
    tt.motion.max_speed = 2.6 * FPS
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor = vec_2(0.5, 0.24)
    tt.render.sprites[1].prefix = "hero_bolin"
    tt.render.sprites[1].angles.shoot = {"shootRightLeft", "shootUp", "shootDown"}
    tt.render.sprites[1].angles.shootAim = {"shootAimRightLeft", "shootAimUp", "shootAimDown"}
    tt.soldier.melee_slot_offset = vec_2(5, 0)
    tt.sound_events.change_rally_point = "HeroRiflemanTaunt"
    tt.sound_events.death = "HeroRiflemanDeath"
    tt.sound_events.hero_room_select = "HeroRiflemanTauntSelect"
    tt.sound_events.insert = "HeroRiflemanTauntIntro"
    tt.sound_events.respawn = "HeroRiflemanTauntIntro"
    tt.ui.click_rect = r(-15, -5, 30, 35)
    tt.unit.marker_offset = vec_2(0, 0)
    tt.unit.mod_offset = vec_2(0, 15)
    tt.melee.attacks[1].cooldown = 1
    tt.melee.attacks[1].hit_time = fts(5)
    tt.melee.attacks[1].xp_gain_factor = 2
    -- 普攻
    tt.timed_attacks.list[1] = CC("bullet_attack")
    tt.timed_attacks.list[1].bullet = "shotgun_bolin"
    tt.timed_attacks.list[1].aim_animation = "shootAim"
    tt.timed_attacks.list[1].shoot_animation = "shoot"
    tt.timed_attacks.list[1].bullet_start_offset =
        {vec_2(0, 20), vec_2(0, 20), vec_2(0, 20), vec_2(0, 20), vec_2(0, 20)}
    tt.timed_attacks.list[1].cooldown = 2
    tt.timed_attacks.list[1].shoot_times = {fts(10), fts(12), fts(12), fts(12), fts(12)}
    tt.timed_attacks.list[1].max_shoots = 5
    tt.timed_attacks.list[1].min_range = 40
    tt.timed_attacks.list[1].max_range = 200
    tt.timed_attacks.list[1].shoot_time = fts(2)
    tt.timed_attacks.list[1].vis_bans = 0
    tt.timed_attacks.list[1].vis_flags = bor(F_RANGED)
    tt.timed_attacks.list[1].xp_gain_factor = 3
    tt.timed_attacks.list[1].damage_type = bor(DAMAGE_SHOT, DAMAGE_NO_DODGE)
    -- 倒油
    tt.timed_attacks.list[2] = CC("bullet_attack")
    tt.timed_attacks.list[2].bullet = "bomb_tar_bolin"
    tt.timed_attacks.list[2].bullet_start_offset = vec_2(0, 30)
    tt.timed_attacks.list[2].cooldown = 12 + fts(27)
    tt.timed_attacks.list[2].disabled = true
    tt.timed_attacks.list[2].min_range = 100
    tt.timed_attacks.list[2].max_range = 200
    tt.timed_attacks.list[2].shoot_time = fts(13)
    tt.timed_attacks.list[2].vis_bans = bor(F_FLYING)
    -- 地雷
    tt.timed_attacks.list[3] = CC("bullet_attack")
    tt.timed_attacks.list[3].bullet = "bomb_mine_bolin"
    tt.timed_attacks.list[3].bullet_start_offset = vec_2(0, 12)
    tt.timed_attacks.list[3].count = 5
    tt.timed_attacks.list[3].cooldown = 6 + fts(19)
    tt.timed_attacks.list[3].disabled = true
    tt.timed_attacks.list[3].min_range = 30
    tt.timed_attacks.list[3].max_range = 200
    tt.timed_attacks.list[3].shoot_time = fts(3)
    tt.timed_attacks.list[3].node_offset = {-12, 12}
    -- 狂热射击
    tt.timed_attacks.list[4] = table.deepclone(tt.timed_attacks.list[1])
    tt.timed_attacks.list[4].chance = 0.3
    tt.timed_attacks.list[4].bullet_start_offset = {vec_2(0, 20), vec_2(0, 20), vec_2(0, 20), vec_2(0, 20),
                                                    vec_2(0, 20), vec_2(0, 20), vec_2(0, 20)}
    tt.timed_attacks.list[4].shoot_times = {fts(10), fts(12), fts(12), fts(12), fts(12), fts(12), fts(12)}
    tt.timed_attacks.list[4].max_shoots = 7

    tt = RT("bomb_mine_bolin", "bomb")
    tt.bullet.damage_bans = F_ALL
    tt.bullet.damage_flags = 0
    tt.bullet.damage_max = 0
    tt.bullet.damage_min = 0
    tt.bullet.damage_radius = 35
    tt.bullet.flight_time = fts(24)
    tt.bullet.damage_type = DAMAGE_EXPLOSION
    tt.bullet.pop = nil
    tt.bullet.hit_payload = "decal_bolin_mine"
    tt.main_script.insert = scripts.bomb.insert
    tt.main_script.update = scripts.bomb.update
    tt.bullet.hit_fx = nil
    tt.bullet.hit_decal = nil
    tt.bullet.hide_radius = nil
    tt.render.sprites[1].name = "hero_artillery_mine_proy"
    tt.render.sprites[1].animated = false
    tt.sound_events.insert = "HeroRiflemanMine"
    tt.sound_events.hit = nil
    tt.sound_events.hit_water = nil

    tt = RT("decal_bolin_mine", "decal_scripted")
    tt.check_interval = fts(3)
    tt.damage_max = nil
    tt.damage_min = nil
    tt.damage_type = DAMAGE_EXPLOSION
    tt.duration = 50
    tt.hit_decal = "decal_bomb_crater"
    tt.hit_fx = "fx_explosion_fragment"
    tt.main_script.update = scripts.decal_bolin_mine.update
    tt.radius = 25
    tt.render.sprites[1].loop = true
    tt.render.sprites[1].name = "decal_bolin_mine"
    tt.render.sprites[1].z = Z_DECALS
    tt.sound = "BombExplosionSound"
    tt.vis_bans = bor(F_FRIEND, F_FLYING)
    tt.vis_flags = bor(F_ENEMY)

    tt = RT("bomb_tar_bolin", "bomb")
    tt.bullet.damage_bans = F_ALL
    tt.bullet.damage_flags = 0
    tt.bullet.damage_max = 0
    tt.bullet.damage_min = 0
    tt.bullet.damage_radius = 1
    tt.bullet.flight_time_base = fts(34)
    tt.bullet.flight_time_factor = fts(0.0167)
    tt.bullet.pop = nil
    tt.bullet.hit_payload = "aura_bolin_tar"
    tt.main_script.insert = scripts.bomb.insert
    tt.main_script.update = scripts.bomb.update
    tt.bullet.hit_fx = nil
    tt.bullet.hit_decal = nil
    tt.bullet.hide_radius = nil
    tt.render.sprites[1].name = "hero_artillery_brea_shot"
    tt.render.sprites[1].animated = false
    tt.sound_events.insert = "HeroRiflemanBrea"
    tt.sound_events.hit = nil
    tt.sound_events.hit_water = nil

    tt = RT("aura_bolin_tar", "aura")
    AC(tt, "render", "tween")
    tt.aura.cycle_time = fts(10)
    tt.aura.duration = 6
    tt.aura.mod = "mod_bolin_slow"
    tt.aura.radius = 65
    tt.aura.vis_bans = bor(F_FRIEND, F_FLYING)
    tt.aura.vis_flags = bor(F_ENEMY)
    tt.main_script.insert = scripts.aura_apply_mod.insert
    tt.main_script.update = scripts.aura_slow_bolin.update
    tt.render.sprites[1].prefix = "decal_bolin_tar"
    tt.render.sprites[1].name = "start"
    tt.render.sprites[1].loop = false
    tt.render.sprites[1].z = Z_DECALS
    tt.tween.remove = true
    tt.tween.disabled = true
    tt.tween.props[1].keys = {{0, 255}, {0.3, 0}}

    tt = RT("mod_bolin_slow", "mod_slow")
    tt.modifier.duration = 4
    tt.slow.factor = 0.6

    -- 马格努斯
    tt = RT("hero_magnus", "hero")
    AC(tt, "melee", "ranged", "timed_attacks", "teleport")
    anchor_y = 0.14
    anchor_x = 0.5
    image_y = 76
    image_x = 60
    tt.hero.fixed_stat_attack = 2
    tt.hero.fixed_stat_health = 2
    tt.hero.fixed_stat_range = 8
    tt.hero.fixed_stat_speed = 8
    tt.hero.level_stats.armor = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    tt.hero.level_stats.hp_max = {170, 190, 210, 230, 250, 270, 290, 310, 330, 350}
    tt.hero.level_stats.melee_damage_max = {2, 4, 5, 6, 7, 8, 10, 11, 12, 13}
    tt.hero.level_stats.melee_damage_min = {1, 2, 2, 3, 4, 5, 6, 6, 7, 8}
    tt.hero.level_stats.ranged_damage_max = {27, 32, 36, 41, 45, 50, 54, 59, 63, 68}
    tt.hero.level_stats.ranged_damage_min = {9, 11, 12, 14, 15, 17, 18, 20, 21, 23}
    tt.hero.skills.mirage = CC("hero_skill")
    tt.hero.skills.mirage.count = {1, 2, 3, 4, 5, 6}
    tt.hero.skills.mirage.health_factor = 0.15
    tt.hero.skills.mirage.damage_factor = 0.3
    tt.hero.skills.mirage.xp_level_steps = {
        [2] = 1,
        [3] = 2,
        [5] = 3,
        [6] = 4,
        [8] = 5,
        [9] = 6
    }
    tt.hero.skills.mirage.xp_gain = {75, 100, 125, 150, 175, 175}
    tt.hero.skills.arcane_rain = CC("hero_skill")
    tt.hero.skills.arcane_rain.count = {6, 11, 16}
    tt.hero.skills.arcane_rain.damage = {20, 25, 25}
    tt.hero.skills.arcane_rain.xp_level_steps = {
        [4] = 1,
        [7] = 2,
        [10] = 3

    }
    tt.hero.skills.arcane_rain.xp_gain = {75, 100, 150}
    tt.health.dead_lifetime = 15
    tt.health_bar.offset = vec_2(0, 33)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_magnus.level_up
    tt.hero.tombstone_show_time = fts(60)
    tt.info.hero_portrait = IS_PHONE_OR_TABLET and "hero_portraits_0005" or "heroPortrait_portraits_0005"
    tt.info.i18n_key = "HERO_MAGE"
    tt.info.portrait = IS_PHONE_OR_TABLET and "portraits_hero_0005" or "info_portraits_hero_0004"
    tt.main_script.update = scripts.hero_magnus.update
    tt.motion.max_speed = 1.2 * FPS
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor = vec_2(anchor_x, anchor_y)
    tt.render.sprites[1].prefix = "hero_magnus"
    tt.soldier.melee_slot_offset = vec_2(4, 0)
    tt.sound_events.death = "HeroMageDeath"
    tt.sound_events.insert = "HeroMageTauntIntro"
    tt.sound_events.respawn = "HeroMageTauntIntro"
    tt.sound_events.change_rally_point = "HeroMageTaunt"
    tt.sound_events.hero_room_select = "HeroMageTauntSelect"
    tt.teleport.min_distance = 0
    tt.teleport.delay = 0
    tt.teleport.sound = "TeleporthSound"
    tt.ui.click_rect = r(-13, -5, 26, 32)
    tt.unit.marker_offset = vec_2(0, 0)
    tt.unit.mod_offset = vec_2(0, 15)
    tt.melee.range = 45
    tt.melee.attacks[1].cooldown = 1
    tt.melee.attacks[1].hit_time = fts(12)
    tt.melee.attacks[1].xp_gain_factor = 2.5
    tt.melee.attacks[1].damage_type = DAMAGE_MAGICAL
    tt.ranged.attacks[1] = CC("bullet_attack")
    tt.ranged.attacks[1].bullet = "bolt_magnus"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(0, 23)}
    tt.ranged.attacks[1].max_range = 175
    tt.ranged.attacks[1].min_range = 50
    tt.ranged.attacks[1].shoot_time = fts(18)
    tt.ranged.attacks[1].cooldown = fts(33)
    tt.timed_attacks.list[1] = CC("spawn_attack")
    tt.timed_attacks.list[1].animation = "mirage"
    tt.timed_attacks.list[1].cooldown = 10 + fts(29)
    tt.timed_attacks.list[1].cast_time = fts(12)
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].entity = "soldier_magnus_illusion"
    tt.timed_attacks.list[1].sound = "HeroMageShadows"
    tt.timed_attacks.list[1].spawn_time = fts(19)
    tt.timed_attacks.list[1].initial_rally = vec_2(0, 30)
    tt.timed_attacks.list[1].initial_pos = vec_2(0, 33)
    tt.timed_attacks.list[1].radius = 30
    tt.timed_attacks.list[1].spawn_time = fts(19)
    tt.timed_attacks.list[1].spawn_time = fts(19)
    tt.timed_attacks.list[1].xp_from_skill = "mirage"
    tt.timed_attacks.list[2] = CC("spawn_attack")
    tt.timed_attacks.list[2].animation = "arcaneRain"
    tt.timed_attacks.list[2].entity = "magnus_arcane_rain_controller"
    tt.timed_attacks.list[2].cooldown = 14 + fts(25)
    tt.timed_attacks.list[2].cast_time = fts(15)
    tt.timed_attacks.list[2].disabled = true
    tt.timed_attacks.list[2].max_range = 200
    tt.timed_attacks.list[2].min_range = 0
    tt.timed_attacks.list[2].sound = "HeroMageRainCharge"
    tt.timed_attacks.list[2].vis_bans = bor(F_FRIEND)
    tt.timed_attacks.list[2].vis_flags = F_RANGED
    tt.timed_attacks.list[2].xp_from_skill = "arcane_rain"

    tt = RT("magnus_arcane_rain_controller", "decal_scripted")
    AC(tt, "tween")
    tt.main_script.update = scripts.magnus_arcane_rain_controller.update
    tt.duration = nil
    tt.count = nil
    tt.spawn_time = fts(6)
    tt.initial_angle = d2r(0)
    tt.angle_increment = d2r(70)
    tt.entity = "magnus_arcane_rain"
    tt.decal = "decal_magnus_arcane_rain"
    tt.render.sprites[1].name = "hero_mage_rain_decal"
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].z = Z_DECALS
    tt.tween.props[1].name = "alpha"
    tt.tween.props[1].keys = {{0, 0}, {0.5, 255}}
    tt.tween.remove = false
    tt.tween.disabled = true

    tt = E:register_t("magnus_arcane_rain")
    AC(tt, "render", "main_script", "pos")
    tt.damage_type = DAMAGE_TRUE
    tt.damage_radius = 40
    tt.damage_min = 20
    tt.damage_max = 20
    tt.hit_time = fts(10)
    tt.damage_flags = F_AREA
    tt.main_script.update = scripts.magnus_arcane_rain.update
    tt.render.sprites[1].prefix = "magnus_arcane_rain"
    tt.render.sprites[1].loop = false
    tt.render.sprites[1].anchor = vec_2(0.5, 0.07)
    tt.sound = "HeroMageRainDrop"

    tt = RT("hero_ignus", "hero")
    AC(tt, "melee", "timed_attacks")
    anchor_y = 0.1
    anchor_x = 0.5
    image_y = 72
    image_x = 60
    tt.hero.fixed_stat_attack = 8
    tt.hero.fixed_stat_health = 6
    tt.hero.fixed_stat_range = 0
    tt.hero.fixed_stat_speed = 6
    tt.hero.level_stats.armor = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    tt.hero.level_stats.hp_max = {400, 430, 460, 490, 520, 550, 580, 620, 660, 700}
    tt.hero.level_stats.melee_damage_max = {30, 33, 35, 38, 40, 43, 45, 48, 50, 53}
    tt.hero.level_stats.melee_damage_min = {18, 20, 21, 23, 24, 26, 27, 29, 30, 32}
    tt.hero.skills.flaming_frenzy = CC("hero_skill")
    tt.hero.skills.flaming_frenzy.damage_max = {30, 50, 70}
    tt.hero.skills.flaming_frenzy.damage_min = {20, 40, 60}
    tt.hero.skills.flaming_frenzy.xp_level_steps = {
        [4] = 1,
        [7] = 2,
        [10.0] = 3

    }
    tt.hero.skills.flaming_frenzy.xp_gain = {100, 200, 300}
    tt.hero.skills.surge_of_flame = CC("hero_skill")
    tt.hero.skills.surge_of_flame.damage_max = {20, 30, 40}
    tt.hero.skills.surge_of_flame.damage_min = {10, 20, 30}
    tt.hero.skills.surge_of_flame.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.surge_of_flame.xp_gain = {40, 80, 120}
    tt.health.dead_lifetime = 15
    tt.health_bar.offset = vec_2(0, 41)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_ignus.level_up
    tt.hero.tombstone_show_time = fts(60)
    tt.info.hero_portrait = IS_PHONE_OR_TABLET and "hero_portraits_0006" or "heroPortrait_portraits_0006"
    tt.info.fn = scripts.hero_basic.get_info
    tt.info.i18n_key = "HERO_FIRE"
    tt.info.portrait = IS_PHONE_OR_TABLET and "portraits_hero_0006" or "info_portraits_hero_0003"
    tt.main_script.update = scripts.hero_ignus.update
    tt.motion.max_speed = 4 * FPS
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor = vec_2(anchor_x, anchor_y)
    tt.render.sprites[1].prefix = "hero_ignus"
    tt.run_particles_name = "ps_ignus_run"
    tt.particles_aura = "aura_ignus_idle"
    tt.soldier.melee_slot_offset = vec_2(6, 0)
    tt.sound_events.change_rally_point = "HeroRainOfFireTaunt"
    tt.sound_events.death = "HeroRainOfFireDeath"
    tt.sound_events.hero_room_select = "HeroRainOfFireTauntSelect"
    tt.sound_events.insert = "HeroRainOfFireTauntIntro"
    tt.sound_events.respawn = "HeroRainOfFireTauntIntro"
    tt.unit.hit_offset = vec_2(0, 19)
    tt.unit.marker_offset = vec_2(0, 0)
    tt.unit.mod_offset = vec_2(0, 20)
    tt.vis.bans = bor(tt.vis.bans, F_BURN, F_POISON)
    tt.melee.range = 70
    tt.melee.attacks[1].cooldown = 0.8
    tt.melee.attacks[1].damage_type = DAMAGE_TRUE
    tt.melee.attacks[1].hit_time = fts(9)
    tt.melee.attacks[1].xp_gain_factor = 2
    tt.melee.attacks[1].sound_hit = "HeroReinforcementHit"
    tt.melee.attacks[1].shared_cooldown = true
    tt.melee.attacks[2] = table.deepclone(tt.melee.attacks[1])
    tt.melee.attacks[2].chance = 0
    -- this attack is unlocked by level up, with mod_ignus_burn attached
    tt.timed_attacks.list[1] = CC("custom_attack")
    tt.timed_attacks.list[1].animation = "flamingFrenzy"
    tt.timed_attacks.list[1].cast_time = fts(8)
    tt.timed_attacks.list[1].chance = 0.25
    tt.timed_attacks.list[1].cooldown = 4 + fts(24)
    tt.timed_attacks.list[1].damage_type = DAMAGE_TRUE
    tt.timed_attacks.list[1].decal = "decal_ignus_flaming"
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].heal_factor = 0.25
    tt.timed_attacks.list[1].hit_fx = "fx_ignus_burn"
    tt.timed_attacks.list[1].max_range = 90
    tt.timed_attacks.list[1].sound = "HeroRainOfFireArea"
    tt.timed_attacks.list[1].vis_bans = bor(F_FRIEND)
    tt.timed_attacks.list[1].vis_flags = bor(F_AREA)
    tt.timed_attacks.list[2] = CC("custom_attack")
    tt.timed_attacks.list[2].animations = {"surgeOfFlame", "surgeOfFlame_end"}
    tt.timed_attacks.list[2].aura = "aura_ignus_surge_of_flame"
    tt.timed_attacks.list[2].cooldown = 3.5
    tt.timed_attacks.list[2].disabled = true
    tt.timed_attacks.list[2].nodes_margin = 8
    tt.timed_attacks.list[2].min_range = 40
    tt.timed_attacks.list[2].max_range = 130
    tt.timed_attacks.list[2].speed_factor = 3.3333333333333335
    tt.timed_attacks.list[2].sound = "HeroRainOfFireFireball1"
    tt.timed_attacks.list[2].sound_end = "HeroRainOfFireFireball2"
    tt.timed_attacks.list[2].vis_bans = bor(F_FRIEND)
    tt.timed_attacks.list[2].vis_flags = bor(F_ENEMY, F_BLOCK)

    tt = RT("hero_malik", "hero")
    AC(tt, "melee")
    anchor_y = 0.1
    anchor_x = 0.5
    image_y = 100
    image_x = 96
    tt.hero.fixed_stat_attack = 7
    tt.hero.fixed_stat_health = 8
    tt.hero.fixed_stat_range = 0
    tt.hero.fixed_stat_speed = 4
    tt.hero.level_stats.armor = {0.02, 0.04, 0.06, 0.08, 0.1, 0.12, 0.14, 0.16, 0.18, 0.2}
    tt.hero.level_stats.hp_max = {450, 500, 550, 600, 650, 720, 790, 860, 930, 1000}
    tt.hero.level_stats.melee_damage_max = {26, 29, 31, 34, 36, 38, 41, 43, 45, 47}
    tt.hero.level_stats.melee_damage_min = {19, 20, 23, 24, 26, 28, 29, 31, 34, 37}
    tt.hero.skills.smash = CC("hero_skill")
    tt.hero.skills.smash.damage_min = {23, 28, 37}
    tt.hero.skills.smash.damage_max = {31, 38, 47}
    tt.hero.skills.smash.stun_chance = {0.2, 0.3, 0.4}
    tt.hero.skills.smash.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    -- tt.hero.skills.smash.xp_gain = {50, 100, 150}
    tt.hero.skills.fissure = CC("hero_skill")
    tt.hero.skills.fissure.damage_min = {15, 25, 35}
    tt.hero.skills.fissure.damage_max = {35, 45, 55}
    tt.hero.skills.fissure.xp_level_steps = {
        [4] = 1,
        [7] = 2,
        [10] = 3
    }
    tt.hero.skills.fissure.xp_gain = {50, 100, 150}
    tt.health.dead_lifetime = 15
    tt.health_bar.offset = vec_2(0, 38)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_malik.level_up
    tt.hero.tombstone_show_time = fts(60)
    tt.info.hero_portrait = IS_PHONE_OR_TABLET and "hero_portraits_0001" or "heroPortrait_portraits_0001"
    tt.info.i18n_key = "HERO_REINFORCEMENT"
    tt.info.portrait = IS_PHONE_OR_TABLET and "portraits_hero_0001" or "info_portraits_hero_0006"
    tt.main_script.update = scripts.hero_malik.update
    tt.motion.max_speed = 2.6 * FPS
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor = vec_2(0.5, 0.1)
    tt.render.sprites[1].prefix = "hero_malik"
    tt.soldier.melee_slot_offset = vec_2(5, 0)
    tt.sound_events.change_rally_point = "HeroReinforcementTaunt"
    tt.sound_events.death = "HeroReinforcementDeath"
    tt.sound_events.hero_room_select = "HeroReinforcementTauntSelect"
    tt.sound_events.insert = "HeroReinforcementTauntIntro"
    tt.sound_events.respawn = "HeroReinforcementTauntIntro"
    tt.unit.marker_offset = vec_2(0, 0)
    tt.unit.mod_offset = vec_2(0, 20)
    tt.melee.range = 65
    tt.melee.cooldown = 1
    tt.melee.attacks[1].cooldown = 1.2
    tt.melee.attacks[1].hit_time = fts(5)
    tt.melee.attacks[1].shared_cooldown = true
    tt.melee.attacks[1].xp_gain_factor = 1.6
    tt.melee.attacks[1].sound_hit = "HeroReinforcementHit"
    tt.melee.attacks[2] = table.deepclone(tt.melee.attacks[1])
    tt.melee.attacks[2].animation = "attack2"
    tt.melee.attacks[2].chance = 0.3
    tt.melee.attacks[2].xp_gain_factor = 3.6
    tt.melee.attacks[2].mod = "mod_malik_stun"
    tt.melee.attacks[3] = CC("area_attack")
    tt.melee.attacks[3].animation = "smash"
    tt.melee.attacks[3].cooldown = 3.2
    tt.melee.attacks[3].damage_max = nil
    tt.melee.attacks[3].damage_min = nil
    tt.melee.attacks[3].damage_radius = 90
    tt.melee.attacks[3].damage_type = DAMAGE_TRUE
    tt.melee.attacks[3].disabled = true
    tt.melee.attacks[3].hit_decal = "decal_bomb_crater"
    tt.melee.attacks[3].hit_fx = "decal_malik_ring"
    tt.melee.attacks[3].hit_time = fts(14)
    tt.melee.attacks[3].hit_offset = vec_2(22, 0)
    tt.melee.attacks[3].min_count = 1
    tt.melee.attacks[3].sound = "HeroReinforcementSpecial"
    -- tt.melee.attacks[3].xp_from_skill = "smash"
    tt.melee.attacks[3].mod = "mod_malik_stun"
    tt.melee.attacks[3].mod_chance = 0.2
    tt.melee.attacks[3].xp_gain_factor = 1.6
    tt.melee.attacks[4] = CC("area_attack")
    tt.melee.attacks[4].animation = "fissure"
    tt.melee.attacks[4].cooldown = 10 + fts(37)
    tt.melee.attacks[4].damage_max = 0
    tt.melee.attacks[4].damage_min = 0
    tt.melee.attacks[4].damage_radius = 50
    tt.melee.attacks[4].damage_type = DAMAGE_NONE
    tt.melee.attacks[4].disabled = true
    tt.melee.attacks[4].hit_aura = "aura_malik_fissure"
    tt.melee.attacks[4].hit_offset = vec_2(22, 0)
    tt.melee.attacks[4].hit_time = fts(17)
    tt.melee.attacks[4].sound = "HeroReinforcementJump"
    tt.melee.attacks[4].xp_from_skill = "fissure"

    tt = RT("aura_malik_fissure", "aura")
    tt.aura.fx = "decal_malik_earthquake"
    tt.aura.damage_radius = 40
    tt.aura.damage_type = DAMAGE_TRUE
    tt.aura.vis_flags = bor(F_RANGED)
    tt.aura.spread_delay = fts(4)
    tt.aura.spread_nodes = 4
    tt.main_script.update = scripts.aura_malik_fissure.update
    tt.stun = {
        vis_flags = bor(F_RANGED, F_STUN),
        vis_bans = bor(F_FLYING, F_BOSS),
        mod = "mod_malik_stun"
    }

    tt = RT("mod_malik_stun", "mod_stun")
    tt.modifier.vis_flags = bor(F_MOD, F_STUN)
    tt.modifier.vis_bans = bor(F_FLYING, F_BOSS)

    tt = RT("decal_malik_ring", "decal_timed")
    tt.render.sprites[1].name = "decal_malik_ring"
    tt.render.sprites[1].z = Z_DECALS
    tt = RT("decal_malik_earthquake", "decal_bomb_crater")
    tt.render.sprites[2] = CC("sprite")
    tt.render.sprites[2].name = "decal_malik_earthquake"
    tt.render.sprites[2].hide_after_runs = 1
    tt.render.sprites[2].anchor.y = 0.24

    tt = RT("hero_denas", "hero")
    AC(tt, "melee", "ranged", "timed_attacks")
    anchor_y = 0.26
    anchor_x = 0.5
    image_y = 108
    image_x = 152
    tt.hero.fixed_stat_attack = 6
    tt.hero.fixed_stat_health = 5
    tt.hero.fixed_stat_range = 6
    tt.hero.fixed_stat_speed = 3
    tt.hero.level_stats.armor = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    tt.hero.level_stats.hp_max = {300, 340, 380, 420, 450, 480, 510, 530, 550, 570}
    tt.hero.level_stats.melee_damage_max = {19, 23, 28, 33, 38, 42, 47, 52, 56, 61}
    tt.hero.level_stats.melee_damage_min = {11, 14, 17, 20, 23, 25, 28, 31, 34, 37}
    tt.hero.level_stats.ranged_damage_max = {19, 23, 28, 33, 38, 42, 47, 52, 56, 61}
    tt.hero.level_stats.ranged_damage_min = {11, 14, 17, 20, 23, 25, 28, 31, 34, 37}
    tt.hero.skills.tower_buff = CC("hero_skill")
    tt.hero.skills.tower_buff.duration = {5, 8, 11}
    tt.hero.skills.tower_buff.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.tower_buff.xp_gain = {75, 125, 175}
    tt.hero.skills.catapult = CC("hero_skill")
    tt.hero.skills.catapult.count = {5, 7, 9}
    tt.hero.skills.catapult.damage_min = {15, 18, 21}
    tt.hero.skills.catapult.damage_max = {30, 36, 42}
    tt.hero.skills.catapult.xp_level_steps = {
        [4] = 1,
        [7] = 2,
        [10] = 3
    }
    tt.hero.skills.catapult.xp_gain = {100, 200, 300}
    tt.health.dead_lifetime = 15
    tt.health_bar.offset = vec_2(0, 60)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_denas.level_up
    tt.hero.tombstone_show_time = fts(60)
    tt.info.hero_portrait = IS_PHONE_OR_TABLET and "hero_portraits_0007" or "heroPortrait_portraits_0007"
    tt.info.i18n_key = "HERO_DENAS"
    tt.info.portrait = IS_PHONE_OR_TABLET and "portraits_hero_0008" or "info_portraits_hero_0008"
    tt.main_script.update = scripts.hero_denas.update
    tt.motion.max_speed = 2.6 * FPS
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor = vec_2(anchor_x, anchor_y)
    tt.render.sprites[1].prefix = "hero_denas"
    tt.soldier.melee_slot_offset = vec_2(22, 0)
    tt.sound_events.change_rally_point = "HeroDenasTaunt"
    tt.sound_events.death = "HeroDenasDeath"
    tt.sound_events.hero_room_select = "HeroDenasTauntSelect"
    tt.sound_events.insert = "HeroRainOfFireTauntIntro"
    tt.sound_events.respawn = "HeroRainOfFireTauntIntro"
    tt.ui.click_rect = r(-22, 15, 44, 32)
    tt.unit.hit_offset = vec_2(0, 31)
    tt.unit.marker_offset = vec_2(0, 0)
    tt.unit.mod_offset = vec_2(0, 30)
    tt.melee.range = 45
    tt.ranged.attacks[1] = CC("bullet_attack")
    tt.ranged.attacks[1].animations = {"attack", "attackBarrell", "attackChicken", "attackBottle"}
    tt.ranged.attacks[1].bullet = "projectile_denas"
    tt.ranged.attacks[1].bullets = {"projectile_denas", "projectile_denas_barrell", "projectile_denas_chicken",
                                    "projectile_denas_bottle"}
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(10, 36)}
    tt.ranged.attacks[1].cooldown = fts(19)
    tt.ranged.attacks[1].max_range = 175
    tt.ranged.attacks[1].min_range = 45
    tt.ranged.attacks[1].node_prediction = fts(10)
    tt.ranged.attacks[1].shoot_time = fts(7)
    tt.timed_attacks.list[1] = table.deepclone(tt.ranged.attacks[1])
    tt.timed_attacks.list[1].bullets = {"projectile_denas_melee", "projectile_denas_melee_barrell",
                                        "projectile_denas_melee_chicken", "projectile_denas_melee_bottle"}
    tt.timed_attacks.list[1].cooldown = 1.5
    tt.timed_attacks.list[1].min_range = 0
    tt.timed_attacks.list[2] = CC("mod_attack")
    tt.timed_attacks.list[2].animation = "buffTowers"
    tt.timed_attacks.list[2].cooldown = 10 + fts(51)
    tt.timed_attacks.list[2].cast_time = fts(13)
    tt.timed_attacks.list[2].curse_time = fts(2)
    tt.timed_attacks.list[2].disabled = true
    tt.timed_attacks.list[2].max_range = 200
    tt.timed_attacks.list[2].min_range = 0
    tt.timed_attacks.list[2].mod = "mod_denas_tower"
    tt.timed_attacks.list[2].aura = "denas_buff_aura"
    tt.timed_attacks.list[2].sound = "HeroDenasBuff"
    tt.timed_attacks.list[2].xp_from_skill = "buff_towers"
    tt.timed_attacks.list[3] = CC("spawn_attack")
    tt.timed_attacks.list[3].animation = "catapult"
    tt.timed_attacks.list[3].entity = "denas_catapult_controller"
    tt.timed_attacks.list[3].cooldown = 10 + fts(40)
    tt.timed_attacks.list[3].cast_time = fts(15)
    tt.timed_attacks.list[3].disabled = true
    tt.timed_attacks.list[3].max_range = 165
    tt.timed_attacks.list[3].min_range = 50
    tt.timed_attacks.list[3].sound = "HeroDenasAttack"
    tt.timed_attacks.list[3].vis_bans = F_FRIEND
    tt.timed_attacks.list[3].vis_flags = F_RANGED
    tt.timed_attacks.list[3].xp_from_skill = "catapult"

    tt = RT("denas_cursing", "decal_scripted")
    tt.render.sprites[1].name = "hero_denas_cursing"
    tt.render.sprites[1].anchor = vec_2(0.5, 0.5)
    tt.render.sprites[1].z = Z_OBJECTS
    tt.duration = fts(36)
    tt.offset = vec_2(0, 25)
    tt.main_script.update = scripts.denas_cursing.update

    tt = RT("denas_catapult_controller", "decal_scripted")
    AC(tt, "tween", "sound_events")
    tt.count = nil
    tt.bullet = "denas_catapult_rock"
    tt.main_script.update = scripts.denas_catapult_controller.update
    tt.initial_angle = d2r(0)
    tt.initial_delay = 0.25
    tt.rock_delay = {fts(2), fts(8)}
    tt.angle_increment = d2r(60)
    tt.rock_offset = vec_2(90, 100)
    tt.exit_time = 0.5 + fts(45)
    tt.render.sprites[1].name = "hero_king_catapultDecal"
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].z = Z_DECALS
    tt.tween.props[1].name = "alpha"
    tt.tween.props[1].keys = {{0, 0}, {0.2, 255}}
    tt.tween.remove = false
    tt.sound_events.shoot = "BombShootSound"

    tt = RT("denas_buffing_circle", "decal_timed")
    AC(tt, "tween")
    tt.render.sprites[1].name = "hero_king_glow"
    tt.render.sprites[1].anchor = vec_2(0.5, 0.26)
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].z = Z_DECALS
    tt.tween.disabled = false
    tt.tween.props[1].name = "alpha"
    tt.tween.props[1].keys = {{0, 25.5}, {0.33, 255}, {1, 0}}
    tt.tween.props[2] = CC("tween_prop")
    tt.tween.props[2].name = "scale"
    tt.tween.props[2].keys = {{0, vec_2(0.7, 0.7)}, {1, vec_2(1.8, 1.8)}}
    tt.tween.remove = true

    tt = RT("mod_denas_tower", "modifier")
    AC(tt, "render", "tween")
    tt.range_factor = 1.25
    tt.cooldown_factor = 0.75
    tt.main_script.insert = scripts.mod_denas_tower.insert
    tt.main_script.remove = scripts.mod_denas_tower.remove
    tt.main_script.update = scripts.mod_denas_tower.update
    tt.modifier.duration = nil
    tt.modifier.use_mod_offset = false
    tt.render.sprites[1].draw_order = 11
    tt.render.sprites[1].name = "mod_denas_tower"
    tt.render.sprites[1].anchor = vec_2(0.5, 0.32)
    tt.render.sprites[1].z = Z_OBJECTS
    tt.render.sprites[1].offset.y = 7
    tt.tween.props[1].name = "alpha"
    tt.tween.props[1].keys = {{0, 0}, {0.5, 255}}
    tt.tween.remove = false

    tt = RT("projectile_denas", "arrow")
    AC(tt, "sound_events")
    tt.bullet.flight_time = fts(20)
    tt.bullet.rotation_speed = 15 * FPS * math.pi / 180
    tt.bullet.damage_min = 11
    tt.bullet.damage_max = 19
    tt.bullet.hit_blood_fx = "fx_blood_splat"
    tt.bullet.miss_decal = nil
    tt.bullet.miss_fx = "fx_smoke_bullet"
    tt.bullet.track_kills = true
    tt.bullet.xp_gain_factor = 2.42
    tt.render.sprites[1].name = "hero_king_projectiles_0001"
    tt.render.sprites[1].animated = false
    tt.sound_events.insert = "AxeSound"

    tt = RT("projectile_denas_barrell", "projectile_denas")
    tt.render.sprites[1].name = "hero_king_projectiles_0002"
    tt = RT("projectile_denas_chicken", "projectile_denas")
    tt.render.sprites[1].name = "hero_king_projectiles_0003"
    tt = RT("projectile_denas_bottle", "projectile_denas")
    tt.render.sprites[1].name = "hero_king_projectiles_0004"
    tt = RT("projectile_denas_melee", "projectile_denas")
    tt.bullet.flight_time = fts(13)
    tt = RT("projectile_denas_melee_barrell", "projectile_denas_barrell")
    tt.bullet.flight_time = fts(13)
    tt = RT("projectile_denas_melee_chicken", "projectile_denas_chicken")
    tt.bullet.flight_time = fts(13)
    tt = RT("projectile_denas_melee_bottle", "projectile_denas_bottle")
    tt.bullet.flight_time = fts(13)

    tt = E:register_t("denas_catapult_rock", "bomb")
    tt.bullet.flight_time = fts(45)
    tt.bullet.damage_radius = 45
    tt.bullet.damage_min = nil
    tt.bullet.damage_max = nil
    tt.bullet.damage_type = DAMAGE_EXPLOSION
    tt.bullet.g = -0.8 / (fts(1) * fts(1))
    tt.bullet.particles_name = "ps_power_fireball"
    tt.render.sprites[1].name = "hero_king_catapultProjectile"
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].scale = vec_2(0.7, 0.7)
    tt.sound_events.insert = nil

    tt = RT("denas_buff_aura", "aura")
    AC(tt, "main_script", "render", "tween")
    tt.aura.duration = 1.63
    tt.entity = "denas_buffing_circle"
    tt.main_script.update = scripts.denas_buff_aura.update
    tt.render.sprites[1].name = "hero_king_glowShadow"
    tt.render.sprites[1].anchor = vec_2(0.5, 0.26)
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].z = Z_DECALS
    tt.tween.disabled = true
    tt.tween.props[1].name = "alpha"
    tt.tween.props[1].keys = {{0, 0}, {0.13, 255}, {1.63, 255}, {2.76, 0}}
    tt.tween.remove = true

    tt = RT("hero_ingvar", "hero")
    AC(tt, "melee", "timed_attacks", "auras")
    anchor_y = 0.19
    anchor_x = 0.5
    image_y = 116
    image_x = 142
    tt.hero.fixed_stat_attack = 8
    tt.hero.fixed_stat_health = 8
    tt.hero.fixed_stat_range = 0
    tt.hero.fixed_stat_speed = 5
    tt.hero.level_stats.armor = {0.13, 0.16, 0.19, 0.22, 0.25, 0.28, 0.31, 0.34, 0.37, 0.4}
    tt.hero.level_stats.hp_max = {430, 460, 490, 520, 550, 580, 610, 640, 670, 670}
    tt.hero.level_stats.melee_damage_max = {45, 49, 54, 58, 63, 67, 72, 76, 81, 85}
    tt.hero.level_stats.melee_damage_min = {27, 30, 32, 34, 38, 40, 43, 45, 49, 51}
    tt.hero.skills.ancestors_call = CC("hero_skill")
    tt.hero.skills.ancestors_call.count = {1, 2, 3, 4}
    tt.hero.skills.ancestors_call.hp_max = {150, 200, 250, 300}
    tt.hero.skills.ancestors_call.damage_min = {2, 4, 6, 8}
    tt.hero.skills.ancestors_call.damage_max = {6, 8, 10, 12}
    tt.hero.skills.ancestors_call.max_speed = {69, 72, 75, 78}
    tt.hero.skills.ancestors_call.xp_level_steps = {
        [2] = 1,
        [4] = 2,
        [6] = 3,
        [8] = 4
    }
    tt.hero.skills.ancestors_call.xp_gain = {100, 200, 300, 350}
    tt.hero.skills.bear = CC("hero_skill")
    tt.hero.skills.bear.damage_min = {24, 42, 60}
    tt.hero.skills.bear.damage_max = {50, 66, 86}
    tt.hero.skills.bear.duration = {10, 12, 14}
    tt.hero.skills.bear.xp_level_steps = {
        [4] = 1,
        [7] = 2,
        [10] = 3
    }
    tt.hero.skills.bear.xp_gain = {100, 200, 300}
    tt.auras.list[1] = CC("aura_attack")
    tt.auras.list[1].name = "aura_ingvar_bear_regenerate"
    tt.health.dead_lifetime = 15
    tt.health_bar.offset = vec_2(0, ady(68))
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_ingvar.level_up
    tt.hero.tombstone_show_time = fts(60)
    tt.info.hero_portrait = IS_PHONE_OR_TABLET and "hero_portraits_0009" or "heroPortrait_portraits_0009"
    tt.info.fn = scripts.hero_ingvar.get_info
    tt.info.i18n_key = "HERO_VIKING"
    tt.info.portrait = IS_PHONE_OR_TABLET and "portraits_hero_0010" or "info_portraits_hero_0010"
    tt.main_script.update = scripts.hero_ingvar.update
    tt.motion.max_speed = 3.2 * FPS
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor = vec_2(anchor_x, anchor_y)
    tt.render.sprites[1].prefix = "hero_ingvar"
    tt.soldier.melee_slot_offset = vec_2(14, 0)
    tt.sound_events.change_rally_point = "HeroVikingTaunt"
    tt.sound_events.change_rally_point_viking = "HeroVikingTaunt"
    tt.sound_events.change_rally_point_bear = "HeroVikingBearTransform"
    tt.sound_events.death = "HeroVikingDeath"
    tt.sound_events.hero_room_select = "HeroVikingTauntSelect"
    tt.sound_events.insert = "HeroVikingTauntIntro"
    tt.sound_events.respawn = "HeroVikingTauntIntro"
    tt.unit.marker_offset = vec_2(0, 0)
    tt.unit.mod_offset = vec_2(0, 20)
    tt.unit.hit_offset = vec_2(0, 20)
    tt.melee.range = 83.2
    tt.melee.attacks[1].cooldown = 1
    tt.melee.attacks[1].hit_time = fts(12)
    tt.melee.attacks[1].sound_hit = "HeroVikingAttackHit"
    tt.melee.attacks[1].hit_decal = "decal_ingvar_attack"
    tt.melee.attacks[1].hit_offset = vec_2(48, -1)
    tt.melee.attacks[1].shared_cooldown = true
    tt.melee.attacks[1].xp_gain_factor = 1.2
    tt.melee.attacks[2] = CC("area_attack")
    tt.melee.attacks[2].cooldown = 1
    tt.melee.attacks[2].sound_hit = "HeroVikingAttackHit"
    tt.melee.attacks[2].hit_decal = "decal_ingvar_attack"
    tt.melee.attacks[2].shared_cooldown = true
    tt.melee.attacks[2].animation = "attack2"
    tt.melee.attacks[2].chance = 0.4
    tt.melee.attacks[2].xp_gain_factor = 1.6
    tt.melee.attacks[2].hit_time = fts(15)
    tt.melee.attacks[2].hit_offset = vec_2(0, 2)
    tt.melee.attacks[2].damage_radius = 70
    tt.melee.attacks[2].damage_type = DAMAGE_RUDE
    tt.melee.attacks[3] = CC("melee_attack")
    tt.melee.attacks[3].animations = {nil, "attack"}
    tt.melee.attacks[3].cooldown = 3
    tt.melee.attacks[3].disabled = true
    tt.melee.attacks[3].damage_min = nil
    tt.melee.attacks[3].damage_max = nil
    tt.melee.attacks[3].hit_times = {fts(10), fts(25), fts(41)}
    tt.melee.attacks[3].loopable = true
    tt.melee.attacks[3].loops = 1
    tt.melee.attacks[3].sound_hit = "HeroVikingAttackHit"
    tt.melee.attacks[3].sound = "HeroVikingBearAttackStart"
    tt.melee.attacks[3].vis_flags = F_BLOCK
    tt.melee.attacks[3].xp_gain_factor = 2
    tt.timed_attacks.list[1] = CC("spawn_attack")
    tt.timed_attacks.list[1].animation = "ancestors"
    tt.timed_attacks.list[1].cooldown = 12
    tt.timed_attacks.list[1].cast_time = fts(15)
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].entity = "soldier_ingvar_ancestor"
    tt.timed_attacks.list[1].sound = "HeroVikingCall"
    tt.timed_attacks.list[1].sound_args = {
        delay = fts(5)
    }
    tt.timed_attacks.list[1].nodes_offset = {4, 8}
    tt.timed_attacks.list[2] = CC("custom_attack")
    tt.timed_attacks.list[2].cooldown = 10
    tt.timed_attacks.list[2].disabled = true
    tt.timed_attacks.list[2].duration = nil
    tt.timed_attacks.list[2].transform_health_factor = 0.5
    tt.timed_attacks.list[2].immune_to = DAMAGE_BASE_TYPES
    tt.timed_attacks.list[2].sound = "HeroVikingBearTransform"

    tt = RT("hero_elora", "hero")
    AC(tt, "melee", "ranged", "timed_attacks")
    anchor_y = 0.17
    anchor_x = 0.5
    tt.hero.fixed_stat_attack = 2
    tt.hero.fixed_stat_health = 3
    tt.hero.fixed_stat_range = 8
    tt.hero.fixed_stat_speed = 7
    tt.hero.level_stats.armor = {0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5}
    tt.hero.level_stats.hp_max = {270, 290, 310, 330, 350, 370, 390, 410, 430, 450}
    tt.hero.level_stats.melee_damage_max = {2, 4, 6, 8, 11, 13, 16, 18, 20, 23}
    tt.hero.level_stats.melee_damage_min = {1, 2, 4, 6, 7, 9, 10, 12, 14, 15}
    tt.hero.level_stats.ranged_damage_max = {41, 47, 54, 61, 68, 74, 81, 88, 95, 101}
    tt.hero.level_stats.ranged_damage_min = {18, 20, 23, 25, 27, 29, 32, 34, 36, 38}
    tt.hero.skills.chill = CC("hero_skill")
    tt.hero.skills.chill.slow_factor = {0.4, 0.3, 0.2}
    tt.hero.skills.chill.max_range = {153.6, 166.4, 179.2}
    tt.hero.skills.chill.count = {6, 8, 10}
    tt.hero.skills.chill.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.chill.xp_gain = {125, 250, 375}
    tt.hero.skills.ice_storm = CC("hero_skill")
    tt.hero.skills.ice_storm.count = {3, 5, 8}
    tt.hero.skills.ice_storm.damage_max = {40, 50, 60}
    tt.hero.skills.ice_storm.damage_min = {20, 20, 30}
    tt.hero.skills.ice_storm.max_range = {154, 167, 180}
    tt.hero.skills.ice_storm.xp_level_steps = {
        [10] = 3,
        [4] = 1,
        [7] = 2
    }
    tt.hero.skills.ice_storm.xp_gain = {100, 200, 300}
    tt.health.dead_lifetime = 15
    tt.health_bar.offset = vec_2(0, 46)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_elora.level_up
    tt.hero.tombstone_show_time = fts(60)
    tt.info.hero_portrait = IS_PHONE_OR_TABLET and "hero_portraits_0008" or "heroPortrait_portraits_0008"
    tt.info.i18n_key = "HERO_FROST_SORCERER"
    tt.info.fn = scripts.hero_basic.get_info
    tt.info.portrait = IS_PHONE_OR_TABLET and "portraits_hero_0009" or "info_portraits_hero_0009"
    tt.main_script.update = scripts.hero_elora.update
    tt.motion.max_speed = 3.5 * FPS
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor = vec_2(0.5, 0.17)
    tt.render.sprites[1].prefix = "hero_elora"
    tt.render.sprites[2] = CC("sprite")
    tt.render.sprites[2].name = "hero_elora_frostEffect"
    tt.render.sprites[2].anchor = vec_2(0.5, 0.1)
    tt.render.sprites[2].hidden = true
    tt.render.sprites[2].loop = true
    tt.render.sprites[2].ignore_start = true
    tt.run_particles_name = "ps_elora_run"
    tt.soldier.melee_slot_offset = vec_2(12, 0)
    tt.sound_events.change_rally_point = "HeroFrostTaunt"
    tt.sound_events.death = "HeroFrostDeath"
    tt.sound_events.hero_room_select = "HeroFrostTauntSelect"
    tt.sound_events.insert = "HeroFrostTauntIntro"
    tt.sound_events.respawn = "HeroFrostTauntIntro"
    tt.ui.click_rect = r(-15, -5, 30, 40)
    tt.unit.mod_offset = vec_2(0, 15)
    tt.melee.attacks[1].cooldown = 1.5
    tt.melee.attacks[1].hit_time = fts(14)
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].xp_gain_factor = 2
    tt.melee.attacks[1].damage_type = DAMAGE_PHYSICAL
    tt.melee.range = 45
    tt.ranged.attacks[1] = E:clone_c("bullet_attack")
    tt.ranged.attacks[1].cooldown = fts(40)
    tt.ranged.attacks[1].bullet = "bolt_elora_freeze"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(18, 36)}
    tt.ranged.attacks[1].chance = 0.2
    tt.ranged.attacks[1].filter_fn = scripts.hero_elora.freeze_filter_fn
    tt.ranged.attacks[1].min_range = 23.04
    tt.ranged.attacks[1].max_range = 166.4
    tt.ranged.attacks[1].shoot_time = fts(19)
    tt.ranged.attacks[1].shared_cooldown = true
    tt.ranged.attacks[1].vis_bans = bor(F_BOSS)
    tt.ranged.attacks[1].vis_flags = bor(F_RANGED)
    tt.ranged.attacks[1].xp_gain_factor = 2
    tt.ranged.attacks[2] = table.deepclone(tt.ranged.attacks[1])
    tt.ranged.attacks[2].bullet = "bolt_elora_slow"
    tt.ranged.attacks[2].chance = 1
    tt.ranged.attacks[2].filter_fn = nil
    tt.ranged.attacks[2].vis_bans = 0
    tt.timed_attacks.list[1] = CC("custom_attack")
    tt.timed_attacks.list[1].animation = "iceStorm"
    tt.timed_attacks.list[1].bullet = "elora_ice_spike"
    tt.timed_attacks.list[1].cast_time = fts(24)
    tt.timed_attacks.list[1].cooldown = 10 + fts(39)
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].max_range = nil
    tt.timed_attacks.list[1].min_range = 38.4
    tt.timed_attacks.list[1].nodes_offset = 4
    tt.timed_attacks.list[1].sound = "HeroFrostIceRainSummon"
    tt.timed_attacks.list[1].vis_bans = F_FRIEND
    tt.timed_attacks.list[1].vis_flags = F_RANGED
    tt.timed_attacks.list[1].xp_from_skill = "ice_storm"
    tt.timed_attacks.list[2] = CC("aura_attack")
    tt.timed_attacks.list[2].animation = "chill"
    tt.timed_attacks.list[2].bullet = "aura_chill_elora"
    tt.timed_attacks.list[2].cast_time = fts(18)
    tt.timed_attacks.list[2].cooldown = 8 + fts(28)
    tt.timed_attacks.list[2].disabled = true
    tt.timed_attacks.list[2].max_range = nil
    tt.timed_attacks.list[2].min_range = 19.2
    tt.timed_attacks.list[2].sound = "HeroFrostGroundFreeze"
    tt.timed_attacks.list[2].step = 3
    tt.timed_attacks.list[2].nodes_offset = 6
    tt.timed_attacks.list[2].vis_bans = bor(F_FLYING, F_FRIEND)
    tt.timed_attacks.list[2].vis_flags = F_RANGED
    tt.timed_attacks.list[2].xp_from_skill = "chill"

    tt = RT("hero_oni", "hero")
    AC(tt, "melee", "timed_attacks")
    anchor_y = 0.14285714285714285
    anchor_x = 0.5
    image_y = 112
    image_x = 128
    tt.hero.fixed_stat_attack = 8
    tt.hero.fixed_stat_health = 7
    tt.hero.fixed_stat_range = 0
    tt.hero.fixed_stat_speed = 6
    tt.hero.level_stats.armor = {0.32, 0.35, 0.38, 0.41, 0.45, 0.48, 0.51, 0.54, 0.57, 0.6}
    tt.hero.level_stats.hp_max = {425, 450, 475, 500, 525, 550, 575, 600, 625, 650}
    tt.hero.level_stats.melee_damage_max = {41, 45, 49, 53, 56, 60, 64, 68, 71, 75}
    tt.hero.level_stats.melee_damage_min = {18, 19, 20, 21, 23, 24, 25, 26, 27, 28}
    tt.hero.skills.rage = CC("hero_skill")
    tt.hero.skills.rage.rage_max = {45, 56, 67, 78}
    tt.hero.skills.rage.unyield_max = {0.2, 0.25, 0.3, 0.35}
    tt.hero.skills.rage.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.hero.skills.death_strike = CC("hero_skill")
    tt.hero.skills.death_strike.chance = {0.1, 0.15, 0.2}
    tt.hero.skills.death_strike.damage = {180, 260, 340}
    tt.hero.skills.death_strike.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [9] = 3
    }
    tt.hero.skills.death_strike.xp_gain = {100, 150, 200}
    tt.hero.skills.torment = CC("hero_skill")
    tt.hero.skills.torment.min_damage = {50, 80, 110}
    tt.hero.skills.torment.max_damage = {80, 110, 140}
    tt.hero.skills.torment.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.torment.xp_gain = {100, 150, 200}
    tt.health.dead_lifetime = 15
    tt.health.on_damage = scripts.hero_oni.on_damage
    tt.health_bar.offset = vec_2(0, 50)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_oni.level_up
    tt.hero.tombstone_show_time = fts(150)
    tt.info.hero_portrait = IS_PHONE_OR_TABLET and "hero_portraits_0011" or "heroPortrait_portraits_0011"
    tt.info.i18n_key = "HERO_SAMURAI"
    tt.info.portrait = IS_PHONE_OR_TABLET and "portraits_hero_0013" or "info_portraits_hero_0013"
    tt.melee.range = 65
    tt.main_script.update = scripts.hero_oni.update
    tt.main_script.insert = scripts.hero_oni.insert
    tt.motion.max_speed = 3.2 * FPS
    tt.regen.cooldown = 1
    tt.render.sprites[1].prefix = "hero_oni"
    tt.render.sprites[1].anchor = vec_2(0.5, 0.14285714285714285)
    tt.soldier.melee_slot_offset = vec_2(8, 0)
    tt.sound_events.change_rally_point = "HeroSamuraiTaunt"
    tt.sound_events.death = "HeroSamuraiDeath"
    tt.sound_events.hero_room_select = "HeroSamuraiTauntSelect"
    tt.sound_events.insert = "HeroSamuraiTauntIntro"
    tt.sound_events.respawn = "HeroSamuraiTauntIntro"
    tt.unit.hit_offset = vec_2(0, 21)
    tt.unit.marker_offset = vec_2(0, 0)
    tt.unit.mod_offset = vec_2(0, 15)
    tt.unit.pop_offset = vec_2(0, 10)
    tt.melee.attacks[1].cooldown = 1
    tt.melee.attacks[1].hit_time = fts(15)
    tt.melee.attacks[1].xp_gain_factor = 2.4
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[2] = CC("melee_attack")
    tt.melee.attacks[2].animation = "deathStrike"
    tt.melee.attacks[2].chance = 0.15
    tt.melee.attacks[2].cooldown = 9 + fts(48)
    tt.melee.attacks[2].disabled = true
    tt.melee.attacks[2].damage_min = 180
    tt.melee.attacks[2].damage_max = 180
    tt.melee.attacks[2].damage_type = bor(DAMAGE_NO_DODGE, DAMAGE_INSTAKILL)
    tt.melee.attacks[2].hit_time = fts(28)
    tt.melee.attacks[2].pop = {"pop_splat"}
    tt.melee.attacks[2].pop_chance = 1
    tt.melee.attacks[2].sound = "HeroSamuraiDeathStrike"
    tt.melee.attacks[2].shared_cooldown = true
    tt.melee.attacks[2].xp_from_skill = "death_strike"
    tt.melee.attacks[2].vis_flags = bor(F_INSTAKILL)
    tt.melee.attacks[2].vis_bans = bor(F_BOSS)
    tt.melee.attacks[3] = table.deepclone(tt.melee.attacks[2])
    tt.melee.attacks[3].chance = 1
    tt.melee.attacks[3].damage_type = bor(DAMAGE_NO_DODGE, DAMAGE_TRUE)
    tt.melee.attacks[3].pop = {"pop_sok", "pop_pow"}
    tt.melee.attacks[3].pop_chance = 0.1
    tt.melee.attacks[3].vis_flags = F_RANGED
    tt.melee.attacks[3].vis_bans = 0
    tt.timed_attacks.list[1] = E:clone_c("area_attack")
    tt.timed_attacks.list[1].animation = "torment"
    tt.timed_attacks.list[1].cooldown = 18 + fts(68)
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].damage_min = 50
    tt.timed_attacks.list[1].damage_max = 80
    tt.timed_attacks.list[1].damage_type = bor(DAMAGE_NO_DODGE, DAMAGE_TRUE)
    tt.timed_attacks.list[1].min_count = 2
    tt.timed_attacks.list[1].max_range = 120
    tt.timed_attacks.list[1].damage_radius = 120
    tt.timed_attacks.list[1].hit_time = fts(16)
    tt.timed_attacks.list[1].damage_delay = 0.15
    tt.timed_attacks.list[1].sound_hit = "HeroSamuraiTorment"
    tt.timed_attacks.list[1].vis_bans = bor(F_FLYING)
    tt.timed_attacks.list[1].torment_swords = {{0.01, 20, 8}, {0.2, 37.5, 8}, {0.3, 55, 8}}
    tt.rage = 0
    tt.rage_max = 0
    tt.unyield = 0
    tt.unyield_max = 0

    tt = E:register_t("aura_oni_rage", "aura")
    E:add_comps(tt, "render", "tween")
    tt.aura.duration = -1
    tt.aura.track_source = true
    tt.main_script.update = scripts.aura_oni_rage.update
    tt.render.sprites[1].name = "giant_bastion_decal"
    tt.render.sprites[1].loop = true
    tt.render.sprites[1].hidden = true
    tt.render.sprites[1].draw_order = 2
    tt.render.sprites[1].scale = vec_2(0, 0)
    tt.render.sprites[1].anchor.y = 0.19117647058823528
    tt.render.sprites[1].color = {255, 100, 100}
    tt.tween.remove = false
    tt.tween.props[1].keys = {{0, 0}, {0.5, 255}}


    tt = RT("hero_hacksaw", "hero")
    AC(tt, "melee", "ranged")
    anchor_y = 0.13636363636363635
    anchor_x = 0.5
    image_y = 110
    image_x = 90
    tt.hero.fixed_stat_attack = 7
    tt.hero.fixed_stat_health = 8
    tt.hero.fixed_stat_range = 0
    tt.hero.fixed_stat_speed = 3
    tt.hero.level_stats.armor = {0.53, 0.56, 0.59, 0.62, 0.65, 0.68, 0.71, 0.74, 0.77, 0.8}
    tt.hero.level_stats.hp_max = {420, 440, 460, 480, 500, 520, 540, 560, 580, 600}
    tt.hero.level_stats.melee_damage_max = {27, 30, 33, 36, 39, 42, 45, 48, 51, 54}
    tt.hero.level_stats.melee_damage_min = {10, 11, 12, 13, 14, 15, 16, 17, 18, 19}
    tt.hero.skills.timber = CC("hero_skill")
    tt.hero.skills.timber.cooldown = {35 + fts(35), 30 + fts(35), 25 + fts(35)}
    tt.hero.skills.timber.xp_level_steps = {
        [10] = 3,
        [4] = 1,
        [7] = 2
    }
    tt.hero.skills.timber.xp_gain = {50, 100, 150}
    tt.hero.skills.sawblade = CC("hero_skill")
    tt.hero.skills.sawblade.bounces = {3, 5, 7, 9, 11}
    tt.hero.skills.sawblade.xp_level_steps = {
        [2] = 1,
        [4] = 2,
        [6] = 3,
        [8] = 4,
        [10] = 5
    }
    tt.hero.skills.sawblade.xp_gain = {50, 70, 90, 110, 130}
    tt.health.dead_lifetime = 15
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.health_bar.offset = vec_2(0, 58)
    tt.hero.fn_level_up = scripts.hero_hacksaw.level_up
    tt.hero.tombstone_show_time = fts(150)
    tt.info.hero_portrait = IS_PHONE_OR_TABLET and "hero_portraits_0010" or "heroPortrait_portraits_0010"
    tt.info.i18n_key = "HERO_ROBOT"
    tt.info.portrait = IS_PHONE_OR_TABLET and "portraits_hero_0012" or "info_portraits_hero_0012"
    tt.main_script.update = scripts.hero_hacksaw.update
    tt.motion.max_speed = 2.8 * FPS
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor = vec_2(0.5, 0.13636363636363635)
    tt.render.sprites[1].prefix = "hero_hacksaw"
    tt.soldier.melee_slot_offset = vec_2(13, 0)
    tt.sound_events.change_rally_point = "HeroRobotTaunt"
    tt.sound_events.death = "BombExplosionSound"
    tt.sound_events.death2 = "HeroRobotDeath"
    tt.sound_events.hero_room_select = "HeroRobotTauntSelect"
    tt.sound_events.insert = "HeroRobotTauntIntro"
    tt.sound_events.respawn = "HeroRobotTauntIntro"
    tt.unit.hit_offset = vec_2(0, 38)
    tt.unit.marker_offset = vec_2(0, 0)
    tt.unit.mod_offset = vec_2(0, 25)
    tt.unit.pop_offset = vec_2(0, 15)
    tt.unit.size = UNIT_SIZE_MEDIUM
    tt.melee.range = 65
    tt.melee.attacks[1].cooldown = 1.2
    tt.melee.attacks[1].hit_time = fts(15)
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].xp_gain_factor = 2.6
    tt.melee.attacks[1].side_effect = function(this, store, attack, target)
        SU.armor_dec(target, 0.05)
        this.ranged.attacks[1].ts = this.ranged.attacks[1].ts - (target.health.armor) * 0.5
    end
    tt.melee.attacks[2] = CC("melee_attack")
    tt.melee.attacks[2].animation = "timber"
    tt.melee.attacks[2].cooldown = nil
    tt.melee.attacks[2].disabled = true
    tt.melee.attacks[2].hit_time = fts(14)
    tt.melee.attacks[2].pop = {"pop_splat"}
    tt.melee.attacks[2].pop_chance = 1
    tt.melee.attacks[2].sound = "HeroRobotDrill"
    tt.melee.attacks[2].sound_args = {
        delay = fts(7)
    }
    tt.melee.attacks[2].damage_type = bor(DAMAGE_INSTAKILL, DAMAGE_NO_DODGE)
    tt.melee.attacks[2].xp_from_skill = "timber"
    tt.melee.attacks[2].vis_flags = bor(F_INSTAKILL)
    tt.melee.attacks[2].vis_bans = bor(F_BOSS)
    tt.ranged.attacks[1] = E:clone_c("bullet_attack")
    tt.ranged.attacks[1].animation = "sawblade"
    tt.ranged.attacks[1].bullet = "hacksaw_sawblade"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(25, 21)}
    tt.ranged.attacks[1].disabled = true
    tt.ranged.attacks[1].max_range = 150
    tt.ranged.attacks[1].min_range = 30
    tt.ranged.attacks[1].shoot_time = fts(16)
    tt.ranged.attacks[1].sound_shoot = "HeroRobotShoot"
    tt.ranged.attacks[1].cooldown = 6.5 + fts(32)
    tt.ranged.attacks[1].xp_from_skill = "sawblade"

    tt = E:register_t("hacksaw_sawblade", "bullet")
    tt.main_script.update = scripts.hacksaw_sawblade.update
    tt.bullet.particles_name = "ps_hacksaw_sawblade"
    tt.bullet.acceleration_factor = 0.05
    tt.bullet.min_speed = 390
    tt.bullet.max_speed = 390
    tt.bullet.vis_flags = F_RANGED
    tt.bullet.vis_bans = 0
    tt.bullet.damage_min = 45
    tt.bullet.damage_max = 60
    tt.bullet.hit_blood_fx = "fx_blood_splat"
    tt.bullet.hit_fx = "fx_hacksaw_sawblade_hit"
    tt.bullet.max_speed = 390
    tt.bullet.damage_type = DAMAGE_PHYSICAL
    tt.bounces_max = nil
    tt.bounce_range = 160
    tt.render.sprites[1].prefix = "hacksaw_sawblade"
    tt.sound_events.insert = "HeroAlienDiscoThrow"
    tt.sound_events.bounce = "HeroAlienDiscoBounce"

    tt = RT("hero_thor", "hero")
    AC(tt, "melee", "ranged")
    anchor_y = 0.25
    anchor_x = 0.5
    image_y = 96
    image_x = 120
    tt.hero.fixed_stat_attack = 8
    tt.hero.fixed_stat_health = 7
    tt.hero.fixed_stat_range = 0
    tt.hero.fixed_stat_speed = 5
    tt.hero.level_stats.armor = {0.43, 0.46, 0.49, 0.52, 0.55, 0.58, 0.61, 0.64, 0.67, 0.7}
    tt.hero.level_stats.hp_max = {380, 410, 440, 470, 500, 530, 560, 590, 620, 650}
    tt.hero.level_stats.melee_damage_max = {31, 34, 36, 39, 42, 44, 47, 49, 52, 55}
    tt.hero.level_stats.melee_damage_min = {25, 27, 29, 32, 34, 36, 38, 40, 42, 44}
    tt.hero.level_stats.melee_cooldown = {1, 0.98, 0.96, 0.94, 0.92, 0.9, 0.88, 0.86, 0.84, 0.82}
    tt.hero.level_stats.lightning_heal = {19, 20, 22, 23, 25, 26, 28, 29, 31, 32}
    tt.hero.skills.chainlightning = CC("hero_skill")
    tt.hero.skills.chainlightning.count = {5, 7, 9}
    tt.hero.skills.chainlightning.damage_max = {40, 50, 60}
    tt.hero.skills.chainlightning.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.chainlightning.xp_gain = {50, 100, 150}
    tt.hero.skills.chainlightning.chance = {0.25, 0.3, 0.35}
    tt.hero.skills.thunderclap = CC("hero_skill")
    tt.hero.skills.thunderclap.damage_max = {60, 80, 120}
    tt.hero.skills.thunderclap.secondary_damage_max = {50, 70, 90}
    tt.hero.skills.thunderclap.max_range = {70, 77, 84}
    tt.hero.skills.thunderclap.stun_duration = {3, 4, 6}
    tt.hero.skills.thunderclap.xp_level_steps = {
        [10] = 3,
        [4] = 1,
        [7] = 2
    }
    tt.hero.skills.thunderclap.xp_gain = {50, 100, 150}
    tt.health.dead_lifetime = 15
    tt.health_bar.offset = vec_2(0, 53)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_thor.level_up
    tt.hero.tombstone_show_time = fts(150)
    tt.info.i18n_key = "HERO_THOR"
    tt.info.hero_portrait = IS_PHONE_OR_TABLET and "hero_portraits_0012" or "heroPortrait_portraits_0012"
    tt.info.portrait = IS_PHONE_OR_TABLET and "portraits_hero_0014" or "info_portraits_hero_0014"
    tt.main_script.update = scripts.hero_thor.update
    tt.motion.max_speed = 3 * FPS
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor = vec_2(0.5, 0.25)
    tt.render.sprites[1].prefix = "hero_thor"
    tt.soldier.melee_slot_offset = vec_2(13, 0)
    tt.sound_events.change_rally_point = "HeroThorTaunt"
    tt.sound_events.death = "HeroThorDeath"
    tt.sound_events.hero_room_select = "HeroThorTauntSelect"
    tt.sound_events.insert = "HeroThorTauntIntro"
    tt.sound_events.respawn = "HeroThorTauntIntro"
    tt.unit.hit_offset = vec_2(0, 22)
    tt.unit.marker_offset = vec_2(0, 0)
    tt.unit.mod_offset = vec_2(0, 20)
    tt.melee.range = 65
    tt.melee.cooldown = 1
    tt.melee.attacks[1].cooldown = 1
    tt.melee.attacks[1].hit_time = fts(13)
    tt.melee.attacks[1].shared_cooldown = true
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].xp_gain_factor = 2
    tt.melee.attacks[2] = CC("melee_attack")
    tt.melee.attacks[2].animation = "chain"
    tt.melee.attacks[2].chance = 0.2
    tt.melee.attacks[2].cooldown = 1
    tt.melee.attacks[2].damage_type = DAMAGE_NO_DODGE
    tt.melee.attacks[2].disabled = true
    tt.melee.attacks[2].hit_time = fts(16)
    tt.melee.attacks[2].shared_cooldown = true
    tt.melee.attacks[2].sound = "HeroThorElectricAttack"
    tt.melee.attacks[2].mod = "mod_hero_thor_chainlightning"
    tt.melee.attacks[2].xp_from_skill = "chainlightning"
    tt.melee.attacks[2].side_effect = function(this, store, attack, target)
        this.ranged.attacks[1].ts = this.ranged.attacks[1].ts - 1
    end
    tt.ranged.attacks[1] = E:clone_c("bullet_attack")
    tt.ranged.attacks[1].animation = "thunderclap"
    tt.ranged.attacks[1].bullet = "hammer_hero_thor"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(25, 10)}
    tt.ranged.attacks[1].disabled = true
    tt.ranged.attacks[1].cooldown = 9.5 + fts(28)
    tt.ranged.attacks[1].max_range = 250
    tt.ranged.attacks[1].min_range = 0
    tt.ranged.attacks[1].shoot_time = fts(12)
    tt.ranged.attacks[1].sound_shoot = "HeroThorHammer"
    tt.ranged.attacks[1].xp_from_skill = "thunderclap"
    tt.lightning_heal = 20

    tt = RT("hero_10yr", "hero")
    AC(tt, "melee", "timed_attacks", "teleport")
    anchor_y = 0.20161290322580644
    anchor_x = 0.5
    image_y = 116
    image_x = 142
    tt.hero.fixed_stat_attack = 8
    tt.hero.fixed_stat_health = 8
    tt.hero.fixed_stat_range = 0
    tt.hero.fixed_stat_speed = 5
    tt.hero.level_stats.armor = {0.23, 0.26, 0.29, 0.32, 0.35, 0.38, 0.41, 0.44, 0.47, 0.5}
    tt.hero.level_stats.hp_max = {380, 400, 420, 440, 460, 480, 500, 520, 540, 560}
    tt.hero.level_stats.melee_damage_max = {22, 25, 28, 31, 34, 37, 40, 43, 46, 49}
    tt.hero.level_stats.melee_damage_min = {14, 16, 18, 20, 22, 24, 26, 28, 30, 32}
    tt.hero.skills.rain = CC("hero_skill")
    tt.hero.skills.rain.loops = {3, 4, 5}
    tt.hero.skills.rain.damage_min = {30, 35, 40}
    tt.hero.skills.rain.damage_max = {60, 65, 70}
    tt.hero.skills.rain.xp_level_steps = {nil, 1, nil, nil, 2, nil, nil, 3}
    tt.hero.skills.rain.xp_gain = {100, 200, 300}
    tt.hero.skills.buffed = CC("hero_skill")
    tt.hero.skills.buffed.bomb_steps = {3, 4, 6}
    tt.hero.skills.buffed.bomb_step_damage_min = {10, 15, 20}
    tt.hero.skills.buffed.bomb_step_damage_max = {20, 30, 40}
    tt.hero.skills.buffed.bomb_damage_min = {50, 60, 70}
    tt.hero.skills.buffed.bomb_damage_max = {70, 80, 90}
    tt.hero.skills.buffed.spin_damage_min = {18, 23, 27}
    tt.hero.skills.buffed.spin_damage_max = {36, 45, 54}
    tt.hero.skills.buffed.duration = {6, 9, 12}
    tt.hero.skills.buffed.xp_level_steps = {
        [10] = 3,
        [4] = 1,
        [7] = 2
    }
    tt.hero.skills.buffed.xp_gain = {100, 150, 200}
    tt.health.dead_lifetime = 15
    tt.health_bar.offset = vec_2(0, ady(60))
    tt.health_bar.offset_buffed = vec_2(0, ady(74))
    tt.health_bar.offset_normal = tt.health_bar.offset
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_10yr.level_up
    tt.hero.tombstone_show_time = fts(90)
    tt.info.hero_portrait = IS_PHONE_OR_TABLET and "hero_portraits_0013" or "heroPortrait_portraits_0013"
    tt.info.fn = scripts.hero_10yr.get_info
    tt.info.i18n_key = "HERO_10YR"
    tt.info.portrait = IS_PHONE_OR_TABLET and "portraits_hero_0015" or "info_portraits_hero_0015"
    tt.main_script.update = scripts.hero_10yr.update
    tt.motion.max_speed_normal = 1.6 * FPS
    tt.motion.max_speed_buffed = 2.5 * FPS
    tt.motion.max_speed = tt.motion.max_speed_normal
    tt.particles_aura = "aura_10yr_idle"
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor = vec_2(anchor_x, anchor_y)
    tt.render.sprites[1].prefix = "hero_10yr"
    tt.soldier.melee_slot_offset = vec_2(15, -1)
    tt.sound_events.change_rally_point = "TenShiTaunt"
    tt.sound_events.change_rally_point_normal = "TenShiTaunt"
    tt.sound_events.change_rally_point_buffed = "TenShiTauntBuffed"
    tt.sound_events.death = "TenShiDeathSfx"
    tt.sound_events.death_args = {
        delay = fts(5)
    }
    tt.sound_events.hero_room_select = "TenShiTauntSelect"
    tt.sound_events.insert = "TenShiTauntIntro"
    tt.sound_events.respawn = "TenShiRespawn"
    tt.teleport.min_distance = 0
    tt.teleport.delay = 0
    tt.teleport.sound = "TenShiTeleportSfx"
    tt.unit.marker_offset = vec_2(0, 0)
    tt.unit.mod_offset = vec_2(0, 20)
    tt.unit.hit_offset = vec_2(0, 20)
    tt.melee.range_normal = 55
    tt.melee.range_buffed = 85
    tt.melee.range = tt.melee.range_normal
    tt.melee.attacks[1].cooldown = 1.35
    tt.melee.attacks[1].hit_time = fts(19)
    tt.melee.attacks[1].sound = "TenShiAttack1"
    tt.melee.attacks[1].hit_offset = vec_2(20, 0)
    tt.melee.attacks[1].shared_cooldown = true
    tt.melee.attacks[1].xp_gain_factor = 2.5
    tt.melee.attacks[1].damage_type = DAMAGE_TRUE
    tt.melee.attacks[2] = table.deepclone(tt.melee.attacks[1])
    tt.melee.attacks[2].animation = "attack2"
    tt.melee.attacks[2].chance = 0.5
    tt.melee.attacks[2].hit_time = fts(28)
    tt.melee.attacks[2].hit_offset = vec_2(20, 2)
    tt.melee.attacks[2].sound = "TenShiAttack2"
    tt.melee.attacks[3] = CC("area_attack")
    tt.melee.attacks[3].animations = {"spin_start", "spin_loop", "spin_end"}
    tt.melee.attacks[3].cooldown = 2
    tt.melee.attacks[3].loops = 2
    tt.melee.attacks[3].disabled = true
    tt.melee.attacks[3].damage_min = nil
    tt.melee.attacks[3].damage_max = nil
    tt.melee.attacks[3].damage_radius = 50
    tt.melee.attacks[3].damage_type = DAMAGE_PHYSICAL
    tt.melee.attacks[3].hit_times = {fts(2), fts(6)}
    tt.melee.attacks[3].sound = "TenShiBuffedSpinAttack"
    tt.melee.attacks[3].vis_flags = F_BLOCK
    tt.melee.attacks[3].xp_from_skill = "buffed"
    tt.timed_attacks.list[1] = CC("custom_attack")
    tt.timed_attacks.list[1].animations = {"power_rain_start", "power_rain_loop", "power_rain_end"}
    tt.timed_attacks.list[1].cooldown = 25
    tt.timed_attacks.list[1].entity = "aura_10yr_fireball"
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].sound_start = "TenShiRainOfFireStart"
    tt.timed_attacks.list[1].sound_end = "TenShiRainOfFireEnd"
    tt.timed_attacks.list[1].min_count = 1
    tt.timed_attacks.list[1].trigger_range = 100
    tt.timed_attacks.list[1].max_range = 150
    tt.timed_attacks.list[1].min_range = 0
    tt.timed_attacks.list[1].vis_bans = bor(F_FRIEND)
    tt.timed_attacks.list[1].vis_flags = F_RANGED
    tt.timed_attacks.list[2] = CC("custom_attack")
    tt.timed_attacks.list[2].cooldown = 10
    tt.timed_attacks.list[2].min_count = 3
    tt.timed_attacks.list[2].range = 100
    tt.timed_attacks.list[2].disabled = true
    tt.timed_attacks.list[2].duration = nil
    tt.timed_attacks.list[2].transform_health_factor = 0.6
    tt.timed_attacks.list[2].immune_to = DAMAGE_BASE_TYPES
    tt.timed_attacks.list[2].vis_bans = bor(F_FLYING)
    tt.timed_attacks.list[2].sounds_buffed = {"TenShiTransformToBuffed", "TenShiTransformToBuffedSfx"}
    tt.timed_attacks.list[2].sounds_normal = {"TenShiTransformToNormalSfx"}
    tt.timed_attacks.list[3] = CC("area_attack")
    tt.timed_attacks.list[3].cooldown = 9
    tt.timed_attacks.list[3].animation = "bomb"
    tt.timed_attacks.list[3].count = 10
    tt.timed_attacks.list[3].damage_max = nil
    tt.timed_attacks.list[3].damage_min = nil
    tt.timed_attacks.list[3].damage_radius = 40
    tt.timed_attacks.list[3].damage_type = DAMAGE_TRUE
    tt.timed_attacks.list[3].hit_decal = "decal_ground_hit"
    tt.timed_attacks.list[3].hit_fx = "fx_ground_hit"
    tt.timed_attacks.list[3].hit_offset = vec_2(0, 0)
    tt.timed_attacks.list[3].hit_time = fts(28)
    tt.timed_attacks.list[3].hit_aura = "aura_10yr_bomb"
    tt.timed_attacks.list[3].min_count = 1
    tt.timed_attacks.list[3].min_range = 80
    tt.timed_attacks.list[3].max_range = 150
    tt.timed_attacks.list[3].min_nodes = 5
    tt.timed_attacks.list[3].max_nodes = 20
    tt.timed_attacks.list[3].pop = {"pop_kapow", "pop_whaam"}
    tt.timed_attacks.list[3].pop_chance = 0.3
    tt.timed_attacks.list[3].pop_conds = DR_KILL
    tt.timed_attacks.list[3].sound_short = "TenShiBuffedBombAttack"
    tt.timed_attacks.list[3].sound_long = "TenShiBuffedBombAttackLong"
    tt.timed_attacks.list[3].sound = tt.timed_attacks.list[3].sound_short
    tt.timed_attacks.list[3].xp_from_skill = "buffed"
    tt = E:register_t("aura_10yr_fireball", "aura")
    tt.main_script.update = scripts.aura_10yr_fireball.update
    tt.aura.entity = "fireball_10yr"
    tt.aura.delay = fts(15)
    tt.aura.loops = nil
    tt.aura.min_range = E:get_template("hero_10yr").timed_attacks.list[1].min_range
    tt.aura.max_range = E:get_template("hero_10yr").timed_attacks.list[1].max_range
    tt.aura.vis_flags = E:get_template("hero_10yr").timed_attacks.list[1].vis_flags
    tt.aura.vis_bans = E:get_template("hero_10yr").timed_attacks.list[1].vis_bans
    tt = E:register_t("fireball_10yr", "bullet")
    tt.bullet.min_speed = 24 * FPS
    tt.bullet.max_speed = 24 * FPS
    tt.bullet.acceleration_factor = 0.05
    tt.bullet.hit_fx = "fx_fireball_explosion"
    tt.bullet.hit_decal = "decal_bomb_crater"
    tt.bullet.damage_type = DAMAGE_TRUE
    tt.bullet.damage_radius = 60
    tt.bullet.damage_min = 30
    tt.bullet.damage_max = 60
    tt.bullet.damage_flags = F_AREA
    tt.render.sprites[1].name = "fireball_proyectile"
    tt.main_script.update = scripts.power_fireball.update
    tt.scorch_earth = false
    tt.sound_events.insert = "FireballRelease"
    tt.sound_events.hit = "FireballHit"
    tt = RT("aura_10yr_bomb", "aura")
    tt.aura.fx = "decal_10yr_spike"
    tt.aura.damage_radius = 40
    tt.aura.last_attack_damage_radius = 60
    tt.aura.damage_type = DAMAGE_PHYSICAL
    tt.aura.vis_flags = bor(F_RANGED)
    tt.aura.step_delay = fts(2)
    tt.aura.step_nodes = 5
    tt.aura.steps = 3
    tt.main_script.update = scripts.aura_10yr_bomb.update
    tt.stun = {
        vis_flags = bor(F_RANGED, F_STUN),
        vis_bans = bor(F_FLYING, F_BOSS),
        mod = "mod_10yr_stun"
    }
    tt.aura.damage_min = 10
    tt.aura.damage_max = 20
    tt.aura.stun_chance = 0.25
    tt.aura.min_nodes = 0
    tt.aura.max_nodes = 25
    tt.aura.min_count = 1
    tt = RT("mod_10yr_stun", "mod_stun")
    tt.modifier.vis_flags = bor(F_MOD, F_STUN)
    tt.modifier.vis_bans = bor(F_FLYING, F_BOSS)
    tt.modifier.duration = 3
    tt = RT("decal_10yr_spike", "decal_bomb_crater")
    tt.render.sprites[2] = CC("sprite")
    tt.render.sprites[2].name = "decal_10yr_bomb_spike"
    tt.render.sprites[2].hide_after_runs = 1
    tt.render.sprites[2].anchor.y = 0.24

    tt = E:register_t("hero_mirage", "hero")
    E:add_comps(tt, "dodge", "melee", "ranged", "timed_attacks")
    anchor_y = 0.14
    image_y = 72
    tt.hero.fixed_stat_attack = 3
    tt.hero.fixed_stat_health = 4
    tt.hero.fixed_stat_range = 7
    tt.hero.fixed_stat_speed = 7
    tt.hero.level_stats.hp_max = {195, 210, 225, 240, 255, 270, 285, 300, 315, 330}
    tt.hero.level_stats.armor = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    tt.hero.level_stats.melee_damage_min = {7, 8, 10, 11, 12, 13, 14, 16, 18, 20}
    tt.hero.level_stats.melee_damage_max = {11, 13, 14, 16, 18, 20, 22, 24, 26, 28}
    tt.hero.level_stats.ranged_damage_min = {7, 8, 10, 11, 12, 13, 14, 16, 18, 20}
    tt.hero.level_stats.ranged_damage_max = {11, 13, 14, 16, 18, 20, 22, 23, 25, 27}
    tt.hero.skills.precision = E:clone_c("hero_skill")
    tt.hero.skills.precision.extra_buff = {5, 5, 5}
    tt.hero.skills.precision.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.shadowdodge = E:clone_c("hero_skill")
    tt.hero.skills.shadowdodge.dodge_chance = {0.4, 0.52, 0.64}
    tt.hero.skills.shadowdodge.reward_shadowdance = {0.6, 0.8, 1.0}
    tt.hero.skills.shadowdodge.reward_lethalstrike = {0.06, 0.1, 0.14}
    tt.hero.skills.shadowdodge.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.shadowdodge.lifespan = {1.2, 1.4, 1.6}
    tt.hero.skills.swiftness = E:clone_c("hero_skill")
    tt.hero.skills.swiftness.max_speed_factor = {1.3, 1.3, 1.3}
    tt.hero.skills.swiftness.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.shadowdance = E:clone_c("hero_skill")
    tt.hero.skills.shadowdance.copies = {3, 4, 5}
    tt.hero.skills.shadowdance.xp_gain_factor = 20
    tt.hero.skills.shadowdance.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.lethalstrike = E:clone_c("hero_skill")
    tt.hero.skills.lethalstrike.instakill_chance = {0.1, 0.17, 0.25}
    tt.hero.skills.lethalstrike.xp_gain_factor = 50
    tt.hero.skills.lethalstrike.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [10] = 3
    }
    tt.dodge.animation = "disappear"
    tt.dodge.chance = 0.3
    tt.dodge.ranged = true
    tt.reward_shadowdance = 0.6
    tt.reward_lethalstrike = 0.06
    tt.health.armor = tt.hero.level_stats.armor[1]
    tt.health.dead_lifetime = 15
    tt.health.hp_max = tt.hero.level_stats.hp_max[1]
    tt.health_bar.offset = vec_2(0, 34)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_mirage.level_up
    tt.hero.tombstone_show_time = fts(60)
    tt.idle_flip.chance = 0.4
    tt.idle_flip.cooldown = 1
    tt.info.i18n_key = "HERO_MIRAGE"
    tt.info.hero_portrait = "kr2_hero_portraits_0002"
    tt.info.portrait = IS_PHONE and "portraits_hero_0002" or "kr2_info_portraits_heroes_0002"
    tt.info.damage_icon = "arrow"
    tt.main_script.update = scripts.hero_mirage.update
    tt.melee.attacks[1] = E:clone_c("melee_attack")
    tt.melee.attacks[1].cooldown = 0.9
    tt.melee.attacks[1].damage_max = nil
    tt.melee.attacks[1].damage_min = nil
    tt.melee.attacks[1].hit_time = fts(9)
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].vis_bans = bor(F_FLYING, F_CLIFF)
    tt.melee.attacks[1].vis_flags = F_BLOCK
    tt.melee.attacks[1].xp_gain_factor = 3
    tt.melee.range = 45
    tt.motion.max_speed = 75
    tt.ranged.attacks[1] = E:clone_c("bullet_attack")
    tt.ranged.attacks[1].animation = "ranged"
    tt.ranged.attacks[1].bullet = "bullet_mirage"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(12, 12), vec_2(12, 12), vec_2(12, 12)}
    tt.ranged.attacks[1].cooldown = 0.5
    tt.ranged.attacks[1].max_range = 140
    tt.ranged.attacks[1].min_range = 25
    tt.ranged.attacks[1].shoot_time = fts(4)
    tt.ranged.attacks[1].vis_bans = 0
    tt.regen.cooldown = 1
    tt.render.sprites[1] = E:clone_c("sprite")
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].angles = {}
    tt.render.sprites[1].angles.ranged = {"shoot", "shoot_up", "shoot"}
    tt.render.sprites[1].angles.walk = {"running"}
    tt.render.sprites[1].angles_custom = {
        ranged = {45, 135, 210, 315}
    }
    tt.render.sprites[1].angles_flip_vertical = {
        ranged = true
    }
    tt.render.sprites[1].name = "idle"
    tt.render.sprites[1].prefix = "hero_mirage"
    tt.soldier.melee_slot_offset.x = 5
    tt.sound_events.change_rally_point = "HeroMirageTaunt"
    tt.sound_events.death = "HeroMirageDeath"
    tt.sound_events.respawn = "HeroMirageTauntIntro"
    tt.sound_events.insert = "HeroMirageTauntIntro"
    tt.sound_events.hero_room_select = "HeroMirageTauntSelect"
    tt.sound_events.lethal_vanish = "HeroMirageLethalStrikeCastVanish"
    tt.timed_attacks.list[1] = E:clone_c("bullet_attack")
    tt.timed_attacks.list[1].animation = "shadows"
    tt.timed_attacks.list[1].bullet = "mirage_shadow"
    tt.timed_attacks.list[1].burst = nil
    tt.timed_attacks.list[1].cooldown = 9
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].max_range = 125
    tt.timed_attacks.list[1].min_range = 0
    tt.timed_attacks.list[1].shoot_time = fts(7)
    tt.timed_attacks.list[1].sound = "HeroMirageShadowDanceCast"
    tt.timed_attacks.list[1].vis_bans = bor(F_CLIFF)
    tt.timed_attacks.list[1].vis_flags = bor(F_RANGED)
    tt.timed_attacks.list[2] = E:clone_c("custom_attack")
    tt.timed_attacks.list[2].cooldown = 15
    tt.timed_attacks.list[2].damage_max = 100
    tt.timed_attacks.list[2].damage_min = 100
    tt.timed_attacks.list[2].damage_type = DAMAGE_TRUE
    tt.timed_attacks.list[2].disabled = true
    tt.timed_attacks.list[2].hit_fx = "fx_mirage_blood"
    tt.timed_attacks.list[2].hit_time = fts(7)
    tt.timed_attacks.list[2].instakill_chance = nil
    tt.timed_attacks.list[2].range = 130
    tt.timed_attacks.list[2].sound = "HeroMirageLethalStrikeCastHit"
    tt.timed_attacks.list[2].vis_bans = bor(F_CLIFF, F_WATER)
    tt.timed_attacks.list[2].vis_flags = bor(F_LETHAL, F_RANGED)
    tt.unit.hit_offset = vec_2(0, 12)
    tt.unit.marker_offset = vec_2(0, -1)
    tt.unit.mod_offset = vec_2(0, 16)

    tt = E:register_t("bullet_mirage", "arrow")
    tt.bullet.hit_blood_fx = "fx_blood_splat"
    tt.bullet.hit_fx = "fx_bullet_mirage_hit"
    tt.bullet.miss_fx = "fx_bullet_mirage_hit"
    tt.bullet.miss_fx_water = "fx_bullet_mirage_hit"
    tt.bullet.miss_decal = nil
    tt.bullet.flight_time = fts(14)
    tt.bullet.xp_gain_factor = 3
    tt.bullet.damage_min = nil
    tt.bullet.damage_max = nil
    tt.bullet.hide_radius = 4
    tt.bullet.pop = {"pop_shunt_violet"}
    tt.render.sprites[1].name = "proy_mirage_0001"

    tt = E:register_t("fx_bullet_mirage_hit", "fx")
    tt.render.sprites[1].name = "fx_bullet_mirage_hit"

    tt = E:register_t("fx_mirage_smoke", "fx")
    tt.render.sprites[1].name = "fx_hero_mirage_smoke"
    tt.render.sprites[1].anchor.y = 0.11
    tt.render.sprites[1].z = Z_OBJECTS
    tt.render.sprites[1].sort_y_offset = -1

    tt = E:register_t("fx_mirage_blood", "fx")
    tt.render.sprites[1].prefix = "mirage_blood"
    tt.render.sprites[1].name = "red"
    tt.use_blood_color = true

    tt = E:register_t("mirage_shadow", "bullet")
    tt.bullet.damage_inc = 6
    tt.bullet.damage_max = 22
    tt.bullet.damage_min = 22
    tt.bullet.damage_type = DAMAGE_TRUE
    tt.bullet.hit_fx = "fx_mirage_blood"
    tt.bullet.max_speed = 180
    tt.bullet.min_speed = 150
    tt.main_script.insert = scripts.mirage_shadow.insert
    tt.main_script.update = scripts.mirage_shadow.update
    tt.render.sprites[1].name = "running"
    tt.render.sprites[1].prefix = "mirage_shadow"
    tt.render.sprites[1].z = Z_OBJECTS
    tt.render.sprites[1].anchor.y = 0.14
    tt.sound_events.death = "HeroMirageShadowDodgePuff"
    tt.sound_events.hit = "HeroMirageShadowDanceHit"

    tt = E:register_t("soldier_mirage_illusion", "unit")
    E:add_comps(tt, "soldier", "motion", "nav_path", "main_script", "vis", "lifespan", "melee", "sound_events")
    anchor_y = 0.14
    image_y = 72
    tt.damage_buff = 0
    tt.ui = nil
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].name = "idle"
    tt.render.sprites[1].prefix = "soldier_mirage_illusion"
    tt.render.sprites[1].alpha = 230
    tt.render.sprites[1].angles = {}
    tt.render.sprites[1].angles.walk = {"running"}
    tt.health.hp_max = 60
    tt.health.armor = 0
    tt.health_bar.offset = vec_2(0, 34)
    tt.health_bar.hidden = true
    tt.lifespan.duration = 1 + fts(6)
    tt.melee.range = 64
    tt.melee.attacks[1].cooldown = 1
    tt.melee.attacks[1].damage_max = 10
    tt.melee.attacks[1].damage_min = 10
    tt.melee.attacks[1].damage_type = DAMAGE_TRUE
    tt.melee.attacks[1].hit_time = fts(10)
    tt.melee.attacks[1].vis_bans = bor(F_FLYING, F_CLIFF)
    tt.melee.attacks[1].vis_flags = F_BLOCK
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.main_script.insert = scripts.soldier_mirage_illusion.insert
    tt.main_script.update = scripts.soldier_mirage_illusion.update
    tt.motion.max_speed = 90
    tt.soldier.melee_slot_offset.x = 5
    tt.sound_events.death = "HeroMirageShadowDodgePuff"
    tt.unit.marker_offset = vec_2(0, 0)
    tt.unit.mod_offset = vec_2(0, 16)
    tt.unit.hit_offset = vec_2(0, 12)
    tt.vis.bans = bor(F_POISON, F_CANNIBALIZE, F_STUN, F_SKELETON, F_LYCAN)
    tt.vis.flags = F_FRIEND

    tt = E:register_t("hero_wizard", "hero")
    E:add_comps(tt, "teleport", "melee", "ranged", "timed_attacks")
    anchor_y = 0.22
    image_y = 78
    tt.hero.level_stats.hp_max = {130, 145, 160, 175, 190, 205, 220, 235, 250, 265}
    tt.hero.level_stats.armor = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    tt.hero.level_stats.melee_damage_min = {4, 5, 5, 6, 6, 7, 7, 8, 8, 9}
    tt.hero.level_stats.melee_damage_max = {12, 14, 15, 17, 18, 20, 21, 23, 25, 27}
    tt.hero.level_stats.ranged_damage_min = {14, 15, 17, 18, 20, 21, 23, 25, 27, 29}
    tt.hero.level_stats.ranged_damage_max = {41, 45, 50, 54, 59, 63, 68, 72, 77, 81}
    tt.hero.skills.magicmissile = E:clone_c("hero_skill")
    tt.hero.skills.magicmissile.count = {5, 9, 13}
    tt.hero.skills.magicmissile.damage = {20, 25, 30}
    tt.hero.skills.magicmissile.xp_gain = {20, 35, 50}
    tt.hero.skills.magicmissile.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.chainspell = E:clone_c("hero_skill")
    tt.hero.skills.chainspell.bounces = {1, 2, 3}
    tt.hero.skills.chainspell.xp_gain = {20, 35, 50}
    tt.hero.skills.chainspell.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.disintegrate = E:clone_c("hero_skill")
    tt.hero.skills.disintegrate.total_damage = {250, 500, 750}
    tt.hero.skills.disintegrate.count = {4, 6, 8}
    tt.hero.skills.disintegrate.xp_gain = {20, 35, 50}
    tt.hero.skills.disintegrate.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [10] = 3
    }
    tt.hero.skills.arcanereach = E:clone_c("hero_skill")
    tt.hero.skills.arcanereach.extra_range_factor = {0.25, 0.23, 0.2}
    tt.hero.skills.arcanereach.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.arcanefocus = E:clone_c("hero_skill")
    tt.hero.skills.arcanefocus.extra_damage = {15, 30, 45}
    tt.hero.skills.arcanefocus.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.health.armor = nil
    tt.health.dead_lifetime = 15
    tt.health.hp_max = nil
    tt.health_bar.offset = vec_2(0, 36)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_wizard.level_up
    tt.hero.tombstone_show_time = fts(60)
    tt.idle_flip.cooldown = 1
    tt.info.fn = scripts.hero_wizard.get_info
    tt.info.hero_portrait = "kr2_hero_portraits_0006"
    tt.info.portrait = IS_PHONE and "portraits_hero_0006" or "kr2_info_portraits_heroes_0006"
    tt.info.damage_icon = "magic"
    tt.info.i18n_key = "HERO_WIZARD"
    tt.main_script.update = scripts.hero_wizard.update
    tt.motion.max_speed = 45
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].prefix = "hero_wizard"
    tt.soldier.melee_slot_offset.x = 5
    tt.sound_events.change_rally_point = "HeroWizardTaunt"
    tt.sound_events.death = "HeroWizardDeath"
    tt.sound_events.respawn = "HeroWizardTauntIntro"
    tt.sound_events.insert = "HeroWizardTauntIntro"
    tt.sound_events.hero_room_select = "HeroWizardTauntSelect"
    tt.teleport.min_distance = 80
    tt.teleport.sound = "HeroWizardTeleport"
    tt.unit.hit_offset = vec_2(0, 12)
    tt.unit.marker_offset = vec_2(0, -0.16)
    tt.unit.mod_offset = vec_2(0, 12.84)
    tt.melee.range = 45
    tt.melee.attacks[1] = E:clone_c("melee_attack")
    tt.melee.attacks[1].damage_max = nil
    tt.melee.attacks[1].damage_min = nil
    tt.melee.attacks[1].hit_time = fts(10)
    tt.melee.attacks[1].cooldown = 1
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].vis_bans = bor(F_FLYING, F_CLIFF)
    tt.melee.attacks[1].vis_flags = F_BLOCK
    tt.melee.attacks[1].damage_type = DAMAGE_PHYSICAL
    tt.melee.attacks[1].xp_gain_factor = 2.5
    tt.timed_attacks.list[1] = E:clone_c("area_attack")
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].animation = "disintegrate"
    tt.timed_attacks.list[1].hit_time = fts(15)
    tt.timed_attacks.list[1].max_range = 150
    tt.timed_attacks.list[1].damage_radius = 120
    tt.timed_attacks.list[1].cooldown = 25
    tt.timed_attacks.list[1].vis_bans = bor(F_CLIFF, F_BOSS)
    tt.timed_attacks.list[1].vis_flags = bor(F_RANGED)
    tt.timed_attacks.list[1].total_damage = nil
    tt.timed_attacks.list[1].count = nil
    tt.timed_attacks.list[1].sound = "HeroWizardDesintegrate"
    tt.timed_attacks.list[2] = E:clone_c("bullet_attack")
    tt.timed_attacks.list[2].disabled = true
    tt.timed_attacks.list[2].bullet = "missile_wizard"
    tt.timed_attacks.list[2].bullet_start_offset = {vec_2(-16, 36)}
    tt.timed_attacks.list[2].shoot_times = {fts(3)}
    tt.timed_attacks.list[2].loops = nil
    tt.timed_attacks.list[2].animations = {"missile_start", "missile_loop", "missile_end"}
    tt.timed_attacks.list[2].cooldown = 12
    tt.timed_attacks.list[2].max_range = 250
    tt.timed_attacks.list[2].min_range = 0
    tt.timed_attacks.list[2].sound = "HeroWizardMissileSummon"
    tt.timed_attacks.list[2].xp_from_skill = "magicmissile"
    tt.ranged.forced_cooldown = 1.5
    tt.ranged.attacks[1] = E:clone_c("bullet_attack")
    tt.ranged.attacks[1].bullet = "ray_wizard"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(17, 35)}
    tt.ranged.attacks[1].check_target_before_shot = true
    tt.ranged.attacks[1].cooldown = 1.5
    tt.ranged.attacks[1].max_range = 130
    tt.ranged.attacks[1].min_range = 25
    tt.ranged.attacks[1].node_prediction = fts(19)
    tt.ranged.attacks[1].shoot_time = fts(19)
    tt.ranged.attacks[2] = table.deepclone(tt.ranged.attacks[1])
    tt.ranged.attacks[2].disabled = true
    tt.ranged.attacks[2].cooldown = 4
    tt.ranged.attacks[2].bullet = "ray_wizard_chain"
    tt.ranged.attacks[2].xp_from_skill = "chainspell"
    tt.arcanefocus_extra = 0

    tt = E:register_t("fx_wizard_disintegrate", "fx")
    tt.render.sprites[1].name = "fx_wizard_disintegrate"
    tt.render.sprites[1].z = Z_OBJECTS

    tt = E:register_t("ray_wizard", "bullet")
    tt.bullet.xp_gain_factor = 2.5
    tt.bullet.mod = "mod_ray_wizard"
    tt.bullet.hit_time = fts(1)
    tt.bullet.hit_fx = "fx_ray_wizard"
    tt.image_width = 114
    tt.render.sprites[1].anchor = vec_2(0, 0.5)
    tt.render.sprites[1].name = "ray_wizard"
    tt.render.sprites[1].loop = false
    tt.sound_events.insert = "HeroWizardShoot"
    tt.bounces = 0
    tt.seen_targets = {}
    tt.main_script.insert = scripts.ray_wizard_chain.insert
    tt.main_script.update = scripts.ray_wizard_chain.update

    tt = E:register_t("ray_wizard_chain", "ray_wizard")
    tt.bounces = nil
    tt.bounce_range = 75
    tt.bounce_vis_flags = F_RANGED
    tt.bounce_vis_bans = 0
    tt.bullet.xp_gain_factor = nil

    tt = E:register_t("mod_ray_wizard", "modifier")
    tt.modifier.duration = fts(18)
    tt.damage_min = nil
    tt.damage_max = nil
    tt.damage_type = DAMAGE_MAGICAL
    tt.damage_every = 0.03
    tt.pop = {"pop_bzzt"}
    tt.pop_chance = 1
    tt.pop_conds = DR_KILL
    tt.main_script.insert = scripts.mod_ray_wizard.insert
    tt.main_script.update = scripts.mod_ray_wizard.update

    tt = E:register_t("fx_ray_wizard", "fx")
    tt.render.sprites[1].name = "ray_wizard_ball"
    tt.render.sprites[1].z = Z_BULLETS + 1
    tt.render.sprites[1].loop = false

    tt = E:register_t("missile_wizard", "bullet")
    tt.render.sprites[1].prefix = "missile_wizard"
    tt.bullet.retarget_range = 200
    tt.bullet.damage_type = DAMAGE_MAGICAL
    tt.bullet.min_speed = 270
    tt.bullet.max_speed = 330
    tt.bullet.turn_speed = 20 * math.pi / 180 * 30
    tt.bullet.acceleration_factor = 0.1
    tt.bullet.hit_fx = "fx_missile_wizard_hit"
    tt.bullet.hit_fx_air = "fx_missile_wizard_hit"
    tt.bullet.damage_max = nil
    tt.bullet.damage_min = nil
    tt.bullet.vis_flags = F_RANGED
    tt.main_script.update = scripts.missile.update
    tt.main_script.insert = scripts.missile_wizard.insert
    tt.sound_events.hit = "HeroWizardMissileHit"

    tt = E:register_t("fx_missile_wizard_hit", "fx")
    tt.render.sprites[1].name = "missile_wizard_hit"
    tt.render.sprites[1].z = Z_BULLETS

    tt = E:register_t("ps_missile_wizard")
    E:add_comps(tt, "pos", "particle_system")
    tt.particle_system.name = "missile_wizard_trail"
    tt.particle_system.animated = true
    tt.particle_system.loop = false
    tt.particle_system.track_rotation = true
    tt.particle_system.particle_lifetime = {0.3, 0.3}
    tt.particle_system.emission_rate = 50

    tt = E:register_t("ps_missile_wizard_sparks")
    E:add_comps(tt, "pos", "particle_system")
    tt.particle_system.name = "missile_wizard_sparks1"
    tt.particle_system.animated = true
    tt.particle_system.loop = false
    tt.particle_system.track_rotation = true
    tt.particle_system.particle_lifetime = {0.35, 0.35}
    tt.particle_system.emission_rate = 20

    tt = E:register_t("hero_alric", "hero")
    E:add_comps(tt, "melee", "timed_attacks", "transfer")
    anchor_y = 0.09
    image_y = 90
    tt.hero.level_stats.armor = {0.38, 0.41, 0.44, 0.47, 0.5, 0.53, 0.56, 0.59, 0.62, 0.65}
    tt.hero.level_stats.hp_max = {260, 275, 290, 305, 320, 335, 350, 365, 380, 395}
    tt.hero.level_stats.melee_damage_max = {12, 14, 16, 18, 20, 22, 24, 26, 28, 30}
    tt.hero.level_stats.melee_damage_min = {7, 8, 9, 10, 11, 12, 13, 14, 15, 16}
    tt.hero.skills.flurry = E:clone_c("hero_skill")
    tt.hero.skills.flurry.cooldown = {6, 6, 6}
    tt.hero.skills.flurry.loops = {2, 3, 4}
    tt.hero.skills.flurry.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.flurry.xp_gain = {45, 70, 95}
    tt.hero.skills.sandwarriors = E:clone_c("hero_skill")
    tt.hero.skills.sandwarriors.count = {2, 3, 4}
    tt.hero.skills.sandwarriors.lifespan = {7, 8, 9}
    tt.hero.skills.sandwarriors.xp_gain = {50, 75, 100}
    tt.hero.skills.sandwarriors.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [9] = 3
    }
    tt.hero.skills.spikedarmor = E:clone_c("hero_skill")
    tt.hero.skills.spikedarmor.values = {0.2, 0.2, 0.2}
    tt.hero.skills.spikedarmor.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.swordsmanship = E:clone_c("hero_skill")
    tt.hero.skills.swordsmanship.extra_damage = {6, 12, 18}
    tt.hero.skills.swordsmanship.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.toughness = E:clone_c("hero_skill")
    tt.hero.skills.toughness.hp_max = {90, 180, 270}
    tt.hero.skills.toughness.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.health.armor = nil
    tt.health.dead_lifetime = 15
    tt.health.hp_max = nil
    tt.health.spiked_armor = 0
    tt.health_bar.offset = vec_2(0, ady(44))
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_alric.level_up
    tt.hero.tombstone_show_time = fts(60)
    tt.idle_flip.chance = 0.4
    tt.idle_flip.cooldown = 1
    tt.info.fn = scripts.hero_basic.get_info
    tt.info.hero_portrait = "kr2_hero_portraits_0001"
    tt.info.portrait = IS_PHONE and "portraits_hero_0001" or "kr2_info_portraits_heroes_0001"
    tt.info.i18n_key = "HERO_ALRIC"
    tt.main_script.update = scripts.hero_alric.update
    tt.melee.attacks[1] = E:clone_c("melee_attack")
    tt.melee.attacks[1].damage_max = nil
    tt.melee.attacks[1].damage_min = nil
    tt.melee.attacks[1].hit_time = fts(9)
    tt.melee.attacks[1].shared_cooldown = true
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].vis_bans = bor(F_FLYING, F_CLIFF)
    tt.melee.attacks[1].vis_flags = F_BLOCK
    tt.melee.attacks[1].xp_gain_factor = 2
    tt.melee.attacks[2] = table.deepclone(tt.melee.attacks[1])
    tt.melee.attacks[2].animation = "attack2"
    tt.melee.attacks[2].chance = 0.5
    tt.melee.attacks[2].xp_gain_factor = 5
    tt.melee.attacks[3] = E:clone_c("melee_attack")
    tt.melee.attacks[3].animations = {"flurry_start", "flurry_loop", "flurry_end"}
    tt.melee.attacks[3].cooldown = 6
    tt.melee.attacks[3].damage_max = nil
    tt.melee.attacks[3].damage_min = nil
    tt.melee.attacks[3].disabled = true
    tt.melee.attacks[3].hit_times = {fts(4), fts(9)}
    tt.melee.attacks[3].interrupt_loop_on_dead_target = true
    tt.melee.attacks[3].loopable = true
    tt.melee.attacks[3].loops = 1
    tt.melee.attacks[3].sound_loop = "HeroAlricFlurry"
    tt.melee.attacks[3].vis_bans = bor(F_FLYING, F_CLIFF)
    tt.melee.attacks[3].vis_flags = F_BLOCK
    tt.melee.attacks[3].xp_from_skill = "flurry"
    tt.melee.attacks[3].damage_type = DAMAGE_TRUE
    tt.melee.cooldown = 1
    tt.melee.range = 80
    tt.motion.max_speed = 90
    tt.transfer.extra_speed = 60
    tt.transfer.min_distance = 90
    tt.transfer.sound_loop = "HeroAlricSandwarrior"
    tt.transfer.animations = {"sand_travel_start", "sand_travel_loop", "sand_travel_end"}
    tt.transfer.scale = vec_1(1.2)
    tt.regen.cooldown = 1
    tt.render.sprites[1] = E:clone_c("sprite")
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].angles = {}
    tt.render.sprites[1].angles.walk = {"running"}
    tt.render.sprites[1].name = "idle"
    tt.render.sprites[1].prefix = "hero_alric"
    tt.render.sprites[1].scale = vec_1(1)
    tt.render.sprites[1].color = {255, 255, 255}
    tt.soldier.melee_slot_offset.x = 5
    tt.sound_events.change_rally_point = "HeroAlricTaunt"
    tt.sound_events.death = "HeroAlricDeath"
    tt.sound_events.respawn = "HeroAlricTauntIntro"
    tt.sound_events.insert = "HeroAlricTauntIntro"
    tt.sound_events.hero_room_select = "HeroAlricTauntSelect"
    tt.timed_attacks.list[1] = E:clone_c("spawn_attack")
    tt.timed_attacks.list[1].animation = "sandwarrior"
    tt.timed_attacks.list[1].cooldown = 10
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].entity = "soldier_sand_warrior"
    tt.timed_attacks.list[1].range_nodes = 40
    tt.timed_attacks.list[1].spawn_time = fts(10)
    tt.timed_attacks.list[1].vis_bans = bor(F_FLYING, F_CLIFF, F_WATER)
    tt.timed_attacks.list[1].vis_flags = 0
    tt.timed_attacks.list[1].sound = "HeroAlricSandwarrior"
    tt.unit.hit_offset = vec_2(0, 12)
    tt.unit.marker_offset = vec_2(0, -1)
    tt.unit.mod_offset = vec_2(0, 19.9)
    tt.swordsmanship_extra = 0
    tt.toughness_hp_extra = 0
    tt.toughness_regen_extra = 0

    tt = E:register_t("soldier_sand_warrior", "unit")
    E:add_comps(tt, "soldier", "motion", "nav_path", "main_script", "vis", "info", "lifespan", "melee", "sound_events")
    anchor_y = 0.2
    image_y = 36
    tt.damage_buff = 0
    tt.info.portrait = IS_PHONE and "portraits_hero_0012" or "kr2_info_portraits_heroes_0012"
    tt.health.armor = 0
    tt.health.hp_inc = 40
    tt.health.hp_max = 20
    tt.health_bar.offset = vec_2(0, ady(39))
    tt.info.fn = scripts.soldier_sand_warrior.get_info
    tt.info.i18n_key = "HERO_ALRIC_SANDWARRIORS"
    tt.lifespan.duration = nil
    tt.main_script.insert = scripts.soldier_sand_warrior.insert
    tt.main_script.update = scripts.soldier_sand_warrior.update
    tt.melee.attacks[1].cooldown = 1
    tt.melee.attacks[1].damage_max = 6
    tt.melee.attacks[1].damage_min = 2
    tt.melee.attacks[1].hit_time = fts(4)
    tt.melee.attacks[1].vis_bans = bor(F_FLYING, F_CLIFF)
    tt.melee.attacks[1].vis_flags = F_BLOCK
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.range = 64
    tt.motion.max_speed = 60
    tt.nav_path.dir = -1
    tt.render.sprites[1].anchor.y = 0.2
    tt.render.sprites[1].name = "raise"
    tt.render.sprites[1].prefix = "soldier_sand_warrior"
    tt.soldier.melee_slot_offset.x = 5
    tt.unit.hit_offset = vec_2(0, 12)
    tt.unit.mod_offset = vec_2(0, ady(22))
    tt.vis.bans = bor(F_POISON, F_CANNIBALIZE, F_LYCAN, F_SKELETON)
    tt.vis.flags = F_FRIEND

    tt = E:register_t("hero_beastmaster", "hero")
    E:add_comps(tt, "melee", "timed_attacks")
    anchor_y = 0.175
    image_y = 80
    tt.hero.level_stats.hp_max = {310, 340, 370, 400, 430, 460, 490, 520, 550, 580}
    tt.hero.level_stats.armor = {0, 0.02, 0.04, 0.06, 0.08, 0.1, 0.12, 0.14, 0.16, 0.18}
    tt.hero.level_stats.melee_damage_min = {8, 9, 10, 11, 12, 13, 14, 15, 16, 17}
    tt.hero.level_stats.melee_damage_max = {12, 14, 16, 18, 20, 22, 24, 26, 28, 30}
    tt.hero.skills.boarmaster = E:clone_c("hero_skill")
    tt.hero.skills.boarmaster.boars = {1, 2, 3, 4}
    tt.hero.skills.boarmaster.boar_hp_max = {160, 200, 240, 280}
    tt.hero.skills.boarmaster.wolf_hp_max = {80, 100, 120, 140}
    tt.hero.skills.boarmaster.xp_level_steps = {
        [2] = 1,
        [4] = 2,
        [6] = 3,
        [8] = 4
    }
    tt.hero.skills.boarmaster.xp_gain = {40, 80, 120, 160}
    tt.hero.skills.stampede = E:clone_c("hero_skill")
    tt.hero.skills.stampede.rhinos = {2, 3, 4, 5}
    tt.hero.skills.stampede.duration = {3, 6, 9, 12}
    tt.hero.skills.stampede.stun_chance = {0.25, 0.375, 0.5, 0.625}
    tt.hero.skills.stampede.stun_duration = {1.5, 2.5, 3.5, 4.5}
    tt.hero.skills.stampede.damage = {20, 25, 30, 35}
    tt.hero.skills.stampede.xp_gain = {60, 120, 180, 240}
    tt.hero.skills.stampede.xp_level_steps = {
        [3] = 1,
        [5] = 2,
        [7] = 3,
        [9] = 4
    }
    tt.hero.skills.falconer = E:clone_c("hero_skill")
    tt.hero.skills.falconer.count = {1, 2, 3}
    tt.hero.skills.falconer.xp_level_steps = {
        [4] = 1,
        [7] = 2,
        [10] = 3
    }
    tt.hero.skills.deeplashes = E:clone_c("hero_skill")
    tt.hero.skills.deeplashes.damage = {20, 40, 60, 80}
    tt.hero.skills.deeplashes.blood_damage = {20, 40, 60, 80}
    tt.hero.skills.deeplashes.cooldown = {6.9, 6.2, 5.5, 4.8}
    tt.hero.skills.deeplashes.xp_gain = {50, 100, 150, 200}
    tt.hero.skills.deeplashes.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.health.armor = nil
    tt.health.dead_lifetime = 15
    tt.health.hp_max = nil
    tt.health_bar.offset = vec_2(0, 39)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_beastmaster.level_up
    tt.hero.tombstone_show_time = fts(60)
    tt.idle_flip.cooldown = 1
    tt.info.hero_portrait = "kr2_hero_portraits_0003"
    tt.info.portrait = IS_PHONE and "portraits_hero_0003" or "kr2_info_portraits_heroes_0003"
    tt.info.i18n_key = "HERO_BEASTMASTER"
    tt.main_script.insert = scripts.hero_beastmaster.insert
    tt.main_script.update = scripts.hero_beastmaster.update
    tt.motion.max_speed = 100
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].prefix = "hero_beastmaster"
    tt.soldier.melee_slot_offset.x = 13
    tt.sound_events.change_rally_point = "HeroBeastMasterTaunt"
    tt.sound_events.death = "HeroBeastMasterDeath"
    tt.sound_events.respawn = "HeroBeastMasterTauntIntro"
    tt.sound_events.insert = "HeroBeastMasterTauntIntro"
    tt.sound_events.hero_room_select = "HeroBeastMasterTauntSelect"
    tt.unit.hit_offset = vec_2(0, 12)
    tt.unit.marker_offset = vec_2(0, 0)
    tt.unit.mod_offset = vec_2(0, 18)
    tt.unit.size = UNIT_SIZE_MEDIUM
    tt.melee.range = 75
    tt.melee.attacks[1] = E:clone_c("melee_attack")
    tt.melee.attacks[1].hit_time = fts(12)
    tt.melee.attacks[1].cooldown = 1
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].vis_bans = bor(F_FLYING, F_CLIFF)
    tt.melee.attacks[1].vis_flags = F_BLOCK
    tt.melee.attacks[1].xp_gain_factor = 4.4
    tt.melee.attacks[2] = E:clone_c("melee_attack")
    tt.melee.attacks[2].disabled = true
    tt.melee.attacks[2].hit_time = fts(15)
    tt.melee.attacks[2].animation = "lash"
    tt.melee.attacks[2].cooldown = 6 + 0.9
    tt.melee.attacks[2].vis_bans = bor(F_FLYING, F_CLIFF)
    tt.melee.attacks[2].vis_flags = bor(F_BLOCK, F_BLOOD)
    tt.melee.attacks[2].damage_type = DAMAGE_TRUE
    tt.melee.attacks[2].sound = "HeroBeastMasterAttack"
    tt.melee.attacks[2].mod = "mod_beastmaster_lash"
    tt.melee.attacks[2].pop = nil
    tt.melee.attacks[2].xp_from_skill = "deeplashes"
    tt.boars = {}
    tt.falcons = {}
    tt.falcons_max = 0
    tt.falcons_name = "beastmaster_falcon"
    tt.timed_attacks.list[1] = E:clone_c("spawn_attack")
    tt.timed_attacks.list[1].animation = "stampede"
    tt.timed_attacks.list[1].cooldown = 18
    tt.timed_attacks.list[1].count = nil
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].entity = "beastmaster_rhino"
    tt.timed_attacks.list[1].range_nodes_max = 40
    tt.timed_attacks.list[1].range_nodes_min = 5
    tt.timed_attacks.list[1].sound = "HeroBeastMasterSummonRhinos"
    tt.timed_attacks.list[1].spawn_time = fts(15)
    tt.timed_attacks.list[1].vis_bans = bor(F_FLYING, F_WATER, F_CLIFF)
    tt.timed_attacks.list[1].vis_flags = F_RANGED
    tt.timed_attacks.list[2] = E:clone_c("spawn_attack")
    tt.timed_attacks.list[2].animation = "pets"
    tt.timed_attacks.list[2].cooldown = 13.5
    tt.timed_attacks.list[2].max = nil
    tt.timed_attacks.list[2].disabled = true
    tt.timed_attacks.list[2].entities = {"beastmaster_boar", "beastmaster_wolf"}
    tt.timed_attacks.list[2].sound = "HeroBeastMasterSummonBoar"
    tt.timed_attacks.list[2].spawn_time = fts(35)
    tt.vis.bans = F_POISON

    tt = E:register_t("aura_beastmaster_regeneration", "aura")
    E:add_comps(tt, "hps")
    tt.hps.heal_min = 5
    tt.hps.heal_max = 5
    tt.hps.heal_every = 0.25
    tt.main_script.update = scripts.aura_beastmaster_regeneration.update

    tt = E:register_t("mod_beastmaster_lash", "modifier")
    E:add_comps(tt, "dps")
    tt.modifier.duration = 6
    tt.dps.damage_type = DAMAGE_TRUE
    tt.dps.fx = "fx_bleeding"
    tt.dps.fx_with_blood_color = true
    tt.dps.fx_tracks_target = true
    tt.main_script.insert = scripts.mod_dps.insert
    tt.main_script.update = scripts.mod_dps.update

    tt = E:register_t("beastmaster_boar", "soldier")
    E:add_comps(tt, "melee", "nav_grid")
    anchor_y = 0.29
    image_y = 60
    tt.info.portrait = IS_PHONE and "portraits_hero_0010" or "kr2_info_portraits_heroes_0010"
    tt.health.armor = 0.1
    tt.health.hp_max = nil
    tt.health_bar.offset = vec_2(0, 28)
    tt.info.fn = scripts.beastmaster_pet.get_info
    tt.main_script.insert = scripts.beastmaster_pet.insert
    tt.main_script.update = scripts.beastmaster_pet.update
    tt.fn_level_up = scripts.beastmaster_pet.level_up
    tt.melee.attacks[1].cooldown = 1.5
    tt.melee.attacks[1].damage_max = 8
    tt.melee.attacks[1].damage_min = 2
    tt.melee.attacks[1].hit_time = fts(7)
    tt.melee.attacks[1].vis_bans = bor(F_FLYING, F_CLIFF, F_WATER)
    tt.melee.attacks[1].vis_flags = F_BLOCK
    tt.melee.attacks[1].sound = "HeroBeastMasterBoarAttack"
    tt.melee.attacks[1].xp_gain_factor = 1
    tt.melee.range = 85
    tt.motion.max_speed = 69
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].name = "raise"
    tt.render.sprites[1].prefix = "beastmaster_boar"
    tt.render.sprites[1].angles = {}
    tt.render.sprites[1].angles.walk = {"running"}
    tt.soldier.melee_slot_offset.x = 9
    tt.unit.hit_offset = vec_2(0, 12)
    tt.unit.mod_offset = vec_2(0, 14)
    tt.unit.hide_after_death = true
    tt.unit.explode_fx = nil
    tt.vis.bans = bor(F_SKELETON, F_CANNIBALIZE, F_LYCAN)

    tt = E:register_t("beastmaster_wolf", "soldier")
    E:add_comps(tt, "melee", "nav_grid", "dodge")
    anchor_y = 0.26
    anchor_x = 0.5
    image_y = 50
    image_x = 60
    tt.dodge.chance = 0.5
    tt.dodge.silent = true
    tt.health.armor = 0
    tt.health.magic_armor = 0.5
    tt.health.hp_max = 150
    tt.health_bar.offset = vec_2(0, 42)
    tt.regen.cooldown = 1
    tt.info.i18n_key = "ENEMY_WORG"
    tt.info.enc_icon = 14
    tt.info.portrait = IS_PHONE_OR_TABLET and "portraits_sc_0020" or "info_portraits_sc_0020"
    tt.info.fn = scripts.beastmaster_pet.get_info
    tt.main_script.insert = scripts.beastmaster_pet.insert
    tt.main_script.update = scripts.beastmaster_pet.update
    tt.fn_level_up = scripts.beastmaster_pet.level_up
    tt.melee.attacks[1].cooldown = 1 + fts(14)
    tt.melee.attacks[1].sound = "WolfAttack"
    tt.melee.attacks[1].damage_max = 16
    tt.melee.attacks[1].damage_min = 10
    tt.melee.attacks[1].hit_time = fts(9)
    tt.melee.range = 85
    tt.motion.max_speed = 80
    tt.render.sprites[1].anchor = vec_2(0.6, 0.31)
    tt.render.sprites[1].prefix = "enemy_wolf"
    tt.render.sprites[1].scale = vec_2(1.2, 1.2)
    tt.render.sprites[1].angles = {
        walk = {"walkingRightLeft", "walkingUp", "walkingDown"}
    }

    tt.render.sprites[1].angles.walk = {"walkingRightLeft", "walkingUp", "walkingDown"}
    tt.render.sprites[1].angles_stickiness = {
        walk = 10
    }
    tt.sound_events.death = "DeathPuff"
    tt.sound_events.death_by_explosion = "DeathPuff"
    tt.unit.can_explode = false
    tt.unit.show_blood_pool = false
    tt.unit.hide_after_death = true
    tt.unit.hit_offset = vec_2(0, 15.6)
    tt.unit.marker_offset.y = 2.4
    tt.unit.mod_offset = vec_2(adx(34.8), ady(31.2))
    tt.vis.bans = bor(F_SKELETON, F_CANNIBALIZE, F_LYCAN)

    tt = E:register_t("beastmaster_rhino", "decal_scripted")
    E:add_comps(tt, "nav_path", "motion", "sound_events", "tween")
    anchor_y = 0.45
    image_y = 172
    tt.attack = E:clone_c("area_attack")
    tt.attack.cooldown = fts(6)
    tt.attack.damage = 15
    tt.attack.damage_radius = 32.5
    tt.attack.damage_type = DAMAGE_RUDE
    tt.attack.mod = "mod_beastmaster_rhino"
    tt.attack.damage_bans = bor(F_FLYING, F_CLIFF, F_WATER)
    tt.attack.damage_flags = F_AREA
    tt.attack.mod_chance = nil
    tt.duration = nil
    tt.main_script.insert = scripts.beastmaster_rhino.insert
    tt.main_script.update = scripts.beastmaster_rhino.update
    tt.motion.max_speed = 90
    tt.nav_path.dir = -1
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].angles = {}
    tt.render.sprites[1].angles.walk = {"walkingRightLeft", "walkingUp", "walkingDown"}
    tt.render.sprites[1].angles_custom = {
        walk = {55, 135, 240, 315}
    }
    tt.render.sprites[1].angles_stickiness = {
        walk = 10
    }
    tt.render.sprites[1].loop_forced = true
    tt.render.sprites[1].prefix = "decal_rhino"
    tt.sound_events.insert = "HeroBeastMasterStampede"
    tt.sound_events.insert_args = {
        ignore = 1
    }
    tt.sound_events.remove_stop = "HeroBeastMasterStampede"
    tt.tween.props[1].keys = {{0, 0}, {0.5, 255}, {"this.duration", 255}, {"this.duration+0.5", 0}}
    tt.tween.remove = true

    tt = E:register_t("mod_beastmaster_rhino", "modifier")
    E:add_comps(tt, "render")
    tt.main_script.insert = scripts.mod_stun.insert
    tt.main_script.update = scripts.mod_stun.update
    tt.main_script.remove = scripts.mod_stun.remove
    tt.modifier.duration = nil
    tt.render.sprites[1].prefix = "stun"
    tt.render.sprites[1].size_names = {"small", "big", "big"}
    tt.render.sprites[1].name = "small"
    tt.render.sprites[1].draw_order = 2

    tt = E:register_t("beastmaster_falcon", "decal_scripted")
    E:add_comps(tt, "force_motion", "info", "ui", "custom_attack")
    anchor_y = 0.5
    image_y = 54
    tt.fake_hp = 60
    tt.main_script.update = scripts.beastmaster_falcon.update
    tt.info.fn = scripts.beastmaster_falcon.get_info
    tt.info.portrait = IS_PHONE and "portraits_hero_0011" or "kr2_info_portraits_heroes_0011"
    tt.flight_speed = 45
    tt.flight_height = 80
    tt.custom_attack = E:clone_c("custom_attack")
    tt.custom_attack.min_range = 0
    tt.custom_attack.max_range = 150
    tt.custom_attack.damage_min = 12
    tt.custom_attack.damage_max = 36
    tt.custom_attack.cooldown = 2.5
    tt.custom_attack.xp_gain_factor = 0.85
    tt.custom_attack.damage_type = DAMAGE_RUDE
    tt.custom_attack.vis_flags = F_RANGED
    tt.custom_attack.vis_bans = 0
    tt.custom_attack.sound = "HeroBeastMasterFalconAttack"
    tt.custom_attack.mod = "mod_beastmaster_falcon"
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].prefix = "decal_falcon"
    tt.render.sprites[1].name = "idle"
    tt.render.sprites[1].draw_order = 2
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].name = "decal_flying_shadow"
    tt.render.sprites[2].offset = vec_2(0, 0)
    tt.ui.click_rect = r(-15, 65, 30, 30)
    tt.owner = nil

    tt = E:register_t("mod_beastmaster_falcon", "mod_slow")
    tt.modifier.duration = 1.5

    tt = E:register_t("hero_priest", "hero")
    E:add_comps(tt, "melee", "ranged", "teleport", "timed_attacks")
    anchor_y = 0.18
    image_y = 134
    tt.hero.level_stats.hp_max = {180, 200, 220, 240, 260, 280, 300, 320, 340, 360}
    tt.hero.level_stats.armor = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    tt.hero.level_stats.melee_damage_min = {4, 5, 6, 6, 7, 8, 9, 9, 10, 11}
    tt.hero.level_stats.melee_damage_max = {12, 14, 17, 19, 21, 23, 26, 28, 30, 32}
    tt.hero.level_stats.ranged_damage_min = {4, 5, 6, 6, 7, 8, 9, 9, 10, 11}
    tt.hero.level_stats.ranged_damage_max = {12, 14, 17, 19, 21, 23, 26, 28, 30, 32}
    tt.hero.skills.holylight = E:clone_c("hero_skill")
    tt.hero.skills.holylight.heal_hp = {40, 60, 80}
    tt.hero.skills.holylight.heal_count = {4, 7, 10}
    tt.hero.skills.holylight.revive_chance = {0.15, 0.25, 0.35}
    tt.hero.skills.holylight.xp_gain_factor = 45
    tt.hero.skills.holylight.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.consecrate = E:clone_c("hero_skill")
    tt.hero.skills.consecrate.duration = {6, 10, 14}
    tt.hero.skills.consecrate.extra_damage = {0.15, 0.2, 0.25}
    tt.hero.skills.consecrate.xp_gain_factor = 45
    tt.hero.skills.consecrate.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [9] = 3
    }
    tt.hero.skills.wingsoflight = E:clone_c("hero_skill")
    tt.hero.skills.wingsoflight.range = 120
    tt.hero.skills.wingsoflight.duration = {10, 20, 30}
    tt.hero.skills.wingsoflight.armor_rate = {0.2, 0.3, 0.4}
    tt.hero.skills.wingsoflight.count = {9, 12, 15}
    tt.hero.skills.wingsoflight.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.blessedarmor = E:clone_c("hero_skill")
    tt.hero.skills.blessedarmor.armor = {0.25, 0.5, 0.75}
    tt.hero.skills.blessedarmor.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.divinehealth = E:clone_c("hero_skill")
    tt.hero.skills.divinehealth.extra_hp = {60, 120, 180}
    tt.hero.skills.divinehealth.regen_factor = {1.1, 1.3, 1.5}
    tt.hero.skills.divinehealth.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.health.armor = nil
    tt.health.dead_lifetime = 15
    tt.health.hp_max = nil
    tt.health_bar.offset = vec_2(0, 37)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_priest.level_up
    tt.hero.tombstone_show_time = fts(60)
    tt.idle_flip.cooldown = 1
    tt.info.fn = scripts.hero_basic.get_info
    tt.info.hero_portrait = "kr2_hero_portraits_0005"
    tt.info.portrait = IS_PHONE and "portraits_hero_0005" or "kr2_info_portraits_heroes_0005"
    tt.info.damage_icon = "magic"
    tt.info.i18n_key = "HERO_PRIEST"
    tt.main_script.update = scripts.hero_priest.update
    tt.motion.max_speed = 90
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].prefix = "hero_priest"
    tt.soldier.melee_slot_offset.x = 5
    tt.sound_events.change_rally_point = "HeroPriestTaunt"
    tt.sound_events.death = "HeroPriestDeath"
    tt.sound_events.respawn = "HeroPriestTauntIntro"
    tt.sound_events.insert = "HeroPriestTauntIntro"
    tt.sound_events.hero_room_select = "HeroPriestTauntSelect"
    tt.teleport.min_distance = 0
    tt.teleport.sound = "HeroPriestWings"
    tt.teleport.disabled = true
    tt.unit.hit_offset = vec_2(0, 12)
    tt.unit.marker_offset = vec_2(0, -1)
    tt.unit.mod_offset = vec_2(0, 13.88)
    tt.melee.range = 51.2
    tt.melee.attacks[1] = E:clone_c("melee_attack")
    tt.melee.attacks[1].hit_time = fts(12)
    tt.melee.attacks[1].cooldown = 1
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].vis_bans = bor(F_FLYING, F_CLIFF)
    tt.melee.attacks[1].vis_flags = F_BLOCK
    tt.melee.attacks[1].damage_type = DAMAGE_PHYSICAL
    tt.melee.attacks[1].xp_gain_factor = 4
    tt.ranged.attacks[1] = E:clone_c("bullet_attack")
    tt.ranged.attacks[1].bullet = "bolt_priest"
    tt.ranged.attacks[1].cooldown = 0.8 + fts(13)
    tt.ranged.attacks[1].min_range = 25
    tt.ranged.attacks[1].max_range = 160
    tt.ranged.attacks[1].shoot_time = fts(13)
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(-8, 34)}
    tt.ranged.attacks[1].check_target_before_shot = true
    tt.timed_attacks.list[1] = E:clone_c("mod_attack")
    tt.timed_attacks.list[1].animation = "holylight"
    tt.timed_attacks.list[1].cooldown = 6
    tt.timed_attacks.list[1].max_per_cast = 1
    tt.timed_attacks.list[1].mod = "mod_priest_heal"
    tt.timed_attacks.list[1].revive_chance = 0
    tt.timed_attacks.list[1].range = 160
    tt.timed_attacks.list[1].shoot_time = fts(4)
    tt.timed_attacks.list[1].sound = "HeroPriestHolyLight"
    tt.timed_attacks.list[1].excluded_templates = {"soldier_mecha", "soldier_death_rider", "soldier_skeleton",
                                                   "soldier_skeleton_knight", "soldier_frankenstein",
                                                   "soldier_sand_warrior", "soldier_dracolich_golem"}
    tt.timed_attacks.list[2] = E:clone_c("mod_attack")
    tt.timed_attacks.list[2].disabled = true
    tt.timed_attacks.list[2].animation = "consecrate"
    tt.timed_attacks.list[2].cooldown = 8
    tt.timed_attacks.list[2].excluded_templates = {}
    tt.timed_attacks.list[2].mod = "mod_priest_consecrate"
    tt.timed_attacks.list[2].range = 160
    tt.timed_attacks.list[2].shoot_time = fts(15)
    tt.timed_attacks.list[2].sound = "HeroPriestConsecrate"
    tt.blessedarmor_extra = 0
    tt.divinehealth_extra_hp = 0
    tt.divinehealth_regen_factor = 0

    tt = E:register_t("bolt_priest", "bolt")
    tt.bullet.xp_gain_factor = 4
    tt.render.sprites[1].prefix = "bolt_priest"
    tt.bullet.damage_min = nil
    tt.bullet.damage_max = nil

    tt = E:register_t("mod_priest_heal", "modifier")
    E:add_comps(tt, "hps", "render")
    tt.modifier.duration = fts(24)
    tt.hps.heal_min = 25
    tt.hps.heal_max = 25
    tt.hps.heal_every = 9e+99
    tt.render.sprites[1].name = "fx_priest_heal"
    tt.render.sprites[1].loop = false
    tt.main_script.insert = scripts.mod_hps.insert
    tt.main_script.update = scripts.mod_hps.update

    tt = E:register_t("fx_priest_revive", "fx")
    tt.render.sprites[1].name = "fx_priest_revive"
    tt.render.sprites[1].anchor.y = 0.15

    tt = E:register_t("fx_priest_wave_out", "decal_tween")
    tt.render.sprites[1].name = "hero_priest_healWave"
    tt.render.sprites[1].animated = false
    tt.tween.props[1].name = "scale"
    tt.tween.props[1].keys = {{0, vec_2(2.4, 2.4)}, {0.32, vec_2(1, 1)}}
    tt.tween.props[2] = E:clone_c("tween_prop")
    tt.tween.props[2].keys = {{0, 255}, {0.32, 0}}

    tt = E:register_t("fx_priest_wave_in", "fx_priest_wave_out")
    tt.tween.props[1].keys = {{0, vec_2(1, 1)}, {0.32, vec_2(2.4, 2.4)}}

    tt = E:register_t("mod_priest_armor", "modifier")
    E:add_comps(tt, "render", "armor_buff")
    tt.modifier.duration = nil
    tt.modifier.use_mod_offset = false
    tt.armor_rate = 0.3
    tt.main_script.insert = scripts.mod_priest_armor.insert
    tt.main_script.remove = scripts.mod_priest_armor.remove
    tt.main_script.update = scripts.mod_priest_armor.update
    tt.render.sprites[1].name = "decal_priest_armor"
    tt.render.sprites[1].anchor = vec_2(0.51, 0.17307692307692307)
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].name = "fx_priest_armor"
    tt.render.sprites[2].anchor.x = 0.51
    tt.render.sprites[2].loop = false
    tt.render.sprites[2].hide_after_runs = 1

    tt = E:register_t("mod_priest_consecrate", "modifier")
    E:add_comps(tt, "render", "tween")
    tt.render.sprites[1].name = "decal_priest_consecrate"
    tt.render.sprites[1].draw_order = 2
    tt.render.sprites[1].anchor.y = 0.32
    tt.render.sprites[1].offset.y = 7
    tt.main_script.update = scripts.mod_priest_consecrate.update
    tt.modifier.duration = nil
    tt.extra_damage = nil
    tt.tween.disabled = true
    tt.tween.remove = false
    tt.tween.props[1].keys = {{0, 0}, {0.5, 255}}

    tt = E:register_t("hero_dracolich", "hero")
    E:add_comps(tt, "ranged", "timed_attacks")
    image_y = 308
    anchor_y = 0.12962962962962962
    tt.hero.level_stats.hp_max = {425, 450, 475, 500, 525, 550, 575, 600, 625, 650}
    tt.hero.level_stats.armor = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    tt.hero.level_stats.ranged_damage_min = {6, 8, 9, 11, 12, 14, 15, 17, 18, 20}
    tt.hero.level_stats.ranged_damage_max = {18, 23, 27, 32, 36, 41, 45, 50, 54, 59}
    tt.hero.level_stats.disease_damage = {2, 2, 3, 3, 4, 4, 5, 5, 6, 6}
    tt.hero.skills.spinerain = E:clone_c("hero_skill")
    tt.hero.skills.spinerain.count = {6, 8, 10}
    tt.hero.skills.spinerain.damage_min = {12, 16, 20}
    tt.hero.skills.spinerain.damage_max = {36, 40, 44}
    tt.hero.skills.spinerain.xp_gain = {20, 35, 50}
    tt.hero.skills.spinerain.xp_level_steps = {
        [4] = 1,
        [7] = 2,
        [10] = 3
    }
    tt.hero.skills.bonegolem = E:clone_c("hero_skill")
    tt.hero.skills.bonegolem.hp_max = {80, 120, 160}
    tt.hero.skills.bonegolem.damage_min = {2, 4, 6}
    tt.hero.skills.bonegolem.damage_max = {6, 8, 10}
    tt.hero.skills.bonegolem.duration = {20, 30, 40}
    tt.hero.skills.bonegolem.xp_gain = {20, 35, 50}
    tt.hero.skills.bonegolem.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.plaguecarrier = E:clone_c("hero_skill")
    tt.hero.skills.plaguecarrier.xp_gain = {20, 35, 50}
    tt.hero.skills.plaguecarrier.count = {6, 8, 10}
    tt.hero.skills.plaguecarrier.duration = {4, 5, 6}
    tt.hero.skills.plaguecarrier.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [9] = 3
    }
    tt.hero.skills.diseasenova = E:clone_c("hero_skill")
    tt.hero.skills.diseasenova.xp_gain = {20, 35, 50}
    tt.hero.skills.diseasenova.damage_min = {50, 100, 150}
    tt.hero.skills.diseasenova.damage_max = {50, 100, 150}
    tt.hero.skills.diseasenova.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.unstabledisease = E:clone_c("hero_skill")
    tt.hero.skills.unstabledisease.spread_damage = {30, 60, 90}
    tt.hero.skills.unstabledisease.xp_gain = {20, 35, 50}
    tt.hero.skills.unstabledisease.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.use_custom_spawn_point = true
    tt.health.armor = nil
    tt.health.dead_lifetime = 15
    tt.health.hp_max = nil
    tt.health_bar.offset = vec_2(0, 157)
    tt.health_bar.type = HEALTH_BAR_SIZE_LARGE
    tt.health_bar.draw_order = -1
    tt.health_bar.sort_y_offset = -200
    tt.hero.fn_level_up = scripts.hero_dracolich.level_up
    tt.hero.tombstone_show_time = nil
    tt.idle_flip.cooldown = 10
    tt.info.hero_portrait = "kr2_hero_portraits_0016"
    tt.info.portrait = IS_PHONE and "portraits_hero_0019" or "kr2_info_portraits_heroes_0017"
    tt.info.damage_icon = "magic"
    tt.info.i18n_key = "HERO_DRACOLICH"
    tt.main_script.insert = scripts.hero_dracolich.insert
    tt.main_script.update = scripts.hero_dracolich.update
    tt.motion.max_speed = 100
    tt.nav_rally.requires_node_nearby = false
    tt.nav_grid.ignore_waypoints = true
    tt.nav_grid.valid_terrains = TERRAIN_ALL_MASK
    tt.nav_grid.valid_terrains_dest = TERRAIN_ALL_MASK
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].prefix = "hero_dracolich"
    tt.render.sprites[1].angles.walk = {"idle"}
    tt.render.sprites[1].sort_y_offset = -200
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].name = "Halloween_hero_bones_layer1_0160"
    tt.render.sprites[2].anchor.y = anchor_y
    tt.render.sprites[2].offset = vec_2(0, 0)
    tt.render.sprites[2].alpha = 100
    tt.sound_events.change_rally_point = "HeroDracolichTaunt"
    tt.sound_events.death = "HeroDracolichDeath"
    tt.sound_events.respawn = "HeroDracolichRespawn"
    tt.sound_events.insert = "HeroDracolichTauntIntro"
    tt.sound_events.hero_room_select = "HeroDracolichTauntSelect"
    tt.ui.click_rect = IS_PHONE and r(-35, 50, 70, 70) or r(-25, 70, 50, 45)
    tt.unit.blood_color = BLOOD_GRAY
    tt.unit.hit_offset = vec_2(0, 98)
    tt.unit.hide_after_death = true
    tt.unit.marker_offset = vec_2(0, -0.15)
    tt.unit.mod_offset = vec_2(0, 101)
    tt.vis.bans = bor(tt.vis.bans, F_EAT, F_NET, F_POISON)
    tt.vis.flags = bor(tt.vis.flags, F_FLYING)
    tt.ranged.attacks[1] = E:clone_c("bullet_attack")
    tt.ranged.attacks[1].bullet = "fireball_dracolich"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(35, 85)}
    tt.ranged.attacks[1].cooldown = 1.3
    tt.ranged.attacks[1].min_range = 0
    tt.ranged.attacks[1].max_range = 120
    tt.ranged.attacks[1].shoot_time = fts(16)
    tt.ranged.attacks[1].sync_animation = true
    tt.ranged.attacks[1].ignore_hit_offset = true
    tt.ranged.attacks[1].animation = "range_attack"
    tt.ranged.attacks[1].estimated_flight_time = 1
    tt.ranged.attacks[1].sound = "HeroDracolichAttack"
    tt.timed_attacks.list[1] = E:clone_c("spawn_attack")
    tt.timed_attacks.list[1].animation = "golem"
    tt.timed_attacks.list[1].cooldown = 13.5
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].entity = "soldier_dracolich_golem"
    tt.timed_attacks.list[1].sound = "HeroDracolichSpawnDog"
    tt.timed_attacks.list[1].spawn_time = fts(10)
    tt.timed_attacks.list[1].vis_flags = F_BLOCK
    tt.timed_attacks.list[1].vis_bans = 0
    tt.timed_attacks.list[1].min_range = 25
    tt.timed_attacks.list[1].max_range = 75
    tt.timed_attacks.list[2] = E:clone_c("spawn_attack")
    tt.timed_attacks.list[2].animation = "spinerain"
    tt.timed_attacks.list[2].cooldown = 18
    tt.timed_attacks.list[2].disabled = true
    tt.timed_attacks.list[2].entity = "dracolich_spine"
    tt.timed_attacks.list[2].spawn_time = fts(11)
    tt.timed_attacks.list[2].vis_flags = bor(F_RANGED)
    tt.timed_attacks.list[2].vis_bans = bor(F_FLYING)
    tt.timed_attacks.list[2].min_range = 0
    tt.timed_attacks.list[2].max_range = 125
    tt.timed_attacks.list[3] = E:clone_c("area_attack")
    tt.timed_attacks.list[3].animation = "nova"
    tt.timed_attacks.list[3].cooldown = 26.1
    tt.timed_attacks.list[3].disabled = true
    tt.timed_attacks.list[3].damage_max = nil
    tt.timed_attacks.list[3].damage_min = nil
    tt.timed_attacks.list[3].damage_type = DAMAGE_TRUE
    tt.timed_attacks.list[3].hit_time = fts(20)
    tt.timed_attacks.list[3].vis_flags = bor(F_RANGED)
    tt.timed_attacks.list[3].vis_bans = bor(F_FLYING)
    tt.timed_attacks.list[3].min_range = 0
    tt.timed_attacks.list[3].max_range = 75
    tt.timed_attacks.list[3].min_count = 3
    tt.timed_attacks.list[3].sound = "HeroDracolichKamikaze"
    tt.timed_attacks.list[3].respawn_delay = 1
    tt.timed_attacks.list[3].respawn_sound = "HeroDracolichRespawn"
    tt.timed_attacks.list[3].mod = "mod_dracolich_disease"
    tt.timed_attacks.list[4] = E:clone_c("spawn_attack")
    tt.timed_attacks.list[4].animation = "plague"
    tt.timed_attacks.list[4].cooldown = 18
    tt.timed_attacks.list[4].disabled = true
    tt.timed_attacks.list[4].entity = "dracolich_plague_carrier"
    tt.timed_attacks.list[4].spawn_offset = vec_2(43, 81)
    tt.timed_attacks.list[4].spawn_time = fts(11)
    tt.timed_attacks.list[4].vis_flags = bor(F_RANGED)
    tt.timed_attacks.list[4].vis_bans = bor(F_FLYING)
    tt.timed_attacks.list[4].range_nodes_max = 50
    tt.timed_attacks.list[4].range_nodes_min = 10
    tt.timed_attacks.list[4].sound = "HeroDracolichSoulsPlague"
    tt.timed_attacks.list[4].count = nil

    tt = E:register_t("fx_fireball_dracolich_decal", "decal_tween")
    tt.render.sprites[1].name = "Halloween_hero_bones_proyExplosion_decal"
    tt.render.sprites[1].animated = false
    tt.tween.props[1].keys = {{fts(17), 255}, {fts(27), 0}}

    tt = E:register_t("fx_fireball_dracolich_ground", "fx")
    tt.render.sprites[1].name = "fx_dracolich_fireball_explosion_ground"
    tt.render.sprites[1].anchor.y = 0.20512820512820512
    tt.render.sprites[1].sort_y_offset = -5

    tt = E:register_t("fx_fireball_dracolich_air", "fx")
    tt.render.sprites[1].name = "fx_dracolich_fireball_explosion_air"
    tt.render.sprites[1].anchor.y = 0.24
    tt.render.sprites[1].scale = vec_2(0.7, 0.7)

    tt = E:register_t("ps_fireball_dracolich")
    E:add_comps(tt, "pos", "particle_system")
    tt.particle_system.name = "dracolich_fireball_particle_1"
    tt.particle_system.animated = true
    tt.particle_system.loop = false
    tt.particle_system.particle_lifetime = {fts(10), fts(16)}
    tt.particle_system.scale_var = {0.78, 1.43}
    tt.particle_system.scales_x = {1, 1.25}
    tt.particle_system.scales_y = {1, 1.25}
    tt.particle_system.emission_rate = 20
    tt.particle_system.emit_rotation_spread = math.pi
    tt.particle_system.alphas = {255, 0}

    tt = E:register_t("fireball_dracolich", "bullet")
    tt.render.sprites[1].name = "Halloween_hero_bones_proy"
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].z = Z_BULLETS
    tt.render.sprites[1].anchor.x = 0.69
    tt.bullet.damage_type = DAMAGE_TRUE
    tt.bullet.min_speed = 390
    tt.bullet.max_speed = 390
    tt.bullet.hit_fx = "fx_fireball_dracolich_ground"
    tt.bullet.hit_fx_air = "fx_fireball_dracolich_air"
    tt.bullet.hit_decal = "fx_fireball_dracolich_decal"
    tt.bullet.damage_max = nil
    tt.bullet.damage_min = nil
    tt.bullet.damage_radius = 40
    tt.bullet.xp_gain_factor = 2.5
    tt.bullet.particles_name = "ps_fireball_dracolich"
    tt.bullet.vis_flags = F_RANGED
    tt.bullet.mod = nil
    tt.main_script.update = scripts.fireball_dragon.update
    tt.sound_events.hit = "HeroDragonAttackHit"

    tt = E:register_t("mod_dracolich_disease", "modifier")
    E:add_comps(tt, "render", "dps")
    tt.modifier.duration = 4
    tt.modifier.vis_flags = F_MOD
    tt.render.sprites[1].prefix = "dracolich_disease"
    tt.render.sprites[1].size_names = {"small", "big", "big"}
    tt.render.sprites[1].name = "small"
    tt.render.sprites[1].draw_order = 2
    tt.dps.damage_min = nil
    tt.dps.damage_max = nil
    tt.dps.damage_type = DAMAGE_TRUE
    tt.dps.damage_every = 1
    tt.dps.kill = true
    tt.spread_active = false
    tt.spread_radius = 60
    tt.spread_damage = nil
    tt.spread_fx = "fx_dracolich_disease_explosion"
    tt.main_script.insert = scripts.mod_dps.insert
    tt.main_script.update = scripts.mod_dps.update
    tt.main_script.remove = scripts.mod_dracolich_disease.remove

    tt = E:register_t("fx_dracolich_disease_explosion", "fx")
    tt.render.sprites[1].name = "dracolich_disease_explosion"

    tt = E:register_t("fx_dracolich_skeleton_glow", "fx")
    tt.render.sprites[1].name = "fx_dracolich_skeleton_glow"

    tt = E:register_t("dracolich_spine", "bullet")
    E:add_comps(tt, "tween")
    tt.main_script.update = scripts.dracolich_spine.update
    tt.bullet.damage_max = nil
    tt.bullet.damage_min = nil
    tt.bullet.damage_radius = 50
    tt.bullet.damage_type = DAMAGE_TRUE
    tt.bullet.damage_flags = F_AREA
    tt.bullet.damage_bans = F_FRIEND
    tt.bullet.mod = nil
    tt.bullet.hit_time = fts(4)
    tt.bullet.duration = 2
    tt.render.sprites[1].prefix = "dracolich_spine"
    tt.render.sprites[1].name = "start"
    tt.render.sprites[1].anchor.y = 0.09027777777777778
    tt.render.sprites[1].z = Z_OBJECTS
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].name = "Halloween_hero_bones_attackDecal"
    tt.render.sprites[2].z = Z_DECALS
    tt.tween.remove = false
    tt.tween.props[1].keys = {{0, 0}, {fts(3), 0}, {fts(6), 255}, {tt.bullet.duration, 255},
                              {tt.bullet.duration + fts(10), 0}}
    tt.tween.props[1].sprite_id = 2
    tt.sound_events.delayed_insert = "HeroDracolichBoneRain"

    tt = E:register_t("fx_dracolich_nova_cloud", "decal_tween")
    tt.render.sprites[1].name = "Halloween_hero_bones_particle"
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].scale = vec_2(0.75, 0.75)
    tt.tween.props[1].keys = {{0, 127}, {fts(20), 0}}
    tt.tween.props[2] = E:clone_c("tween_prop")
    tt.tween.props[2].name = "offset"
    tt.tween.props[2].keys = {}

    tt = E:register_t("fx_dracolich_nova_explosion", "fx")
    tt.render.sprites[1].name = "fx_dracolich_explosion"
    tt.render.sprites[1].anchor.y = 0.2
    tt.render.sprites[1].sort_y_offset = -1

    tt = E:register_t("fx_dracolich_nova_decal", "decal_tween")
    tt.render.sprites[1].name = "Halloween_hero_bones_explosion_decal"
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].z = Z_DECALS
    tt.tween.props[1].keys = {{fts(40), 255}, {fts(45), 0}}

    tt = E:register_t("dracolich_plague_carrier", "aura")
    E:add_comps(tt, "render", "nav_path", "motion", "tween")
    tt.aura.duration = nil
    tt.aura.duration_var = 0.5
    tt.aura.damage_min = 10
    tt.aura.damage_max = 15
    tt.aura.damage_radius = 45
    tt.aura.damage_type = DAMAGE_TRUE
    tt.aura.damage_cycle = fts(3)
    tt.aura.damage_flags = F_AREA
    tt.aura.damage_bans = 0
    tt.aura.mod = "mod_dracolich_disease"
    tt.motion.max_speed = 3.5 * FPS
    tt.motion.max_speed_var = 0.25 * FPS
    tt.main_script.insert = scripts.dracolich_plague_carrier.insert
    tt.main_script.update = scripts.dracolich_plague_carrier.update
    tt.render.sprites[1].name = "dracolich_plague_carrier"
    tt.render.sprites[1].sort_y_offset = -21
    tt.render.sprites[1].z = Z_OBJECTS
    tt.tween.disabled = true
    tt.tween.remove = true
    tt.tween.props[1].keys = {{0, 255}, {tt.aura.duration_var, 0}}

    tt = E:register_t("ps_dracolich_plague", "ps_bolt_necromancer_trail")
    tt.particle_system.particle_lifetime = {fts(15), fts(25)}
    tt.particle_system.scales_x = {0.75, 2.5}
    tt.particle_system.scales_y = {0.75, 2.5}
    tt.particle_system.scale_var = {0.5, 1}
    tt.particle_system.emission_rate = 10
    tt.particle_system.sort_y_offset = -20
    tt.particle_system.z = Z_OBJECTS

    tt = E:register_t("soldier_dracolich_golem", "soldier")
    E:add_comps(tt, "melee", "nav_grid", "reinforcement")
    image_y = 48
    anchor_y = 0.16666666666666666
    tt.info.portrait = IS_PHONE and "portraits_hero_0021" or "kr2_info_portraits_heroes_0022"
    tt.health.armor = 0
    tt.health.hp_max = 80
    tt.health_bar.offset = vec_2(0, 36)
    tt.reinforcement.duration = nil
    tt.reinforcement.fade = false
    tt.info.fn = scripts.soldier_barrack.get_info
    tt.main_script.insert = scripts.soldier_reinforcement.insert
    tt.main_script.update = scripts.soldier_reinforcement.update
    tt.melee.attacks[1].cooldown = 2
    tt.melee.attacks[1].damage_max = 6
    tt.melee.attacks[1].damage_min = 2
    tt.melee.attacks[1].hit_time = fts(7)
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].vis_bans = bor(F_FLYING, F_CLIFF, F_WATER)
    tt.melee.attacks[1].vis_flags = F_BLOCK
    tt.melee.range = 85
    tt.motion.max_speed = 60
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].name = "raise"
    tt.render.sprites[1].prefix = "soldier_dracolich_golem"
    tt.render.sprites[1].angles = {}
    tt.render.sprites[1].angles.walk = {"running"}
    tt.soldier.melee_slot_offset.x = 20
    tt.sound_events.death = "DeathSkeleton"
    tt.unit.blood_color = BLOOD_GRAY
    tt.unit.hit_offset = vec_2(0, 12)
    tt.unit.mod_offset = vec_2(0, 18)
    tt.unit.explode_fx = nil
    tt.vis.bans = bor(F_POISON, F_SKELETON, F_LYCAN, F_CANNIBALIZE)

    tt = E:register_t("hero_pirate", "hero")
    E:add_comps(tt, "melee", "ranged", "timed_attacks", "pickpocket")
    anchor_y = 0.18
    image_y = 88
    tt.hero.level_stats.hp_max = {225, 250, 275, 300, 325, 350, 375, 400, 425, 450}
    tt.hero.level_stats.armor = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    tt.hero.level_stats.melee_damage_min = {8, 10, 12, 13, 15, 17, 18, 20, 22, 24}
    tt.hero.level_stats.melee_damage_max = {16, 19, 22, 25, 28, 31, 34, 37, 41, 45}
    tt.hero.level_stats.ranged_damage_min = {29, 35, 41, 47, 53, 59, 65, 71, 76, 81}
    tt.hero.level_stats.ranged_damage_max = {55, 66, 76, 87, 98, 109, 120, 131, 142, 153}
    tt.hero.fn_level_up = scripts.hero_pirate.level_up
    tt.hero.tombstone_show_time = fts(60)
    tt.hero.skills.swordsmanship = E:clone_c("hero_skill")
    tt.hero.skills.swordsmanship.extra_damage = {8, 16, 24}
    tt.hero.skills.swordsmanship.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.looting = E:clone_c("hero_skill")
    tt.hero.skills.looting.percent = {0.1, 0.2, 0.3}
    tt.hero.skills.looting.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.toughness = E:clone_c("hero_skill")
    tt.hero.skills.toughness.hp_max = {80, 160, 240}
    tt.hero.skills.toughness.regen = {20, 40, 60}
    tt.hero.skills.toughness.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.kraken = E:clone_c("hero_skill")
    tt.hero.skills.kraken.slow_factor = {0.75, 0.5, 0.25}
    tt.hero.skills.kraken.max_enemies = {4, 5, 6}
    tt.hero.skills.kraken.xp_gain = {50, 100, 150}
    tt.hero.skills.kraken.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [9] = 3
    }
    tt.hero.skills.scattershot = E:clone_c("hero_skill")
    tt.hero.skills.scattershot.fragments = {4, 6, 8}
    tt.hero.skills.scattershot.fragment_damage = {12, 14, 15}
    tt.hero.skills.scattershot.xp_gain = {40, 80, 120}
    tt.hero.skills.scattershot.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.health.armor = tt.hero.level_stats.armor[1]
    tt.health.dead_lifetime = 15
    tt.health.hp_max = tt.hero.level_stats.hp_max[1]
    tt.health_bar.offset = vec_2(0, 38.16)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.idle_flip.cooldown = 1
    tt.info.fn = scripts.hero_basic.get_info
    tt.info.hero_portrait = "kr2_hero_portraits_0004"
    tt.info.portrait = IS_PHONE and "portraits_hero_0004" or "kr2_info_portraits_heroes_0004"
    tt.info.i18n_key = "HERO_PIRATE"
    tt.main_script.insert = scripts.hero_pirate.insert
    tt.main_script.update = scripts.hero_pirate.update
    tt.melee.attacks[1] = E:clone_c("melee_attack")
    tt.melee.attacks[1].cooldown = 1
    tt.melee.attacks[1].damage_max = nil
    tt.melee.attacks[1].damage_min = nil
    tt.melee.attacks[1].hit_time = fts(9)
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].vis_bans = bor(F_FLYING, F_CLIFF)
    tt.melee.attacks[1].vis_flags = F_BLOCK
    tt.melee.attacks[1].xp_gain_factor = 2.5
    tt.melee.range = 83.2
    tt.motion.max_speed = 80
    tt.pickpocket.chance = 0.3
    tt.pickpocket.fx = "fx_coin_jump"
    tt.pickpocket.steal_max = 10
    tt.pickpocket.steal_min = 5
    tt.ranged.attacks[1] = E:clone_c("bullet_attack")
    tt.ranged.attacks[1].animation = "shoot"
    tt.ranged.attacks[1].bullet = "pirate_shotgun"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(0, 18), vec_2(15, 10), vec_2(19, 20)}
    tt.ranged.attacks[1].cooldown = 5.4
    tt.ranged.attacks[1].max_range = 140
    tt.ranged.attacks[1].min_range = 25
    tt.ranged.attacks[1].shoot_time = fts(15)
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].angles = {}
    tt.render.sprites[1].angles.shoot = {"shoot", "shootUp", "shootDown"}
    tt.render.sprites[1].angles.walk = {"running"}
    tt.render.sprites[1].angles_custom = {45, 135, 210, 315}
    tt.render.sprites[1].angles_flip_vertical = {
        shoot = true
    }
    tt.render.sprites[1].name = "idle"
    tt.render.sprites[1].prefix = "hero_pirate"
    tt.soldier.melee_slot_offset.x = 5
    tt.sound_events.change_rally_point = "HeroPirateTaunt"
    tt.sound_events.death = "HeroPirateDeath"
    tt.sound_events.respawn = "HeroPirateTauntIntro"
    tt.sound_events.insert = "HeroPirateTauntIntro"
    tt.sound_events.hero_room_select = "HeroPirateTauntSelect"
    tt.timed_attacks.list[1] = E:clone_c("aura_attack")
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].cooldown = 14.4
    tt.timed_attacks.list[1].min_range = 0
    tt.timed_attacks.list[1].max_range = 200
    tt.timed_attacks.list[1].bullet = "kraken_aura"
    tt.timed_attacks.list[1].animation = "kraken"
    tt.timed_attacks.list[1].shoot_time = fts(15)
    tt.timed_attacks.list[1].sound = "HeroPirateKraken"
    tt.timed_attacks.list[1].vis_bans = bor(F_FLYING, F_CLIFF, F_WATER, F_BOSS)
    tt.timed_attacks.list[1].vis_flags = bor(F_RANGED)
    tt.timed_attacks.list[1].min_enemies_nearby = 1
    tt.timed_attacks.list[1].nearby_range = 60
    tt.timed_attacks.list[2] = E:clone_c("bullet_attack")
    tt.timed_attacks.list[2].animation = "bombing"
    tt.timed_attacks.list[2].bullet = "pirate_exploding_barrel"
    tt.timed_attacks.list[2].bullet_start_offset = {vec_2(-5, 16)}
    tt.timed_attacks.list[2].cooldown = 10.8
    tt.timed_attacks.list[2].max_range = 140.8
    tt.timed_attacks.list[2].min_range = 0
    tt.timed_attacks.list[2].shoot_time = fts(9.5)
    tt.timed_attacks.list[2].vis_bans = 0
    tt.timed_attacks.list[2].disabled = true
    tt.unit.hit_offset = vec_2(0, 12)
    tt.unit.marker_offset = vec_2(0, -0.84)
    tt.unit.mod_offset = vec_2(0, 14.16)
    tt.swordsmanship_extra = 0
    tt.toughness_extra_hp = 0
    tt = E:register_t("pirate_shotgun", "shotgun")
    tt.bullet.level = 0
    tt.bullet.damage_min = nil
    tt.bullet.damage_max = nil
    tt.bullet.min_speed = 40 * FPS
    tt.bullet.max_speed = 40 * FPS
    tt.bullet.hit_blood_fx = "fx_blood_splat"
    tt.bullet.miss_fx = "fx_smoke_bullet"
    tt.bullet.miss_fx_water = "fx_splash_small"
    tt.bullet.xp_gain_factor = 2.5
    tt.render.sprites[1].hidden = true
    tt.sound_events.insert = "ShotgunSound"

    tt = E:register_t("pirate_loot_aura", "aura")
    tt.aura.mod = "mod_pirate_loot"
    tt.aura.cycle_time = fts(10)
    tt.aura.requires_alive_source = true
    tt.aura.duration = -1
    tt.aura.radius = 90
    tt.aura.track_source = true
    tt.aura.track_dead = true
    tt.aura.filter_source = true
    tt.aura.vis_bans = bor(F_FRIEND, F_BOSS)
    tt.aura.vis_flags = bor(F_MOD, F_RANGED)
    tt.main_script.insert = scripts.aura_apply_mod.insert
    tt.main_script.update = scripts.aura_apply_mod.update

    tt = E:register_t("mod_pirate_loot", "modifier")
    tt.modifier.duration = fts(13)
    tt.main_script.insert = scripts.mod_pirate_loot.insert
    tt.main_script.update = scripts.mod_pirate_loot.update
    tt.percent = nil
    tt.extra_loot = 0

    tt = E:register_t("kraken_aura", "aura")
    tt.main_script.insert = scripts.kraken_aura.insert
    tt.main_script.update = scripts.aura_apply_mod.update
    tt.aura.mod = "mod_stun_kraken"
    tt.aura.cycle_time = fts(10)
    tt.aura.duration = 3
    tt.aura.radius = 40
    tt.aura.vis_flags = bor(F_RANGED)
    tt.aura.vis_bans = bor(F_BOSS, F_FLYING, F_WATER, F_CLIFF, F_FRIEND, F_HERO)
    tt.max_active_targets = 2
    tt.active_targets_count = 0
    tt = E:register_t("kraken_aura_slow", "aura")
    tt.main_script.insert = scripts.aura_apply_mod.insert
    tt.main_script.update = scripts.aura_apply_mod.update
    tt.aura.mod = "mod_slow_kraken"
    tt.aura.cycle_time = fts(10)
    tt.aura.duration = 3
    tt.aura.radius = 40
    tt.aura.vis_flags = bor(F_RANGED)
    tt.aura.vis_bans = bor(F_BOSS, F_FLYING, F_WATER, F_CLIFF, F_FRIEND, F_HERO)

    tt = E:register_t("mod_stun_kraken", "modifier")
    E:add_comps(tt, "render")
    tt.modifier.replaces_lower = false
    tt.modifier.resets_same = false
    tt.modifier.use_mod_offset = false
    tt.render.sprites[1].prefix = "kraken_tentacle"
    tt.render.sprites[1].size_names = {"small", "big", "big"}
    tt.render.sprites[1].name = "grab"
    tt.render.sprites[1].size_anchors_y = {0.325, 0.28, 0.28}
    tt.main_script.insert = scripts.mod_stun_kraken.insert
    tt.main_script.remove = scripts.mod_stun_kraken.remove
    tt.main_script.update = scripts.mod_stun_kraken.update

    tt = E:register_t("mod_dps_kraken", "modifier")
    E:add_comps(tt, "dps")
    tt.modifier.level = 1
    tt.modifier.duration = 3
    tt.dps.damage_min = 3
    tt.dps.damage_max = 3
    tt.dps.damage_every = fts(10)
    tt.main_script.insert = scripts.mod_dps.insert
    tt.main_script.update = scripts.mod_dps.update

    tt = E:register_t("mod_slow_kraken", "mod_slow")
    tt.modifier.duration = fts(10)
    tt.slow.factor = 0.5

    tt = E:register_t("pirate_exploding_barrel", "bomb")
    tt.bullet.flight_time = fts(20)
    tt.bullet.g = -1 / (fts(1) * fts(1))
    tt.bullet.damage_min = 0
    tt.bullet.damage_max = 0
    tt.bullet.hide_radius = nil
    tt.bullet.hit_fx = "fx_barrel_explosion"
    tt.sound_events.hit = nil
    tt.sound_events.insert = "HeroPirateExplosiveBarrel"
    tt.render.sprites[1].name = "hero_pirate_barrelProyectile"
    tt.render.sprites[1].animated = false
    tt.main_script.update = scripts.pirate_exploding_barrel.update
    tt.fragments = 0

    tt = E:register_t("fx_barrel_explosion", "fx")
    tt.render.sprites[1].name = "barrel_explosion"
    tt.render.sprites[1].z = Z_BULLETS

    tt = E:register_t("barrel_fragment", "bomb")
    tt.bullet.align_with_trajectory = true
    tt.bullet.flight_time = fts(16)
    tt.bullet.g = -1 / (fts(1) * fts(1))
    tt.bullet.damage_min = 0
    tt.bullet.damage_max = 0
    tt.bullet.damage_radius = 38.4
    tt.bullet.hit_fx = "fx_fragment_ground_explosion"
    tt.bullet.hit_decal = "decal_bomb_crater"
    tt.bullet.particles_name = "ps_barrel_fragment"
    tt.bullet.pop = nil
    tt.sound_events.insert = nil
    tt.render.sprites[1].name = "barrel_fragment"
    tt.render.sprites[1].animated = true
    tt.render.sprites[1].anchor.x = 0.68

    tt = E:register_t("ps_barrel_fragment")
    E:add_comps(tt, "pos", "particle_system")
    tt.particle_system.name = "barrel_fragment_trail"
    tt.particle_system.animated = true
    tt.particle_system.animation_fps = 60
    tt.particle_system.loop = false
    tt.particle_system.particle_lifetime = {0.2, 0.4}
    tt.particle_system.emission_rate = 60
    tt.particle_system.scale_var = {0.4, 1}
    tt.particle_system.scales_x = {1, 1.5}
    tt.particle_system.scales_y = {1, 1.5}
    tt.particle_system.alphas = {255, 0}
    tt.particle_system.emit_rotation_spread = math.pi
    tt.particle_system.scale_same_aspect = false

    tt = E:register_t("fx_fragment_ground_explosion", "fx")
    tt.render.sprites[1].name = "barrel_fragment_ground_explosion"
    tt.render.sprites[1].anchor = vec_2(0.5, 0.22)
    tt.render.sprites[1].z = Z_OBJECTS

    tt = E:register_t("decal_kraken", "decal_scripted")
    E:add_comps(tt, "render", "sound_events")
    tt.main_script.update = scripts.decal_kraken.update
    tt.render.sprites[1].prefix = "kraken_water"
    tt.render.sprites[1].z = Z_DECALS
    tt.duration = 3

    tt = E:register_t("hero_dragon", "hero")
    E:add_comps(tt, "ranged", "timed_attacks")
    anchor_y = 0.065
    image_y = 310
    tt.hero.level_stats.hp_max = {420, 440, 460, 480, 500, 520, 540, 560, 580, 600}
    tt.hero.level_stats.armor = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    tt.hero.level_stats.ranged_damage_min = {17, 19, 22, 24, 26, 29, 31, 34, 36, 39}
    tt.hero.level_stats.ranged_damage_max = {25, 29, 32, 36, 40, 43, 47, 50, 54, 58}
    tt.hero.skills.blazingbreath = E:clone_c("hero_skill")
    tt.hero.skills.blazingbreath.damage = {42, 56, 70}
    tt.hero.skills.blazingbreath.xp_gain = {50, 100, 150}
    tt.hero.skills.blazingbreath.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.feast = E:clone_c("hero_skill")
    tt.hero.skills.feast.devour_chance = {0.25, 0.35, 0.45}
    tt.hero.skills.feast.damage = {140, 200, 260}
    tt.hero.skills.feast.xp_gain = {50, 100, 150}
    tt.hero.skills.feast.xp_level_steps = {
        [4] = 1,
        [7] = 2,
        [10] = 3
    }
    tt.hero.skills.fierymist = E:clone_c("hero_skill")
    tt.hero.skills.fierymist.slow_factor = {0.7, 0.6, 0.5}
    tt.hero.skills.fierymist.duration = {4, 5, 6}
    tt.hero.skills.fierymist.xp_gain = {50, 100, 150}
    tt.hero.skills.fierymist.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.wildfirebarrage = E:clone_c("hero_skill")
    tt.hero.skills.wildfirebarrage.explosions = {8, 12, 16}
    tt.hero.skills.wildfirebarrage.xp_gain = {50, 100, 150}
    tt.hero.skills.wildfirebarrage.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [9] = 3
    }
    tt.hero.skills.reignoffire = E:clone_c("hero_skill")
    tt.hero.skills.reignoffire.dps = {18, 30, 42}
    tt.hero.skills.reignoffire.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.use_custom_spawn_point = true
    tt.health.armor = nil
    tt.health.dead_lifetime = 15
    tt.health.hp_max = nil
    tt.health_bar.offset = vec_2(0, 189.85)
    tt.health_bar.type = HEALTH_BAR_SIZE_LARGE
    tt.health_bar.draw_order = -1
    tt.health_bar.sort_y_offset = -200
    tt.hero.fn_level_up = scripts.hero_dragon.level_up
    tt.hero.tombstone_show_time = nil
    tt.idle_flip.cooldown = 10
    tt.info.hero_portrait = "kr2_hero_portraits_0009"
    tt.info.portrait = IS_PHONE and "portraits_hero_0009" or "kr2_info_portraits_heroes_0009"
    tt.info.damage_icon = "fireball"
    tt.info.i18n_key = "HERO_DRAGON"
    tt.main_script.insert = scripts.hero_dragon.insert
    tt.main_script.update = scripts.hero_dragon.update
    tt.motion.max_speed = 90
    tt.nav_rally.requires_node_nearby = false
    tt.nav_grid.ignore_waypoints = true
    tt.nav_grid.valid_terrains = TERRAIN_ALL_MASK
    tt.nav_grid.valid_terrains_dest = TERRAIN_ALL_MASK
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].prefix = "hero_dragon"
    tt.render.sprites[1].angles.walk = {"idle"}
    tt.render.sprites[1].sort_y_offset = -200
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].name = "hero_dragon_0181"
    tt.render.sprites[2].anchor.y = anchor_y
    tt.render.sprites[2].offset = vec_2(0, 0)
    tt.render.sprites[2].alpha = 60
    tt.sound_events.change_rally_point = "HeroDragonTaunt"
    tt.sound_events.death = "HeroDragonDeath"
    tt.sound_events.respawn = "HeroDragonBorn"
    tt.sound_events.insert = "HeroDragonTauntIntro"
    tt.sound_events.hero_room_select = "HeroDragonTauntSelect"
    tt.ui.click_rect = IS_PHONE and r(-35, 95, 70, 70) or r(-30, 115, 60, 40)
    tt.unit.hit_offset = vec_2(0, 135)
    tt.unit.hide_after_death = true
    tt.unit.marker_offset = vec_2(0, -0.15)
    tt.unit.mod_offset = vec_2(0, 134.85)
    tt.vis.bans = bor(tt.vis.bans, F_EAT, F_NET, F_POISON, F_BURN)
    tt.vis.flags = bor(tt.vis.flags, F_FLYING)
    tt.ranged.attacks[1] = E:clone_c("bullet_attack")
    tt.ranged.attacks[1].bullet = "fireball_dragon"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(55, 105)}
    tt.ranged.attacks[1].cooldown = 1.5
    tt.ranged.attacks[1].min_range = 0
    tt.ranged.attacks[1].max_range = 140
    tt.ranged.attacks[1].shoot_time = fts(11)
    tt.ranged.attacks[1].sync_animation = true
    tt.ranged.attacks[1].ignore_hit_offset = true
    tt.ranged.attacks[1].animation = "range_attack"
    tt.ranged.attacks[1].emit_fx = "fx_fireball_throw"
    tt.ranged.attacks[1].estimated_flight_time = 1
    tt.ranged.attacks[1].sound = "HeroDragonAttackThrow"
    tt.ranged.attacks[2] = E:clone_c("bullet_attack")
    tt.ranged.attacks[2].name = "blazingbreath"
    tt.ranged.attacks[2].disabled = true
    tt.ranged.attacks[2].bullet = "breath_dragon"
    tt.ranged.attacks[2].bullet_start_offset = {vec_2(43, 95)}
    tt.ranged.attacks[2].cooldown = 9
    tt.ranged.attacks[2].min_range = 0
    tt.ranged.attacks[2].max_range = 180
    tt.ranged.attacks[2].shoot_time = fts(13)
    tt.ranged.attacks[2].sync_animation = true
    tt.ranged.attacks[2].xp_from_skill = "blazingbreath"
    tt.ranged.attacks[2].animation = "breath"
    tt.ranged.attacks[2].sound = "HeroDragonFlame"
    tt.ranged.attacks[2].emit_fx = "fx_breath_dragon_mouth_glow"
    tt.ranged.attacks[2].emit_ps = "ps_breath_dragon"
    tt.ranged.attacks[2].vis_bans = F_FLYING
    tt.ranged.attacks[2].nodes_limit = 10
    tt.ranged.attacks[3] = E:clone_c("bullet_attack")
    tt.ranged.attacks[3].name = "fierymist"
    tt.ranged.attacks[3].disabled = true
    tt.ranged.attacks[3].bullet = "fierymist_dragon"
    tt.ranged.attacks[3].bullet_start_offset = {vec_2(43, 95)}
    tt.ranged.attacks[3].cooldown = 13
    tt.ranged.attacks[3].min_range = 0
    tt.ranged.attacks[3].max_range = 160
    tt.ranged.attacks[3].shoot_time = fts(13)
    tt.ranged.attacks[3].sync_animation = true
    tt.ranged.attacks[3].xp_from_skill = "fierymist"
    tt.ranged.attacks[3].animation = "mist"
    tt.ranged.attacks[3].emit_fx = "fx_breath_dragon_mouth_glow"
    tt.ranged.attacks[3].emit_ps = "ps_fierymist_dragon"
    tt.ranged.attacks[3].vis_bans = F_FLYING
    tt.ranged.attacks[3].sound = "HeroDragonSmoke"
    tt.ranged.attacks[3].nodes_limit = 10
    tt.ranged.attacks[4] = E:clone_c("bullet_attack")
    tt.ranged.attacks[4].name = "wildfirebarrage"
    tt.ranged.attacks[4].disabled = true
    tt.ranged.attacks[4].bullet = "wildfirebarrage_dragon"
    tt.ranged.attacks[4].bullet_start_offset = {vec_2(30, ady(204))}
    tt.ranged.attacks[4].cooldown = 17
    tt.ranged.attacks[4].min_range = 0
    tt.ranged.attacks[4].max_range = 375
    tt.ranged.attacks[4].shoot_time = fts(7.8)
    tt.ranged.attacks[4].sync_animation = true
    tt.ranged.attacks[4].xp_from_skill = "wildfirebarrage"
    tt.ranged.attacks[4].animation = "wildfirebarrage"
    tt.ranged.attacks[4].emit_fx = "fx_emit_wildfirebarrage"
    tt.ranged.attacks[4].vis_bans = F_FLYING
    tt.ranged.attacks[4].sound = "HeroDragonNapalm"
    tt.ranged.attacks[4].nodes_limit = 10
    tt.timed_attacks.list[1] = E:clone_c("custom_attack")
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].cooldown = 30
    tt.timed_attacks.list[1].min_range = 0
    tt.timed_attacks.list[1].max_range = 60
    tt.timed_attacks.list[1].damage = nil
    tt.timed_attacks.list[1].devour_chance = nil
    tt.timed_attacks.list[1].vis_flags = F_RANGED
    tt.timed_attacks.list[1].vis_bans = bor(F_FLYING, F_BOSS, F_WATER, F_CLIFF)
    tt.timed_attacks.list[1].sound = "HeroDragonTauntSelect"

    tt = E:register_t("fireball_dragon", "bullet")
    tt.render.sprites[1].name = "hero_dragon_attack_proy"
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].z = Z_BULLETS
    tt.render.sprites[1].anchor.x = 0.69
    tt.bullet.damage_type = DAMAGE_TRUE
    tt.bullet.xp_gain_factor = 2.5
    tt.bullet.min_speed = 390
    tt.bullet.max_speed = 390
    tt.bullet.hit_fx = "fx_fireball_dragon_hit"
    tt.bullet.hit_fx_air = "fx_fireball_explosion_air"
    tt.bullet.damage_max = nil
    tt.bullet.damage_min = nil
    tt.bullet.damage_radius = 40
    tt.bullet.particles_name = "ps_fireball_dragon"
    tt.bullet.vis_flags = F_RANGED
    tt.bullet.mod = nil
    tt.main_script.update = scripts.fireball_dragon.update
    tt.sound_events.hit = "HeroDragonAttackHit"

    tt = E:register_t("fx_fireball_dragon_hit", "fx")
    tt.render.sprites[1].name = "fx_fireball_dragon_hit"
    tt.render.sprites[1].anchor.y = 0.24
    tt.render.sprites[1].z = Z_EFFECTS

    tt = E:register_t("fx_fireball_explosion_air", "fx_explosion_air")
    tt.render.sprites[1].scale = vec_2(0.7, 0.7)
    tt.render.sprites[1].z = Z_EFFECTS

    tt = E:register_t("fx_fireball_throw", "fx")
    tt.render.sprites[1].name = "fx_dragon_range_attack"
    tt.render.sprites[1].z = Z_BULLETS + 1

    tt = E:register_t("ps_fireball_dragon")
    E:add_comps(tt, "pos", "particle_system")
    tt.particle_system.name = "hero_dragon_fireThrow_particle2"
    tt.particle_system.animated = false
    tt.particle_system.particle_lifetime = {fts(10), fts(16)}
    tt.particle_system.scale_var = {0.78, 1.43}
    tt.particle_system.scales_x = {1, 1.25}
    tt.particle_system.scales_y = {1, 1.25}
    tt.particle_system.emission_rate = 40
    tt.particle_system.emit_spread = math.pi
    tt.particle_system.alphas = {255, 0}

    tt = E:register_t("mod_dragon_reign", "modifier")
    E:add_comps(tt, "dps", "render")
    tt.modifier.duration = 3
    tt.dps.damage_min = nil
    tt.dps.damage_max = nil
    tt.dps.damage_type = DAMAGE_TRUE
    tt.dps.damage_every = fts(15)
    tt.main_script.insert = scripts.mod_dps.insert
    tt.main_script.update = scripts.mod_dps.update
    tt.render.sprites[1].size_names = {"small", "medium", "large"}
    tt.render.sprites[1].prefix = "fire"
    tt.render.sprites[1].name = "small"
    tt.render.sprites[1].draw_order = 2
    tt.render.sprites[1].loop = true

    tt = E:register_t("breath_dragon", "bullet")
    tt.render.sprites[1].name = "hero_dragon_flameBurnDecal"
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].z = Z_DECALS
    tt.render.sprites[1].hidden = true
    tt.bullet.flight_time = fts(10)
    tt.bullet.damage_type = DAMAGE_TRUE
    tt.bullet.damage_max = nil
    tt.bullet.damage_min = nil
    tt.bullet.mod = nil
    tt.bullet.damage_radius = 60
    tt.bullet.damage_flags = F_AREA
    tt.main_script.update = scripts.breath_dragon.update
    tt.duration = fts(20)

    tt = E:register_t("fx_breath_dragon_fire", "fx")
    tt.render.sprites[1].name = "dragon_breath_fire"
    tt.render.sprites[1].anchor.y = 0.3472222222222222

    tt = E:register_t("fx_breath_dragon_fire_decal", "fx")
    tt.render.sprites[1].name = "dragon_breath_fire_decal"
    tt.render.sprites[1].z = Z_DECALS
    tt.render.sprites[1].anchor.y = 0.3424657534246575

    tt = E:register_t("fx_breath_dragon_mouth_glow", "decal_timed")
    tt.render.sprites[1].name = "hero_dragon_flameBurnGlow_cut"
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].z = Z_OBJECTS + 1
    tt.timed.duration = fts(20)

    tt = E:register_t("ps_breath_dragon")
    E:add_comps(tt, "pos", "particle_system")
    tt.particle_system.animated = true
    tt.particle_system.emission_rate = 30
    tt.particle_system.emit_rotation_spread = math.pi
    tt.particle_system.loop = false
    tt.particle_system.name = "dragon_breath_particle"
    tt.particle_system.particle_lifetime = {fts(10), fts(10)}
    tt.particle_system.source_lifetime = fts(20)

    tt = E:register_t("fx_dragon_feast", "fx")
    tt.render.sprites[1].name = "fx_dragon_feast"
    tt.render.sprites[1].anchor.y = 0.065

    tt = E:register_t("fx_dragon_feast_explode", "fx")
    tt.render.sprites[1].name = "fx_dragon_feast_explode"
    tt.render.sprites[1].anchor.y = 0.065
    tt.render.sprites[1].size_scales = {vec_1(0.8), vec_1(1), vec_1(1.2)}

    tt = E:register_t("fierymist_dragon", "bullet")
    tt.render = nil
    tt.bullet.flight_time = fts(10)
    tt.bullet.damage_type = DAMAGE_TRUE
    tt.bullet.damage_max = 0
    tt.bullet.damage_min = 0
    tt.bullet.vis_flags = F_RANGED
    tt.bullet.hit_payload = "aura_fierymist_dragon"
    tt.main_script.update = scripts.fierymist_dragon.update

    tt = E:register_t("ps_fierymist_dragon")
    E:add_comps(tt, "pos", "particle_system")
    tt.particle_system.animated = true
    tt.particle_system.emission_rate = 30
    tt.particle_system.emit_rotation_spread = math.pi
    tt.particle_system.loop = false
    tt.particle_system.name = "dragon_fierymist_particle"
    tt.particle_system.particle_lifetime = {fts(10), fts(10)}
    tt.particle_system.source_lifetime = fts(20)

    tt = E:register_t("aura_fierymist_dragon", "aura")
    tt.aura.mod = "mod_slow_fierymist"
    tt.aura.cycle_time = fts(5)
    tt.aura.duration = nil
    tt.aura.radius = 70
    tt.aura.damage_type = DAMAGE_TRUE
    tt.aura.damage_min = 2
    tt.aura.damage_max = 2
    tt.aura.vis_flags = F_MOD
    tt.aura.vis_bans = F_FRIEND
    tt.main_script.update = scripts.aura_fiery_mist_ashbite.update

    tt = E:register_t("mod_slow_fierymist", "mod_slow")
    tt.modifier.duration = fts(5)
    tt.slow.factor = nil

    tt = E:register_t("fx_aura_fierymist_dragon", "decal_tween")
    tt.duration = nil
    tt.render.sprites[1].name = "fx_fierymist_dragon"
    tt.render.sprites[1].anchor.y = 0.15
    tt.render.sprites[1].z = Z_OBJECTS
    tt.tween.props[1].keys = {{0, 0}, {fts(6), 255}, {"this.duration-0.3", 255}, {"this.duration", 0}}

    tt = E:register_t("wildfirebarrage_dragon", "bullet")
    tt.render.sprites[1].name = "dragon_wildfirebarrage_projectile"
    tt.render.sprites[1].loop = true
    tt.render.sprites[1].z = Z_BULLETS
    tt.bullet.damage_type = DAMAGE_TRUE
    tt.bullet.min_speed = 390
    tt.bullet.max_speed = 390
    tt.bullet.flight_time = fts(35)
    tt.bullet.hit_fx = "fx_fireball_dragon_hit"
    tt.bullet.damage_max = 30
    tt.bullet.damage_min = 30
    tt.bullet.damage_radius = 40
    tt.bullet.damage_type = DAMAGE_TRUE
    tt.bullet.particles_name = "ps_wildbarrage_dragon"
    tt.bullet.damage_flags = F_AREA
    tt.bullet.mod = nil
    tt.main_script.insert = scripts.wildfirebarrage_dragon.insert
    tt.main_script.update = scripts.wildfirebarrage_dragon.update
    tt.sound_events.hit = "HeroDragonAttackHit"
    tt.explosions = nil

    tt = E:register_t("fx_emit_wildfirebarrage", "fx")
    tt.render.sprites[1].name = "fx_dragon_wildfirebarrage"
    tt.render.sprites[1].z = Z_BULLETS + 1
    tt.render.sprites[1].offset = vec_2(-28, -48)

    tt = E:register_t("ps_wildbarrage_dragon")
    E:add_comps(tt, "pos", "particle_system")
    tt.particle_system.name = "dragon_wildfirebarrage_particle"
    tt.particle_system.animated = true
    tt.particle_system.loop = false
    tt.particle_system.particle_lifetime = {0.58, 0.58}
    tt.particle_system.scale_var = {0.55, 0.9}
    tt.particle_system.scales_x = {1, 1.55}
    tt.particle_system.scales_y = {1, 1.55}
    tt.particle_system.emission_rate = 60
    tt.particle_system.emit_rotation_spread = math.pi
    tt.particle_system.alphas = {255, 0}

    tt = E:register_t("fx_wildfirebarrage_explosion_1", "fx")
    tt.render.sprites[1].name = "dragon_wildfirebarrage_explosion_1"
    tt.render.sprites[1].anchor.y = 0.24

    tt = E:register_t("fx_wildfirebarrage_explosion_2", "fx")
    tt.render.sprites[1].name = "dragon_wildfirebarrage_explosion_2"
    tt.render.sprites[1].anchor.y = 0.16

    tt = E:register_t("decal_wildfirebarrage_explosion", "decal_timed")
    tt.render.sprites[1].name = "dragon_wildfirebarrage_decal"
    tt.render.sprites[1].anchor.y = 0.3
    tt.render.sprites[1].z = Z_DECALS

    tt = E:register_t("hero_van_helsing", "hero")
    E:add_comps(tt, "melee", "ranged", "timed_attacks")
    image_y = 98
    anchor_y = 28 / image_y
    tt.hero.level_stats.hp_max = {300, 325, 350, 375, 400, 425, 450, 475, 500, 525}
    tt.hero.level_stats.armor = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    tt.hero.level_stats.damage_min = {16, 19, 21, 24, 26, 29, 31, 34, 37, 40}
    tt.hero.level_stats.damage_max = {24, 29, 33, 37, 42, 46, 51, 55, 59, 64}
    tt.hero.level_stats.ranged_damage_min = {16, 19, 21, 24, 26, 29, 31, 34, 37, 40}
    tt.hero.level_stats.ranged_damage_max = {24, 29, 33, 37, 42, 46, 51, 55, 59, 64}
    tt.hero.skills.multishoot = E:clone_c("hero_skill")
    tt.hero.skills.multishoot.loops = {4, 6, 8}
    tt.hero.skills.multishoot.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.multishoot.xp_gain = {75, 125, 175}
    tt.hero.skills.silverbullet = E:clone_c("hero_skill")
    tt.hero.skills.silverbullet.damage = {200, 275, 350}
    tt.hero.skills.silverbullet.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [9] = 3
    }
    tt.hero.skills.silverbullet.xp_gain = {75, 125, 175}
    tt.hero.skills.holygrenade = E:clone_c("hero_skill")
    tt.hero.skills.holygrenade.silence_duration = {5, 10, 15}
    tt.hero.skills.holygrenade.xp_level_steps = {
        [4] = 1,
        [7] = 2,
        [10] = 3
    }
    tt.hero.skills.holygrenade.xp_gain = {50, 100, 150}
    tt.hero.skills.relicofpower = E:clone_c("hero_skill")
    tt.hero.skills.relicofpower.armor_reduce_factor = {0.25, 0.5, 1}
    tt.hero.skills.relicofpower.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.relicofpower.xp_gain = {50, 100, 150}
    tt.hero.skills.beaconoflight = E:clone_c("hero_skill")
    tt.hero.skills.beaconoflight.inflicted_damage_factor = {1.2, 1.32, 1.45}
    tt.hero.skills.beaconoflight.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.health.armor = nil
    tt.health.dead_lifetime = 15
    tt.health.hp_max = nil
    tt.health_bar.offset = vec_2(0, 39)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_van_helsing.level_up
    tt.hero.tombstone_show_time = fts(60)
    tt.idle_flip.cooldown = 10
    tt.info.fn = scripts.hero_basic.get_info
    tt.info.hero_portrait = "kr2_hero_portraits_0014"
    tt.info.hero_portrait_alive = "kr2_hero_portraits_0014"
    tt.info.hero_portrait_dead = "kr2_hero_portraits_0015"
    tt.info.hero_portrait_always_on = nil
    tt.info.portrait = IS_PHONE and "portraits_hero_0017" or "kr2_info_portraits_heroes_0016"
    tt.info.portrait_alive = IS_PHONE and "portraits_hero_0017" or "kr2_info_portraits_heroes_0016"
    tt.info.portrait_dead = IS_PHONE and "portraits_hero_0018" or "kr2_info_portraits_heroes_0023"
    tt.info.i18n_key = "HERO_VAN_HELSING"
    tt.main_script.insert = scripts.hero_van_helsing.insert
    tt.main_script.update = scripts.hero_van_helsing.update
    tt.motion.max_speed = 100
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].prefix = "hero_vanhelsing"
    tt.render.sprites[1].angles = {}
    tt.render.sprites[1].angles.walk = {"running"}
    tt.render.sprites[1].angles.ranged = {"ranged_side", "ranged_up", "ranged_down"}
    tt.render.sprites[1].angles.multi_start = {"multi_start_side", "multi_start_up", "multi_start_down"}
    tt.render.sprites[1].angles.multi_loop = {"multi_loop_side", "multi_loop_up", "multi_loop_down"}
    tt.render.sprites[1].angles.multi_end = {"multi_end_side", "multi_end_up", "multi_end_down"}
    tt.render.sprites[1].angles.silverbullet = {"silver_side", "silver_up", "silver_down"}
    tt.render.sprites[1].angles_custom = {
        silverbullet = {35, 145, 210, 335}
    }
    tt.render.sprites[1].angles_flip_vertical = {
        silverbullet = true,
        multi_start = true,
        multi_loop = true,
        ranged = true,
        multi_end = true
    }
    tt.soldier.melee_slot_offset = vec_2(5, 0)
    tt.sound_events.change_rally_point = "HeroVanHelsingTaunt"
    tt.sound_events.death = "HeroVanHelsingDeath"
    tt.sound_events.respawn = "HeroVanHelsingTauntIntro"
    tt.sound_events.insert = "HeroVanHelsingTauntIntro"
    tt.sound_events.hero_room_select = "HeroVanHelsingTauntSelect"
    tt.unit.hit_offset = vec_2(0, 15)
    tt.unit.marker_offset = vec_2(0, 0)
    tt.unit.mod_offset = vec_2(0, 15)
    tt.melee.range = 51.2
    tt.melee.attacks[1] = E:clone_c("melee_attack")
    tt.melee.attacks[1].cooldown = 1.5 - fts(23) + fts(9)
    tt.melee.attacks[1].damage_max = nil
    tt.melee.attacks[1].damage_min = nil
    tt.melee.attacks[1].hit_time = fts(9)
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].vis_bans = bor(F_FLYING, F_CLIFF)
    tt.melee.attacks[1].vis_flags = F_BLOCK
    tt.melee.attacks[1].xp_gain_factor = 2.5
    tt.melee.attacks[2] = E:clone_c("melee_attack")
    tt.melee.attacks[2].disabled = true
    tt.melee.attacks[2].animation = "relic"
    tt.melee.attacks[2].cooldown = 20
    tt.melee.attacks[2].mod = "mod_van_helsing_relic"
    tt.melee.attacks[2].xp_from_skill = "relicofpower"
    tt.melee.attacks[2].sound = "HeroVanHelsingRelic"
    tt.melee.attacks[2].hit_time = fts(13)
    tt.melee.attacks[2].vis_flags = F_BLOCK
    tt.melee.attacks[2].vis_bans = bor(F_FLYING, F_CLIFF, F_BOSS)
    tt.melee.attacks[2].fn_can = scripts.hero_van_helsing.can_relic
    tt.ranged.attacks[1] = E:clone_c("bullet_attack")
    tt.ranged.attacks[1].animation = "ranged"
    tt.ranged.attacks[1].bullet = "van_helsing_shotgun"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(24, ady(44)), vec_2(18, ady(68)), vec_2(16, ady(26))}
    tt.ranged.attacks[1].max_range = 140
    tt.ranged.attacks[1].min_range = 50
    tt.ranged.attacks[1].shoot_time = fts(8)
    tt.ranged.attacks[1].cooldown = 1.5
    tt.timed_attacks.list[1] = E:clone_c("bullet_attack")
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].animations = {"multi_start", "multi_loop", "multi_end"}
    tt.timed_attacks.list[1].bullet = "van_helsing_shotgun"
    tt.timed_attacks.list[1].bullet_start_offset = tt.ranged.attacks[1].bullet_start_offset
    tt.timed_attacks.list[1].shoot_time = fts(39)
    tt.timed_attacks.list[1].loops = nil
    tt.timed_attacks.list[1].max_range = 160
    tt.timed_attacks.list[1].min_range = 0
    tt.timed_attacks.list[1].cooldown = 12
    tt.timed_attacks.list[1].search_range = 75
    tt.timed_attacks.list[1].search_min_count = 1
    tt.timed_attacks.list[2] = E:clone_c("bullet_attack")
    tt.timed_attacks.list[2].disabled = true
    tt.timed_attacks.list[2].animation = "silverbullet"
    tt.timed_attacks.list[2].bullet = "van_helsing_silverbullet"
    tt.timed_attacks.list[2].bullet_start_offset = {vec_2(24, ady(42)), vec_2(22, ady(62)), vec_2(12, ady(22))}
    tt.timed_attacks.list[2].crosshair_time = fts(12)
    tt.timed_attacks.list[2].crosshair_name = "mod_van_helsing_crosshair"
    tt.timed_attacks.list[2].shoot_time = fts(23)
    tt.timed_attacks.list[2].loops = nil
    tt.timed_attacks.list[2].max_range = 210
    tt.timed_attacks.list[2].min_range = 0
    tt.timed_attacks.list[2].cooldown = 10.8
    tt.timed_attacks.list[2].nodes_to_defend = 20
    tt.timed_attacks.list[2].werewolf_damage_factor = 2
    tt.timed_attacks.list[3] = E:clone_c("bullet_attack")
    tt.timed_attacks.list[3].disabled = true
    tt.timed_attacks.list[3].animation = "grenade"
    tt.timed_attacks.list[3].bullet = "van_helsing_grenade"
    tt.timed_attacks.list[3].bullet_start_offset = {vec_2(16, ady(54))}
    tt.timed_attacks.list[3].shoot_time = fts(16)
    tt.timed_attacks.list[3].max_range = 160
    tt.timed_attacks.list[3].min_range = 0
    tt.timed_attacks.list[3].cooldown = 8

    tt = E:register_t("van_helsing_shotgun", "shotgun")
    tt.bullet.damage_min = 30
    tt.bullet.damage_max = 30
    tt.bullet.damage_type = DAMAGE_SHOT
    tt.bullet.min_speed = 40 * FPS
    tt.bullet.max_speed = 40 * FPS
    tt.bullet.hit_blood_fx = "fx_blood_splat"
    tt.bullet.miss_fx = "fx_smoke_bullet"
    tt.bullet.miss_fx_water = "fx_splash_small"
    tt.sound_events.insert = "ShotgunSound"
    tt.bullet.xp_gain_factor = 3
    tt.bullet.pop = nil

    tt = E:register_t("van_helsing_silverbullet", "van_helsing_shotgun")
    tt.bullet.damage_type = bor(DAMAGE_TRUE, DAMAGE_FX_EXPLODE)
    tt.bullet.damage_max = nil
    tt.bullet.damage_min = nil
    tt.sound_events.insert = "SniperSound"
    tt.bullet.xp_gain_factor = nil

    tt = E:register_t("mod_van_helsing_crosshair", "modifier")
    E:add_comps(tt, "render")
    tt.render.sprites[1].name = "vanhelsing_crosshair"
    tt.render.sprites[1].sort_y_offset = -2
    tt.main_script.update = scripts.mod_track_target.update
    tt.modifier.duration = fts(16)

    tt = E:register_t("van_helsing_grenade", "bullet")
    tt.bullet.damage_radius = 80
    tt.bullet.flight_time = fts(25)
    tt.bullet.hide_radius = 4
    tt.bullet.hit_fx = "van_helsing_grenade_explosion"
    tt.bullet.mod = "mod_van_helsing_silence"
    tt.bullet.rotation_speed = 20 * FPS * math.pi / 180
    tt.main_script.insert = scripts.bomb.insert
    tt.main_script.update = scripts.van_helsing_grenade.update
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].name = "Halloween_hero_vhelsing_water"

    tt = E:register_t("mod_van_helsing_silence", "modifier")
    E:add_comps(tt, "render")
    tt.modifier.duration = nil
    tt.modifier.bans = {"mod_shaman_armor", "mod_shaman_magic_armor", "mod_shaman_priest_heal"}
    tt.modifier.remove_banned = true
    tt.main_script.insert = scripts.mod_silence.insert
    tt.main_script.remove = scripts.mod_silence.remove
    tt.main_script.update = scripts.mod_track_target.update
    tt.render.sprites[1].prefix = "vanhelsing_silence"
    tt.render.sprites[1].size_names = {"small", "big", "big"}
    tt.render.sprites[1].name = "small"
    tt.render.sprites[1].loop = true
    tt.render.sprites[1].sort_y_offset = -2

    tt = E:register_t("van_helsing_grenade_explosion", "fx")
    E:add_comps(tt, "sound_events")
    tt.render.sprites[1].name = "vanhelsing_grenade_explosion"
    tt.render.sprites[1].sort_y_offset = -4
    tt.render.sprites[1].anchor.y = 0.25
    tt.render.sprites[1].z = Z_OBJECTS
    tt.sound_events.insert = "HeroVanHelsingHolyWater"

    tt = E:register_t("mod_van_helsing_relic", "modifier")
    E:add_comps(tt, "render")
    tt.render.sprites[1].name = "vanhelsing_relic"
    tt.render.sprites[1].z = Z_EFFECTS
    tt.render.sprites[1].anchor.y = 0
    tt.main_script.update = scripts.mod_van_helsing_relic.update
    tt.armor_reduce_factor = nil
    tt.remove_mods = {"mod_shaman_magic_armor", "mod_shaman_armor"}

    tt = E:register_t("van_helsing_beacon_aura", "aura")
    tt.aura.mod = "mod_van_helsing_beacon"
    tt.aura.cycle_time = 0.5
    tt.aura.duration = -1
    tt.aura.radius = 150
    tt.aura.track_source = true
    tt.aura.track_dead = true
    tt.aura.filter_source = false
    tt.aura.vis_bans = bor(F_ENEMY)
    tt.aura.vis_flags = F_MOD
    tt.main_script.insert = scripts.aura_apply_mod.insert
    tt.main_script.update = scripts.aura_apply_mod.update

    tt = E:register_t("mod_van_helsing_beacon", "modifier")
    E:add_comps(tt, "render")
    tt.inflicted_damage_factor = nil
    tt.main_script.insert = scripts.mod_van_helsing_beacon.insert
    tt.main_script.remove = scripts.mod_van_helsing_beacon.remove
    tt.main_script.update = scripts.mod_track_target.update
    tt.modifier.duration = 1
    tt.modifier.use_mod_offset = false
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].name = "Halloween_hero_vhelsing_buffeffect"
    tt.render.sprites[1].z = Z_DECALS

    tt = E:register_t("hero_steam_frigate", "stage_hero")
    E:add_comps(tt, "ranged", "timed_attacks")
    image_y = 120
    anchor_y = 0.16666666666666666
    tt.health.armor = 0.7
    tt.health.hp_max = 420
    tt.health.immune_to = DAMAGE_ALL
    tt.health_bar.offset = vec_2(0, ady(55))
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.level = 10
    tt.idle_flip = nil
    tt.info.fn = scripts.hero_steam_frigate.get_info
    tt.info.hero_portrait = "kr2_hero_portraits_0011"
    tt.info.portrait = IS_PHONE and "portraits_hero_0014" or "kr2_info_portraits_heroes_0021"
    tt.main_script.insert = scripts.hero_steam_frigate.insert
    tt.main_script.update = scripts.hero_steam_frigate.update
    tt.motion.max_speed = 75
    tt.nav_grid.valid_terrains = bor(TERRAIN_WATER)
    tt.nav_grid.valid_terrains_dest = bor(TERRAIN_WATER)
    tt.nav_rally.requires_node_nearby = false
    tt.render.sprites[1] = E:clone_c("sprite")
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].name = "idle"
    tt.render.sprites[1].prefix = "hero_steam_frigate_l1"
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].anchor.y = anchor_y
    tt.render.sprites[2].name = "idle"
    tt.render.sprites[2].prefix = "hero_steam_frigate_l2"
    tt.render.sprites[3] = E:clone_c("sprite")
    tt.render.sprites[3].anchor.y = anchor_y
    tt.render.sprites[3].loop_forced = true
    tt.render.sprites[3].name = "idle"
    tt.render.sprites[3].prefix = "hero_steam_frigate_smoke"
    tt.sound_events.change_rally_point = "PirateBoatTaunt"
    tt.ui.click_rect = IS_PHONE and r(-35, -15, 70, 70) or r(-30, 0, 60, 38)
    tt.unit.hit_offset = vec_2(0, 12)
    tt.unit.marker_offset = vec_2(0, 0)
    tt.unit.mod_offset = vec_2(0, ady(22))
    tt.vis.bans = F_ALL
    tt.vis.flags = F_NONE
    tt.ranged.attacks[1] = E:clone_c("bullet_attack")
    tt.ranged.attacks[1].animation = "throw_barrel"
    tt.ranged.attacks[1].bullet = "steam_frigate_barrel"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(29, 39)}
    tt.ranged.attacks[1].cooldown = 2
    tt.ranged.attacks[1].max_range = 250
    tt.ranged.attacks[1].min_range = 50
    tt.ranged.attacks[1].node_prediction = fts(33)
    tt.ranged.attacks[1].shoot_time = fts(13)
    tt.ranged.attacks[1].vis_bans = bor(F_FLYING)
    tt.timed_attacks.list[1] = E:clone_c("bullet_attack")
    tt.timed_attacks.list[1].animation = "throw_mine"
    tt.timed_attacks.list[1].bullet = "steam_frigate_mine"
    tt.timed_attacks.list[1].bullet_start_offset = {vec_2(29, 39)}
    tt.timed_attacks.list[1].cooldown = 8
    tt.timed_attacks.list[1].max_mines = 20
    tt.timed_attacks.list[1].max_range = 150
    tt.timed_attacks.list[1].min_range = 16.5
    tt.timed_attacks.list[1].shoot_time = fts(13)
    tt.timed_attacks.list[1].valid_terrains = TERRAIN_WATER

    tt = E:register_t("steam_frigate_barrel", "bomb")
    tt.bullet.flight_time = fts(20)
    tt.bullet.g = -1.5 / (fts(1) * fts(1))
    tt.bullet.damage_min = 80
    tt.bullet.damage_max = 100
    tt.bullet.damage_radius = 96
    tt.bullet.hide_radius = nil
    tt.render.sprites[1].name = "pirateHero_proy_0001"
    tt.sound_events.insert = "AxeSound"

    tt = E:register_t("steam_frigate_mine", "bomb")
    E:add_comps(tt, "lifespan")
    tt.bullet.damage_bans = bor(F_FLYING)
    tt.bullet.damage_max = 280
    tt.bullet.damage_min = 280
    tt.bullet.damage_radius = 76.80000000000001
    tt.bullet.flight_time = fts(20)
    tt.bullet.g = -1.5 / (fts(1) * fts(1))
    tt.bullet.hide_radius = nil
    tt.bullet.pop = nil
    tt.bullet.vis_bans = bor(F_FLYING)
    tt.lifespan.duration = 40
    tt.main_script.update = scripts.steam_frigate_mine.update
    tt.render.sprites[1].name = "pirateHero_proy_0002"
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].anchor.y = 0.38
    tt.render.sprites[2].hidden = true
    tt.render.sprites[2].name = "idle"
    tt.render.sprites[2].prefix = "steam_frigate_mine"
    tt.sound_events.insert = "AxeSound"
    tt.trigger_radius = 10

    tt = E:register_t("hero_vampiress", "hero")
    E:add_comps(tt, "melee", "timed_attacks", "track_kills")
    image_y = 74
    anchor_y = 24 / image_y
    tt.hero.level_stats.hp_max = {270, 280, 290, 300, 310, 320, 330, 340, 350, 360}
    tt.hero.level_stats.armor = {0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.58, 0.62, 0.66, 0.7}
    tt.hero.level_stats.magic_armor = {0.17, 0.19, 0.21, 0.23, 0.25, 0.27, 0.29, 0.31, 0.33, 0.35}
    tt.hero.level_stats.melee_damage_min = {10, 11, 12, 13, 14, 15, 16, 17, 18, 19}
    tt.hero.level_stats.melee_damage_max = {20, 22, 24, 26, 28, 30, 32, 34, 36, 38}
    tt.hero.skills.vampirism = E:clone_c("hero_skill")
    tt.hero.skills.vampirism.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.hero.skills.vampirism.xp_gain_factor = 50
    tt.hero.skills.vampirism.damage = {100, 140, 180, 220}
    tt.hero.skills.slayer = E:clone_c("hero_skill")
    tt.hero.skills.slayer.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.slayer.xp_gain_factor = 60
    tt.hero.skills.slayer.damage_min = {40, 80, 120}
    tt.hero.skills.slayer.damage_max = {80, 160, 240}
    tt.hero.fn_level_up = scripts.hero_vampiress.level_up
    tt.track_kills.mod = "mod_vampiress_gain"
    tt.health.armor = nil
    tt.health.dead_lifetime = 15
    tt.health.hp_max = nil
    tt.health_bar.offset = vec_2(0, 34)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.tombstone_show_time = fts(90)
    tt.health_bar.draw_order = -1
    tt.idle_flip.cooldown = 1
    tt.info.hero_portrait = "kr2_hero_portraits_0017"
    tt.info.portrait = IS_PHONE and "portraits_hero_0020" or "kr2_info_portraits_heroes_0020"
    tt.info.i18n_key = "HERO_VAMPIRESS"
    tt.main_script.insert = scripts.hero_vampiress.insert
    tt.main_script.update = scripts.hero_vampiress.update
    tt.motion.max_speed = 1.7 * FPS
    tt.motion.max_speed_bat = 3.7 * FPS
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].name = "idle"
    tt.render.sprites[1].prefix = "hero_vampiress"
    tt.render.sprites[1].angles = {}
    tt.render.sprites[1].angles.walk = {"running"}
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].name = "decal_flying_shadow"
    tt.render.sprites[2].offset = vec_2(0, 0)
    tt.render.sprites[2].hidden = true
    tt.soldier.melee_slot_offset.x = 5
    tt.sound_events.change_rally_point = "HWVampiressTaunt"
    tt.sound_events.death = "HWVampiressDeath"
    tt.sound_events.respawn = "HWVampiressTauntIntro"
    tt.sound_events.insert = "HWVampiressTauntIntro"
    tt.sound_events.hero_room_select = "HWVampiressTauntSelect"
    tt.unit.hit_offset = vec_2(0, 12)
    tt.unit.marker_offset = vec_2(0, 0)
    tt.unit.mod_offset = vec_2(0, 12)
    tt.fly_to = {}
    tt.fly_to.min_distance = 0
    tt.fly_to.animation_prefix = "hero_vampiress_bat"
    tt.melee.attacks[1].cooldown = 0.9
    tt.melee.attacks[1].hit_time = fts(9)
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].damage_type = DAMAGE_TRUE
    tt.melee.attacks[1].xp_gain_factor = 2.5
    tt.melee.attacks[1].side_effect = function(this, store, attack, target)
        scripts.heal(this, 3)
    end
    tt.melee.attacks[2] = E:clone_c("melee_attack")
    tt.melee.attacks[2].animation = "vampirism"
    tt.melee.attacks[2].cooldown = 15
    tt.melee.attacks[2].damage_type = DAMAGE_TRUE
    tt.melee.attacks[2].mods = {"mod_vampiress_lifesteal", "mod_vampiress_blood"}
    tt.melee.attacks[2].sound = "HWVampiressLifesteal"
    tt.melee.attacks[2].hit_time = fts(9)
    tt.melee.attacks[2].xp_gain_factor = 2
    tt.melee.attacks[2].disabled = true
    tt.melee.range = 80
    tt.nav_grid.ignore_waypoints = true
    tt.timed_attacks.list[1] = E:clone_c("area_attack")
    tt.timed_attacks.list[1].animation = "slayer"
    tt.timed_attacks.list[1].cooldown = 10
    tt.timed_attacks.list[1].trigger_radius = 50
    tt.timed_attacks.list[1].damage_radius = 65
    tt.timed_attacks.list[1].damage_type = DAMAGE_TRUE
    tt.timed_attacks.list[1].hit_time = fts(10)
    tt.timed_attacks.list[1].sound = "HWVampiressAreaAttack"
    tt.timed_attacks.list[1].extra_damage_templates = {"enemy_elvira"}
    tt.timed_attacks.list[1].extra_damage_factor = 10
    tt.timed_attacks.list[1].disabled = true
    tt.vis.bans = bor(tt.vis.bans, F_POISON)
    tt.gain_count = 0

    tt = E:register_t("fx_vampiress_transform", "fx")
    tt.render.sprites[1].name = "fx_vampiress_transform"
    tt.render.sprites[1].anchor.y = 0.32432432432432434

    tt = E:register_t("mod_vampiress_lifesteal", "modifier")
    tt.heal_hp = 100
    tt.main_script.insert = scripts.mod_simple_lifesteal.insert

    tt = E:register_t("mod_vampiress_blood", "mod_blood")
    tt.modifier.duration = 6
    tt.dps.damage_min = 5
    tt.dps.damage_max = 5
    tt.dps.damage_inc = 5

    tt = E:register_t("mod_vampiress_gain", "modifier")
    tt.gain = {
        damage = 0.7,
        hp = 2,
        magic_armor = 0.004,
        armor = 0.002,
        heal = 30,
        size = 0.005,
        cooldown = 0.02,
        radius = 0.3,
        speed = 0.5
    }
    tt.max_gain_count = 60
    tt.main_script.insert = scripts.mod_gain_on_kill.insert
    tt.main_script.update = scripts.mod_vampiress_gain.update

    tt = E:register_t("hero_alien", "hero")
    E:add_comps(tt, "melee", "ranged", "selfdestruct", "timed_attacks")
    anchor_y = 0.31
    image_y = 112
    tt.hero.level_stats.hp_max = {220, 240, 260, 280, 300, 320, 340, 360, 380, 400}
    tt.hero.level_stats.armor = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    tt.hero.level_stats.melee_damage_min = {10, 12, 14, 16, 18, 20, 22, 24, 26, 28}
    tt.hero.level_stats.melee_damage_max = {16, 19, 22, 25, 28, 31, 34, 37, 40, 43}
    tt.hero.skills.energyglaive = E:clone_c("hero_skill")
    tt.hero.skills.energyglaive.damage = {22, 30, 38}
    tt.hero.skills.energyglaive.bounce_chance = {0.4, 0.5, 0.6}
    tt.hero.skills.energyglaive.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.purificationprotocol = E:clone_c("hero_skill")
    tt.hero.skills.purificationprotocol.duration = {1, 2, 3}
    tt.hero.skills.purificationprotocol.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.purificationprotocol.xp_gain = {50, 100, 150}
    tt.hero.skills.abduction = E:clone_c("hero_skill")
    tt.hero.skills.abduction.total_targets = {1, 2, 3}
    tt.hero.skills.abduction.total_hp = {500, 1000, 1500}
    tt.hero.skills.abduction.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [9] = 3
    }
    tt.hero.skills.abduction.xp_gain = {100, 150, 200}
    tt.hero.skills.vibroblades = E:clone_c("hero_skill")
    tt.hero.skills.vibroblades.extra_damage = {5, 10, 15}
    tt.hero.skills.vibroblades.damage_type = DAMAGE_TRUE
    tt.hero.skills.vibroblades.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.finalcountdown = E:clone_c("hero_skill")
    tt.hero.skills.finalcountdown.damage = {100, 200, 300}
    tt.hero.skills.finalcountdown.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.finalcountdown.xp_gain = {100, 200, 300}
    tt.health.armor = nil
    tt.health.dead_lifetime = 7
    tt.health.hp_max = nil
    tt.health_bar.offset = vec_2(0, 41)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_alien.level_up
    tt.hero.tombstone_show_time = fts(66)
    tt.idle_flip.cooldown = 1
    tt.info.fn = scripts.hero_basic.get_info
    tt.info.hero_portrait = "kr2_hero_portraits_0007"
    tt.info.portrait = IS_PHONE and "portraits_hero_0007" or "kr2_info_portraits_heroes_0007"
    tt.info.i18n_key = "HERO_ALIEN"
    tt.main_script.insert = scripts.hero_alien.insert
    tt.main_script.update = scripts.hero_alien.update
    tt.motion.max_speed = 90
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].prefix = "hero_alien"
    tt.soldier.melee_slot_offset.x = 13
    tt.sound_events.change_rally_point = "HeroAlienTaunt"
    tt.sound_events.death = "HeroAlienDeath"
    tt.sound_events.respawn = "HeroAlienTauntIntro"
    tt.sound_events.insert = "HeroAlienTauntIntro"
    tt.sound_events.hero_room_select = "HeroAlienTauntSelect"
    tt.unit.hit_offset = vec_2(0, 12)
    tt.unit.marker_offset = vec_2(0, 0)
    tt.unit.mod_offset = vec_2(0, 15.28)
    tt.melee.range = 75
    tt.melee.attacks[1] = E:clone_c("melee_attack")
    tt.melee.attacks[1].hit_time = fts(12)
    tt.melee.attacks[1].cooldown = 1
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].vis_bans = bor(F_FLYING, F_CLIFF)
    tt.melee.attacks[1].vis_flags = F_BLOCK
    tt.melee.attacks[1].xp_gain_factor = 2.5
    tt.ranged.attacks[1] = E:clone_c("bullet_attack")
    tt.ranged.attacks[1].disabled = true
    tt.ranged.attacks[1].bullet = "alien_glaive"
    tt.ranged.attacks[1].cooldown = 4.8 + fts(28)
    tt.ranged.attacks[1].min_range = 0
    tt.ranged.attacks[1].max_range = 125
    tt.ranged.attacks[1].shoot_time = fts(13)
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(22, 16)}
    tt.timed_attacks.list[1] = E:clone_c("spawn_attack")
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].animation = "abduction"
    tt.timed_attacks.list[1].cooldown = 20
    tt.timed_attacks.list[1].entity = "alien_abduction_ship"
    tt.timed_attacks.list[1].range = 200
    tt.timed_attacks.list[1].attack_radius = 40
    tt.timed_attacks.list[1].spawn_time = fts(10)
    tt.timed_attacks.list[1].vis_bans = bor(F_FLYING, F_CLIFF, F_WATER, F_BOSS)
    tt.timed_attacks.list[1].vis_flags = bor(F_RANGED)
    tt.timed_attacks.list[1].sound = "HeroAlienAbduction"
    tt.timed_attacks.list[1].invalid_templates = {"enemy_umbra_piece", "enemy_jungle_spider_tiny"}
    tt.timed_attacks.list[1].total_health = nil
    tt.timed_attacks.list[1].total_targets = nil
    tt.timed_attacks.list[2] = E:clone_c("spawn_attack")
    tt.timed_attacks.list[2].disabled = true
    tt.timed_attacks.list[2].animation = "purification"
    tt.timed_attacks.list[2].cooldown = 12.8
    tt.timed_attacks.list[2].entity = "alien_purification_drone"
    tt.timed_attacks.list[2].range = 125
    tt.timed_attacks.list[2].spawn_time = fts(34)
    tt.timed_attacks.list[2].vis_bans = 0
    tt.timed_attacks.list[2].vis_flags = bor(F_RANGED)
    tt.timed_attacks.list[2].invalid_templates = {"enemy_umbra_piece", "enemy_jungle_spider_tiny"}
    tt.timed_attacks.list[2].total_health = nil
    tt.timed_attacks.list[2].total_targets = nil
    tt.selfdestruct.damage = nil
    tt.selfdestruct.damage_radius = 90
    tt.selfdestruct.damage_type = DAMAGE_TRUE
    tt.selfdestruct.disabled = true
    tt.selfdestruct.hit_time = fts(48)
    tt.selfdestruct.sound_hit = "HeroAlienExplosion"
    tt.selfdestruct.xp_from_skill = "finalcountdown"
    tt.selfdestruct.mod = "mod_alien_selfdestruct"

    tt = E:register_t("mod_alien_selfdestruct", "mod_stun")
    tt.modifier.vis_flags = bor(F_MOD, F_STUN)
    tt.modifier.vis_bans = bor(F_BOSS)
    tt.modifier.duration = 1

    tt = E:register_t("alien_glaive", "bullet")
    tt.main_script.update = scripts.alien_glaive.update
    tt.render.sprites[1].name = "alien_glaive"
    tt.bullet.particles_name = "ps_alien_glaive_trail"
    tt.bullet.hit_fx = "fx_alien_glaive_hit"
    tt.bullet.acceleration_factor = 0.05
    tt.bullet.min_speed = 150
    tt.bullet.max_speed = 300
    tt.bullet.vis_flags = F_RANGED
    tt.bullet.vis_bans = 0
    tt.bullet.xp_gain_factor = 2.5
    tt.bounce_chance = nil
    tt.bounce_range = 150
    tt.sound_events.insert = "HeroAlienDiscoThrow"

    tt = E:register_t("fx_alien_glaive_hit", "fx")
    tt.render.sprites[1].name = "alien_glaive_hit"

    tt = E:register_t("ps_alien_glaive_trail")
    E:add_comps(tt, "pos", "particle_system")
    tt.particle_system.name = "alien_glaive_trail"
    tt.particle_system.animated = true
    tt.particle_system.loop = false
    tt.particle_system.particle_lifetime = {fts(12), fts(12)}
    tt.particle_system.scales_x = {1.5, 1.5}
    tt.particle_system.scales_y = {1.5, 0.5}
    tt.particle_system.emission_rate = 40
    tt.particle_system.track_rotation = true

    tt = E:register_t("alien_abduction_ship", "decal_scripted")
    E:add_comps(tt, "sound_events", "tween")
    tt.main_script.update = scripts.alien_abduction_ship.update
    tt.render.sprites[1] = E:clone_c("sprite")
    tt.render.sprites[1].draw_order = 2
    tt.render.sprites[1].anchor.y = 0.12
    tt.render.sprites[1].name = "hero_alien_motherShip_0002"
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].z = Z_BULLETS
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].draw_order = 3
    tt.render.sprites[2].name = "hero_alien_motherShip_0001"
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].anchor.y = 0.12
    tt.render.sprites[2].z = Z_BULLETS
    tt.render.sprites[3] = E:clone_c("sprite")
    tt.render.sprites[3].draw_order = 1
    tt.render.sprites[3].hidden = true
    tt.render.sprites[3].loop = false
    tt.render.sprites[3].name = "alien_abduction_ship_beam"
    tt.render.sprites[3].anchor.y = 0.12
    tt.render.sprites[3].offset.y = 20
    tt.render.sprites[4] = E:clone_c("sprite")
    tt.render.sprites[4].z = Z_DECALS
    tt.render.sprites[4].name = "hero_alien_motherShip_0003"
    tt.render.sprites[4].animated = false
    tt.render.sprites[4].anchor.y = 0.12
    tt.tween.remove = true
    tt.tween.props[1].sprite_id = 1
    tt.tween.props[1].loop = true
    tt.tween.props[1].interp = "sine"
    tt.tween.props[1].name = "offset"
    tt.tween.props[1].keys = {{0, vec_2(0, -4)}, {0.5, vec_2(0, 4)}, {1, vec_2(0, -4)}}
    tt.tween.props[2] = table.deepclone(tt.tween.props[1])
    tt.tween.props[2].sprite_id = 2
    tt.tween.props[3] = E:clone_c("tween_prop")
    tt.tween.props[3].sprite_id = 1
    tt.tween.props[3].name = "hidden"
    tt.tween.props[4] = E:clone_c("tween_prop")
    tt.tween.props[4].sprite_id = 2
    tt.tween.props[5] = E:clone_c("tween_prop")
    tt.tween.props[5].sprite_id = 4
    local fd, ad = 0.65, fts(34)
    local ti1, ti2, ti3 = 0, fd, 2 * fd
    local to1, to2, to3 = ti3 + ad, ti3 + ad + fd, ti3 + ad + 2 * fd
    tt.tween.props[3].keys = {{ti1, true}, {ti2, false}, {to2, true}}
    tt.tween.props[4].keys = {{ti1, 0}, {ti2, 255}, {ti3, 0}, {to1, 0}, {to2, 255}, {to3, 0}}
    tt.tween.props[5].keys = {{ti1, 0}, {ti2, 255}, {to2, 255}, {to3, 0}}
    local ox, oy = 100, 28
    local rays = {{vec_2(47 - ox, 152 - oy), fts(0), "1"}, {vec_2(106 - ox, 175 - oy), fts(5), "1"},
                  {vec_2(49 - ox, 170 - oy), fts(10), "1"}, {vec_2(84 - ox, 146 - oy), fts(10), "2"},
                  {vec_2(142 - ox, 157 - oy), fts(15), "2"}, {vec_2(58 - ox, 181 - oy), fts(20), "2"}}
    for _, r in pairs(rays) do
        local poff, tdel, name = unpack(r)
        local s = E:clone_c("sprite")
        s.loop = true
        s.animated = true
        s.prefix = "alien_abduction_ship_lightning"
        s.name = name
        s.z = Z_BULLETS
        table.insert(tt.render.sprites, s)
        local t = E:clone_c("tween_prop")
        t.keys = {{ti1, 0}, {ti1 + tdel, 0}, {ti1 + tdel + 0.2, 255}, {ti1 + tdel + 0.45, 255}, {ti1 + tdel + 0.65, 0},
                  {to1, 0}, {to1 + tdel, 0}, {to1 + tdel + 0.2, 255}, {to1 + tdel + 0.45, 255}, {to1 + tdel + 0.65, 0}}
        t.sprite_id = #tt.render.sprites
        table.insert(tt.tween.props, t)
        local tb = table.deepclone(tt.tween.props[1])
        tb.keys = {{0, vec_2(poff.x, poff.y - 4)}, {0.5, vec_2(poff.x, poff.y + 4)}, {1, vec_2(poff.x, poff.y - 4)}}
        tb.sprite_id = #tt.render.sprites
        table.insert(tt.tween.props, tb)
    end

    tt = E:register_t("abducted_enemy_decal", "decal_tween")
    tt.tween.disabled = true
    tt.tween.remove = true
    tt.tween.props[1].keys = {{0, 200}, {0.25, 178}, {0.55, 0}}
    tt.tween.props[2] = E:clone_c("tween_prop")
    tt.tween.props[2].name = "offset"
    tt.tween.props[2].keys = {{0, vec_2(0, 0)}, {"U.frandom(0.1,0.2)", vec_2(0, 10)}, {0.55, vec_2(0, 60)}}
    tt.tween.props[3] = E:clone_c("tween_prop")
    tt.tween.props[3].name = "r"
    tt.tween.props[3].keys = {{0, 0}, {0.55, "math.random(-20,20)*math.pi/180"}}

    tt = E:register_t("alien_purification_drone", "decal_scripted")
    E:add_comps(tt, "sound_events", "dps")
    tt.render.sprites[1].name = "alien_drone_attack_beam"
    tt.render.sprites[1].hidden = true
    tt.render.sprites[1].anchor.y = 0.08
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].prefix = "alien_drone"
    tt.render.sprites[2].name = "appear_long"
    tt.render.sprites[2].anchor.y = 0.08
    tt.render.sprites[3] = E:clone_c("sprite")
    tt.render.sprites[3].name = "alien_drone_attack_decal"
    tt.render.sprites[3].hidden = true
    tt.render.sprites[3].anchor.y = 0.17
    tt.sound_events.insert = "HeroAlienDrone"
    tt.sound_events.finish = "HeroAlienDroneLeave"
    tt.sound_events.loop = "HeroAlienDroneLoop"
    tt.main_script.update = scripts.alien_purification_drone.update
    tt.dps.damage_max = 16
    tt.dps.damage_every = fts(6)
    tt.dps.damage_type = DAMAGE_TRUE
    tt.jump_range = 150
    tt.switch_targets_every = fts(31)
    tt.vis_bans = bor(F_BOSS)
    tt.vis_flags = bor(F_RANGED)
    tt.duration = nil

    tt = E:register_t("hero_monk", "hero")
    E:add_comps(tt, "dodge", "melee", "timed_attacks")
    anchor_y = 0.18446601941747573
    image_y = 206
    tt.hero.level_stats.hp_max = {220, 240, 260, 280, 300, 320, 340, 360, 380, 400}
    tt.hero.level_stats.armor = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    tt.hero.level_stats.melee_damage_min = {11, 13, 14, 16, 18, 19, 21, 22, 24, 26}
    tt.hero.level_stats.melee_damage_max = {17, 19, 22, 24, 26, 29, 31, 34, 36, 38}
    tt.hero.skills.snakestyle = E:clone_c("hero_skill")
    tt.hero.skills.snakestyle.damage = {40, 60, 80, 100}
    tt.hero.skills.snakestyle.damage_reduction_factor = {0.2, 0.4, 0.6, 0.7}
    tt.hero.skills.snakestyle.xp_gain_factor = 42
    tt.hero.skills.snakestyle.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.hero.skills.dragonstyle = E:clone_c("hero_skill")
    tt.hero.skills.dragonstyle.damage_max = {75, 135, 195}
    tt.hero.skills.dragonstyle.damage_min = {35, 65, 95}
    tt.hero.skills.dragonstyle.xp_gain_factor = 108
    tt.hero.skills.dragonstyle.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.tigerstyle = E:clone_c("hero_skill")
    tt.hero.skills.tigerstyle.damage = {30, 60, 90, 120}
    tt.hero.skills.tigerstyle.xp_gain_factor = 24
    tt.hero.skills.tigerstyle.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.hero.skills.leopardstyle = E:clone_c("hero_skill")
    tt.hero.skills.leopardstyle.loops = {4, 5, 6, 7, 8}
    tt.hero.skills.leopardstyle.damage_max = {30, 33, 36, 39, 42}
    tt.hero.skills.leopardstyle.damage_min = {10, 11, 12, 13, 14}
    tt.hero.skills.leopardstyle.xp_gain_factor = 30
    tt.hero.skills.leopardstyle.xp_level_steps = {
        [2] = 1,
        [4] = 2,
        [6] = 3,
        [8] = 4,
        [10] = 5
    }
    tt.hero.skills.cranestyle = E:clone_c("hero_skill")
    tt.hero.skills.cranestyle.damage = {20, 40, 60, 80}
    tt.hero.skills.cranestyle.chance = {0.4, 0.5, 0.6, 0.7}
    tt.hero.skills.cranestyle.cooldown = {2, 1.5, 1, 0.5}
    tt.hero.skills.cranestyle.xp_gain_factor = 18
    tt.hero.skills.cranestyle.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.health.armor = nil
    tt.health.dead_lifetime = 15
    tt.health.hp_max = nil
    tt.health_bar.offset = vec_2(0, 38)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_monk.level_up
    tt.hero.tombstone_show_time = fts(66)
    tt.idle_flip.cooldown = 1
    tt.info.hero_portrait = "kr2_hero_portraits_0013"
    tt.info.portrait = IS_PHONE and "portraits_hero_0016" or "kr2_info_portraits_heroes_0015"
    tt.info.i18n_key = "HERO_MONK"
    tt.main_script.insert = scripts.hero_monk.insert
    tt.main_script.update = scripts.hero_monk.update
    tt.motion.max_speed = 120
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].prefix = "hero_monk"
    tt.soldier.melee_slot_offset.x = 5
    tt.sound_events.change_rally_point = "HeroMonkTaunt"
    tt.sound_events.death = "HeroMonkDeath"
    tt.sound_events.respawn = "HeroMonkTauntIntro"
    tt.sound_events.insert = "HeroMonkTauntIntro"
    tt.sound_events.hero_room_select = "HeroMonkTauntSelect"
    tt.unit.hit_offset = vec_2(0, 12)
    tt.unit.marker_offset = vec_2(0, -1)
    tt.unit.mod_offset = vec_2(0, 18)
    tt.unit.size = UNIT_SIZE_SMALL
    tt.dodge.disabled = true
    tt.dodge.animation = "crane"
    tt.dodge.cooldown = 2
    tt.dodge.chance = 0
    tt.dodge.damage_min = nil
    tt.dodge.damage_max = nil
    tt.dodge.damage_type = DAMAGE_PHYSICAL
    tt.dodge.ranged = true
    tt.dodge.hit_time = fts(18)
    tt.dodge.sound = "HeroMonkCounter"
    tt.melee.cooldown = 0.8
    tt.melee.range = 83.2
    tt.melee.attacks[1] = E:clone_c("melee_attack")
    tt.melee.attacks[1].animation = "attack1"
    tt.melee.attacks[1].hit_time = fts(18)
    tt.melee.attacks[1].shared_cooldown = true
    tt.melee.attacks[1].vis_bans = bor(F_FLYING, F_CLIFF)
    tt.melee.attacks[1].vis_flags = F_BLOCK
    tt.melee.attacks[1].damage_type = DAMAGE_PHYSICAL
    tt.melee.attacks[1].xp_gain_factor = 3
    tt.melee.attacks[1].side_effect = function(this, store, attack, target)
        SU.armor_dec(target, 0.1)
    end
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[2] = table.deepclone(tt.melee.attacks[1])
    tt.melee.attacks[2].animation = "attack2"
    tt.melee.attacks[2].chance = 0.33
    tt.melee.attacks[2].hit_time = fts(14)
    tt.melee.attacks[2].side_effect = function(this, store, attack, target)
        this.melee.attacks[4].ts = this.melee.attacks[4].ts - 1
        this.melee.attacks[5].ts = this.melee.attacks[5].ts - 1
    end
    tt.melee.attacks[3] = table.deepclone(tt.melee.attacks[1])
    tt.melee.attacks[3].animation = "attack3"
    tt.melee.attacks[3].chance = 0.5
    tt.melee.attacks[3].hit_time = fts(5)
    tt.melee.attacks[3].side_effect = function(this, store, attack, target)
        this.timed_attacks.list[1].ts = this.timed_attacks.list[1].ts - 1
        this.timed_attacks.list[2].ts = this.timed_attacks.list[2].ts - 1
    end
    tt.melee.attacks[4] = E:clone_c("melee_attack")
    tt.melee.attacks[4].disabled = true
    tt.melee.attacks[4].animation = "snake"
    tt.melee.attacks[4].chance = 1
    tt.melee.attacks[4].cooldown = 11.2
    tt.melee.attacks[4].damage_max = nil
    tt.melee.attacks[4].damage_min = nil
    tt.melee.attacks[4].hit_time = fts(10)
    tt.melee.attacks[4].mod = "mod_monk_damage_reduction"
    tt.melee.attacks[4].sound = "HeroMonkSnakeAttack"
    tt.melee.attacks[4].vis_bans = bor(F_FLYING, F_CLIFF, F_BOSS)
    tt.melee.attacks[4].vis_flags = F_BLOCK
    tt.melee.attacks[4].xp_from_skill = "snakestyle"
    tt.melee.attacks[5] = E:clone_c("melee_attack")
    tt.melee.attacks[5].disabled = true
    tt.melee.attacks[5].animation = "tiger"
    tt.melee.attacks[5].chance = 1
    tt.melee.attacks[5].cooldown = 6.4
    tt.melee.attacks[5].damage_max = nil
    tt.melee.attacks[5].damage_min = nil
    tt.melee.attacks[5].damage_type = DAMAGE_TRUE
    tt.melee.attacks[5].hit_time = fts(6)
    tt.melee.attacks[5].sound = "HeroMonkHadoken"
    tt.melee.attacks[5].xp_from_skill = "tigerstyle"
    tt.melee.attacks[5].side_effect = function(this, store, attack, target)
        scripts.heal(this, 30)
    end
    tt.timed_attacks.list[1] = E:clone_c("area_attack")
    tt.timed_attacks.list[1].animation = "dragon"
    tt.timed_attacks.list[1].cooldown = 12.8
    tt.timed_attacks.list[1].damage_max = nil
    tt.timed_attacks.list[1].damage_min = nil
    tt.timed_attacks.list[1].damage_flags = bor(F_AREA)
    tt.timed_attacks.list[1].damage_radius = 55
    tt.timed_attacks.list[1].damage_type = DAMAGE_TRUE
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].hit_time = fts(14)
    tt.timed_attacks.list[1].sound = "HeroMonkFiredragon"
    tt.timed_attacks.list[1].xp_from_skill = "dragonstyle"
    tt.timed_attacks.list[1].max_range = 37.5
    tt.timed_attacks.list[1].vis_bans = 0
    tt.timed_attacks.list[2] = E:clone_c("custom_attack")
    tt.timed_attacks.list[2].cooldown = 8
    tt.timed_attacks.list[2].disabled = true
    tt.timed_attacks.list[2].hit_animations = {"leopard_hit1", "leopard_hit2", "leopard_hit3", "leopard_hit4"}
    tt.timed_attacks.list[2].hit_times = {fts(3), fts(3), fts(3), fts(3)}
    tt.timed_attacks.list[2].particle_pos = {vec_2(20, 14), vec_2(24, 22), vec_2(18, 14), vec_2(21, 18)}
    tt.timed_attacks.list[2].vis_bans = bor(F_FLYING,F_BOSS, F_WATER, F_CLIFF)
    tt.timed_attacks.list[2].vis_flags = bor(F_STUN, F_RANGED)
    tt.timed_attacks.list[2].loops = nil
    tt.timed_attacks.list[2].range = 100
    tt.timed_attacks.list[2].xp_from_skill = "leopardstyle"
    tt.cooldown_factor_dec_count = 0

    tt = E:register_t("mod_monk_damage_reduction", "modifier")
    tt.main_script.insert = scripts.mod_monk_damage_reduction.insert
    tt.reduction_factor = nil

    tt = E:register_t("hero_voodoo_witch", "hero")
    E:add_comps(tt, "melee", "ranged", "timed_attacks")
    image_y = 66
    anchor_y = 14 / image_y
    tt.hero.level_stats.hp_max = {170, 190, 210, 230, 250, 270, 290, 310, 330, 350}
    tt.hero.level_stats.armor = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    tt.hero.level_stats.damage_min = {4, 5, 7, 8, 10, 11, 13, 14, 16, 17}
    tt.hero.level_stats.damage_max = {11, 16, 20, 25, 29, 34, 38, 43, 47, 52}
    tt.hero.level_stats.ranged_damage_min = {4, 5, 7, 8, 10, 11, 13, 14, 16, 17}
    tt.hero.level_stats.ranged_damage_max = {11, 16, 20, 25, 29, 34, 38, 43, 47, 52}
    tt.hero.skills.laughingskulls = E:clone_c("hero_skill")
    tt.hero.skills.laughingskulls.extra_damage = {2, 4, 6, 8}
    tt.hero.skills.laughingskulls.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.hero.skills.deathskull = E:clone_c("hero_skill")
    tt.hero.skills.deathskull.damage = {25, 50, 75}
    tt.hero.skills.deathskull.xp_gain_factor = 24
    tt.hero.skills.deathskull.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.bonedance = E:clone_c("hero_skill")
    tt.hero.skills.bonedance.skull_count = {4, 5, 6}
    tt.hero.skills.bonedance.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.deathaura = E:clone_c("hero_skill")
    tt.hero.skills.deathaura.slow_factor = {0.9, 0.8, 0.7, 0.6}
    tt.hero.skills.deathaura.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.hero.skills.voodoomagic = E:clone_c("hero_skill")
    tt.hero.skills.voodoomagic.damage = {60, 120, 180}
    tt.hero.skills.voodoomagic.count = {5, 7, 9}
    tt.hero.skills.voodoomagic.xp_gain_factor = 168
    tt.hero.skills.voodoomagic.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [9] = 3
    }
    tt.health.armor = nil
    tt.health.dead_lifetime = 15
    tt.health.hp_max = nil
    tt.health_bar.offset = vec_2(0, 39)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_voodoo_witch.level_up
    tt.hero.tombstone_show_time = fts(90)
    tt.idle_flip.cooldown = 2
    tt.info.damage_icon = "magic"
    tt.info.hero_portrait = "kr2_hero_portraits_0019"
    tt.info.portrait = IS_PHONE and "portraits_hero_0023" or "kr2_info_portraits_heroes_0019"
    tt.info.i18n_key = "HERO_VOODOO_WITCH"
    tt.main_script.insert = scripts.hero_voodoo_witch.insert
    tt.main_script.update = scripts.hero_voodoo_witch.update
    tt.motion.max_speed = 90
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].prefix = "hero_voodoo_witch"
    tt.soldier.melee_slot_offset.x = 5
    tt.sound_events.change_rally_point = "HeroVoodooWitchTaunt"
    tt.sound_events.death = "HeroVoodooWitchDeath"
    tt.sound_events.respawn = "HeroVoodooWitchTauntIntro"
    tt.sound_events.insert = "HeroVoodooWitchTauntIntro"
    tt.sound_events.hero_room_select = "HeroVoodooWitchTauntSelect"
    tt.unit.hit_offset = vec_2(0, 13)
    tt.unit.marker_offset = vec_2(0, 0)
    tt.unit.mod_offset = vec_2(0, 13)
    tt.melee.attacks[1].hit_time = fts(13)
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].vis_bans = bor(F_FLYING, F_CLIFF)
    tt.melee.attacks[1].vis_flags = F_BLOCK
    tt.melee.attacks[1].xp_gain_factor = 2.7
    tt.melee.attacks[1].cooldown = 1
    tt.melee.range = 51.2
    tt.ranged.attacks[1] = E:clone_c("bullet_attack")
    tt.ranged.attacks[1].cooldown = 1.5
    tt.ranged.attacks[1].min_range = 25
    tt.ranged.attacks[1].max_range = 140
    tt.ranged.attacks[1].bullet = "bolt_voodoo_witch"
    tt.ranged.attacks[1].shoot_time = fts(13)
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(-8, 24)}
    tt.timed_attacks.list[1] = E:clone_c("custom_attack")
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].animation = "magic"
    tt.timed_attacks.list[1].mod_fx = "mod_voodoo_witch_magic"
    tt.timed_attacks.list[1].mod_slow = "mod_voodoo_witch_magic_slow"
    tt.timed_attacks.list[1].cooldown = 18
    tt.timed_attacks.list[1].min_range = 0
    tt.timed_attacks.list[1].max_range = 100
    tt.timed_attacks.list[1].min_count = 3
    tt.timed_attacks.list[1].count = 5
    tt.timed_attacks.list[1].sound = "HeroVoodooWitchVoodooMagic"
    tt.timed_attacks.list[1].damage_type = DAMAGE_TRUE
    tt.timed_attacks.list[1].damage = nil
    tt.timed_attacks.list[1].vis_flags = F_RANGED
    tt.timed_attacks.list[1].vis_bans = bor(F_BOSS)

    tt = E:register_t("voodoo_witch_skull_aura", "aura")
    tt.aura.cycle_time = 0.267
    tt.aura.duration = -1
    tt.aura.radius = 150
    tt.aura.vis_bans = 0
    tt.aura.vis_flags = F_SKELETON
    tt.main_script.update = scripts.voodoo_witch_skull_aura.update
    tt.skull_count = 2
    tt.skulls = {}
    tt.rot_speed = 2 * math.pi / 8
    tt.rot_radius = 40

    tt = E:register_t("mod_voodoo_witch_skull_spawn", "modifier")
    tt.modifier.duration = fts(10)
    tt.main_script.update = scripts.mod_voodoo_witch_skull_spawn.update
    tt.count_group_type = COUNT_GROUP_CONCURRENT
    tt.count_group_name = "voodoo_witch_skulls"
    tt.skull_count = 2

    tt = E:register_t("voodoo_witch_skull", "decal_scripted")
    E:add_comps(tt, "ranged", "count_group", "force_motion")
    tt.count_group.name = "voodoo_witch_skulls"
    tt.count_group.type = COUNT_GROUP_CONCURRENT
    tt.flight_period = 3
    tt.flight_speed = 30
    tt.force_motion.max_a = 495
    tt.force_motion.max_v = 120
    tt.force_motion.ramp_radius = 50
    tt.main_script.update = scripts.voodoo_witch_skull.update
    tt.max_flight_height = 25
    tt.max_shots = 10
    tt.min_flight_height = 15
    tt.ranged.attacks[1].bullet = "bolt_voodoo_witch_skull"
    tt.ranged.attacks[1].cooldown = 1.1
    tt.ranged.attacks[1].max_range = 120
    tt.ranged.attacks[1].min_range = 0
    tt.ranged.attacks[1].shoot_time = fts(6)
    tt.render.sprites[1].anchor.y = 0.4
    tt.render.sprites[1].name = "idle"
    tt.render.sprites[1].prefix = "voodoo_witch_skull"
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].name = "decal_flying_shadow"
    tt.render.sprites[2].offset = vec_2(0, 0)
    tt.sacrifice = {}
    tt.sacrifice.damage = nil
    tt.sacrifice.damage_type = DAMAGE_PHYSICAL
    tt.sacrifice.damage_radius = 25
    tt.sacrifice.disabled = true
    tt.sacrifice.min_range = 0
    tt.sacrifice.max_range = 150
    tt.sacrifice.max_v = 4 * tt.force_motion.max_v
    tt.sacrifice.max_a = 2 * tt.force_motion.max_a
    tt.sacrifice.a_step = 20
    tt.sacrifice.vis_flags = F_RANGED
    tt.sacrifice.vis_bans = 0
    tt.sacrifice.xp_from_skill = "deathskull"
    tt.sacrifice.sound = "HeroVoodooWitchSacrificeStart"
    tt.sacrifice.sound_hit = "HeroVoodooWitchSacrificeHit"
    tt.rot_dest = vec_2(0, 0)

    tt = E:register_t("fx_voodoo_witch_skull_explosion", "fx")
    tt.render.sprites[1].name = "fx_voodoo_witch_skull_explosion"

    tt = E:register_t("ps_voodoo_witch_skull")
    E:add_comps(tt, "pos", "particle_system")
    tt.particle_system.name = "voodoo_skull_particle"
    tt.particle_system.loop = false
    tt.particle_system.animated = true
    tt.particle_system.particle_lifetime = {fts(10), fts(12)}
    tt.particle_system.alphas = {255, 0}
    tt.particle_system.scales_y = {0.85, 0.15}
    tt.particle_system.emit_rotation_spread = math.pi
    tt.particle_system.emission_rate = 60

    tt = E:register_t("voodoo_witch_death_aura", "aura")
    E:add_comps(tt, "render")
    tt.aura.cycle_time = 1
    tt.aura.duration = -1
    tt.aura.radius = 120
    tt.aura.vis_bans = bor(F_FRIEND)
    tt.aura.vis_flags = F_MOD
    tt.aura.damage_type = DAMAGE_TRUE
    tt.aura.damage = 1
    tt.aura.xp_gain_factor = 0.09
    tt.mod_slow = "mod_voodoo_witch_aura_slow"
    tt.main_script.update = scripts.voodoo_witch_death_aura.update
    tt.render.sprites[1].name = "decal_voodoo_witch_death_aura"
    tt.render.sprites[1].z = Z_DECALS
    tt.render.sprites[1].loop = true
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].name = "voodoo_buff_top"
    tt.render.sprites[2].anchor.y = 0.22727272727272727

    tt = E:register_t("mod_voodoo_witch_aura_slow", "mod_slow")
    E:add_comps(tt, "render", "tween")
    tt.slow.factor = nil
    tt.modifier.duration = 1.1
    tt.modifier.resets_same = true
    tt.modifier.use_mod_offset = false
    tt.render.sprites[1].size_names = {"voodoo_aura_small", "voodoo_aura_small", "voodoo_aura_big"}
    tt.render.sprites[1].name = "voodoo_aura_small"
    tt.render.sprites[1].z = Z_DECALS
    tt.render.sprites[1].animated = false
    tt.tween.props[1].keys = {{0, 0}, {0.5, 255}}
    tt.tween.remove = false

    tt = E:register_t("bolt_voodoo_witch", "bolt")
    tt.bullet.damage_max = nil
    tt.bullet.damage_min = nil
    tt.bullet.damage_type = DAMAGE_MAGICAL
    tt.bullet.max_speed = 450
    tt.bullet.min_speed = 150
    tt.bullet.particles_name = "ps_bolt_voodoo_witch"
    tt.bullet.xp_gain_factor = 2.7
    tt.render.sprites[1].prefix = "bolt_voodoo_witch"
    tt.sound_events.insert = "HeroVoodooWitchAttack"

    tt = E:register_t("bolt_voodoo_witch_skull", "bolt_voodoo_witch")
    tt.bullet.damage_max = 5
    tt.bullet.damage_min = 5
    tt.bullet.particles_name = "ps_bolt_voodoo_witch_skull"
    tt.bullet.xp_gain_factor = 1.8
    tt.render.sprites[1].scale = vec_2(0.75, 0.75)
    tt.sound_events.insert = "HeroVoodooWitchSkullAttack"

    tt = E:register_t("ps_bolt_voodoo_witch")
    E:add_comps(tt, "pos", "particle_system")
    tt.particle_system.name = "voodoo_proy_particle"
    tt.particle_system.animated = false
    tt.particle_system.particle_lifetime = {fts(10), fts(10)}
    tt.particle_system.alphas = {255, 0}
    tt.particle_system.scales_y = {0.75, 0.15}
    tt.particle_system.emission_rate = 60

    tt = E:register_t("ps_bolt_voodoo_witch_skull", "ps_bolt_voodoo_witch")
    tt.particle_system.scales_y = {0.5, 0.1}
    tt.particle_system.particle_lifetime = {fts(6), fts(6)}

    tt = E:register_t("mod_voodoo_witch_magic", "modifier")
    E:add_comps(tt, "render")
    tt.modifier.duration = fts(61)
    tt.main_script.insert = scripts.mod_voodoo_witch_magic.insert
    tt.main_script.update = scripts.mod_track_target.update
    tt.render.sprites[1].name = "mod_voodoo_witch_magic"
    tt.render.sprites[1].loop = false

    tt = E:register_t("mod_voodoo_witch_magic_slow", "mod_slow")
    tt.slow.factor = 0.3
    tt.modifier.duration = 0.4

    tt = E:register_t("hero_crab", "hero")
    E:add_comps(tt, "water", "melee", "ranged", "timed_attacks")
    anchor_y = 0.26785714285714285
    image_y = 112
    tt.hero.level_stats.hp_max = {320, 340, 360, 380, 400, 420, 440, 460, 480, 500}
    tt.hero.level_stats.armor = {0.17, 0.19, 0.21, 0.23, 0.25, 0.27, 0.29, 0.31, 0.33, 0.35}
    tt.hero.level_stats.melee_damage_min = {8, 9, 10, 11, 11, 12, 13, 14, 15, 16}
    tt.hero.level_stats.melee_damage_max = {23, 26, 29, 32, 34, 37, 40, 42, 44, 46}
    tt.hero.skills.hookedclaw = E:clone_c("hero_skill")
    tt.hero.skills.hookedclaw.extra_damage = {7, 14, 21, 28}
    tt.hero.skills.hookedclaw.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.hero.skills.battlehardened = E:clone_c("hero_skill")
    tt.hero.skills.battlehardened.chance = {0.35, 0.5, 0.65}
    tt.hero.skills.battlehardened.xp_gain_factor = 120
    tt.hero.skills.battlehardened.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.pincerattack = E:clone_c("hero_skill")
    tt.hero.skills.pincerattack.damage_min = {20, 40, 60}
    tt.hero.skills.pincerattack.damage_max = {40, 80, 120}
    tt.hero.skills.pincerattack.xp_gain_factor = 96
    tt.hero.skills.pincerattack.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [9] = 3
    }
    tt.hero.skills.shouldercannon = E:clone_c("hero_skill")
    tt.hero.skills.shouldercannon.damage = {40, 60, 80}
    tt.hero.skills.shouldercannon.slow_factor = {0.6, 0.55, 0.5}
    tt.hero.skills.shouldercannon.slow_duration = {4, 5, 6}
    tt.hero.skills.shouldercannon.radius_inc = {5, 5, 5}
    tt.hero.skills.shouldercannon.xp_gain_factor = 36
    tt.hero.skills.shouldercannon.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.burrow = E:clone_c("hero_skill")
    tt.hero.skills.burrow.extra_speed = {20, 26, 32, 38}
    tt.hero.skills.burrow.damage = {15, 30, 45, 60}
    tt.hero.skills.burrow.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.hero.skills.burrow.xp_gain_factor = 50
    tt.health.armor = nil
    tt.health.dead_lifetime = 15
    tt.health.hp_max = nil
    tt.health.on_damage = scripts.hero_crab.on_damage
    tt.health_bar.offset = vec_2(0, 60)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_crab.level_up
    tt.hero.tombstone_show_time = fts(66)
    tt.idle_flip.cooldown = 5
    tt.info.fn = scripts.hero_basic.get_info
    tt.info.hero_portrait = "kr2_hero_portraits_0012"
    tt.info.portrait = IS_PHONE and "portraits_hero_0015" or "kr2_info_portraits_heroes_0014"
    tt.info.i18n_key = "HERO_CRAB"
    tt.main_script.insert = scripts.hero_crab.insert
    tt.main_script.update = scripts.hero_crab.update
    tt.motion.max_speed = 60
    tt.motion.speed_limit = 260
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].prefix = "hero_crab"
    tt.render.sprites[1].angles.walk = {"running"}
    tt.render.sprites[1].angles.burrow_land = {"burrow_side", "burrow_up", "burrow_down"}
    tt.render.sprites[1].angles.burrow_water = {"burrow_side_water", "burrow_up_water", "burrow_down_water"}
    tt.soldier.melee_slot_offset.x = 20
    tt.sound_events.change_rally_point = "HeroCrabTaunt"
    tt.sound_events.death = "HeroCrabDeath"
    tt.sound_events.respawn = "HeroCrabTauntIntro"
    tt.sound_events.insert = "HeroCrabTauntIntro"
    tt.sound_events.hero_room_select = "HeroCrabTauntSelect"
    tt.sound_events.water_splash = "SpecialMermaid"
    tt.sound_events.burrow_in = "HeroCrabBurrowIn"
    tt.sound_events.burrow_out = "HeroCrabBurrowOut"
    tt.unit.hit_offset = vec_2(0, 17)
    tt.unit.marker_offset = vec_2(0, 0)
    tt.unit.mod_offset = vec_2(0, 23)
    tt.unit.size = UNIT_SIZE_MEDIUM
    tt.burrow = {}
    tt.burrow.disabled = true
    tt.burrow.extra_speed = nil
    tt.burrow.damage_radius = nil
    tt.burrow.health_bar_offset = vec_2(0, 30)
    tt.burrow.hit_offset = vec_2(0, -13)
    tt.burrow.min_distance = 100
    tt.burrow.mod_offset = vec_2(0, -7)
    tt.burrow.stun_speed = 160
    tt.burrow.radius = 80
    tt.burrow.damage = 15
    tt.burrow.init_accel = 40
    tt.burrow.cooldown = 6
    tt.burrow.ts = 0
    tt.invuln = {}
    tt.invuln.animation = "invuln"
    tt.invuln.aura = nil
    tt.invuln.aura_name = "aura_crab_invuln"
    tt.invuln.chance = nil
    tt.invuln.cooldown = 4
    tt.invuln.disabled = true
    tt.invuln.duration = 4
    tt.invuln.exclude_damage_types = bor(DAMAGE_INSTAKILL, DAMAGE_DISINTEGRATE, DAMAGE_DISINTEGRATE, DAMAGE_EAT)
    tt.invuln.sound = "HeroCrabShield"
    tt.invuln.trigger_factor = 0.4
    tt.invuln.ts = 0
    tt.invuln.pending = nil
    tt.melee.cooldown = 1.2
    tt.melee.range = 83.2
    tt.melee.attacks[1] = E:clone_c("melee_attack")
    tt.melee.attacks[1].animation = "attack"
    tt.melee.attacks[1].hit_time = fts(18)
    tt.melee.attacks[1].shared_cooldown = true
    tt.melee.attacks[1].vis_bans = bor(F_FLYING, F_CLIFF)
    tt.melee.attacks[1].vis_flags = F_BLOCK
    tt.melee.attacks[1].damage_type = DAMAGE_PHYSICAL
    tt.melee.attacks[1].xp_gain_factor = 2.5
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.ranged.attacks[1] = E:clone_c("bullet_attack")
    tt.ranged.attacks[1].disabled = true
    tt.ranged.attacks[1].animation = "small_cannon"
    tt.ranged.attacks[1].bullet = "crab_water_bomb"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(9, 50)}
    tt.ranged.attacks[1].cooldown = 9
    tt.ranged.attacks[1].max_range = 256
    tt.ranged.attacks[1].min_range = 0
    tt.ranged.attacks[1].shoot_time = fts(15)
    tt.ranged.attacks[1].vis_bans = 0
    tt.ranged.attacks[1].xp_from_skill = "shouldercannon"
    tt.ranged.attacks[1].node_prediction = fts(35)
    tt.ranged.attacks[1].check_target_before_shot = true
    tt.timed_attacks.list[1] = E:clone_c("area_attack")
    tt.timed_attacks.list[1].animation = "pincer"
    tt.timed_attacks.list[1].cooldown = 7.2
    tt.timed_attacks.list[1].damage_flags = bor(F_AREA)
    tt.timed_attacks.list[1].damage_max = nil
    tt.timed_attacks.list[1].damage_min = nil
    tt.timed_attacks.list[1].damage_size = vec_2(120, 25)
    tt.timed_attacks.list[1].damage_type = DAMAGE_TRUE
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].hit_time = fts(12)
    tt.timed_attacks.list[1].max_range = 110
    tt.timed_attacks.list[1].min_count = 1
    tt.timed_attacks.list[1].sound = "HeroCrabPrincer"
    tt.timed_attacks.list[1].xp_from_skill = "pincerattack"
    tt.vis.flags = bor(tt.vis.flags, F_MOCKING)

    tt = E:register_t("crab_water_bomb", "bomb")
    tt.bullet.damage_radius = 60
    tt.bullet.flight_time = fts(20)
    tt.bullet.g = -1 / (fts(1) * fts(1))
    tt.bullet.hit_decal = nil
    tt.bullet.hit_fx = "fx_crab_water_bomb_explosion"
    tt.bullet.hit_fx_water = "fx_crab_water_bomb_explosion"
    tt.bullet.hit_payload = "aura_slow_water_bomb"
    tt.sound_events.insert = "HeroCrabCannon"
    tt.sound_events.hit = "HeroCrabCannonExplosion"
    tt.sound_events.hit_water = "HeroGiantExplosionRock"
    tt.render.sprites[1].name = "hero_crabman_proy"
    tt.render.sprites[1].scale = vec_1(1)

    tt = E:register_t("aura_slow_water_bomb", "aura")
    tt.aura.mod = "mod_slow_water_bomb"
    tt.aura.cycle_time = fts(1)
    tt.aura.duration = fts(5)
    tt.aura.radius = 60
    tt.aura.vis_bans = F_FRIEND
    tt.aura.vis_flags = F_MOD
    tt.main_script.insert = scripts.aura_apply_mod.insert
    tt.main_script.update = scripts.aura_apply_mod.update

    tt = E:register_t("mod_slow_water_bomb", "mod_slow")
    tt.modifier.duration = nil
    tt.slow.factor = nil

    tt = E:register_t("fx_crab_water_bomb_explosion", "fx")
    tt.render.sprites[1].name = "fx_hero_crab_splash"
    tt.render.sprites[1].z = Z_OBJECTS
    tt.render.sprites[1].anchor.y = 0.21212121212121213
    tt.render.sprites[1].sort_y_offset = -5

    tt = E:register_t("mod_stun_burrow", "mod_stun")
    tt.modifier.duration = 2

    tt = E:register_t("aura_crab_invuln", "aura")
    E:add_comps(tt, "render", "tween")
    local dur = 4
    tt.aura.duration = dur
    tt.aura.track_source = true
    tt.main_script.update = scripts.aura_crab_invuln.update
    tt.render.sprites[1].name = "fx_hero_crab_bubbles"
    tt.render.sprites[1].loop = true
    tt.render.sprites[1].anchor.y = 0.09722222222222222
    tt.render.sprites[1].scale = vec_2(0.8, 0.8)
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].name = "hero_crabman_invulnerable_effect"
    tt.render.sprites[2].anchor.y = 0.09722222222222222
    tt.render.sprites[2].scale = vec_2(0, 0)
    tt.tween.remove = false
    tt.tween.props[1].keys = {{0, 0}, {fts(11), 0}, {fts(16), 255}, {dur, 255}, {dur + fts(15), 0}}
    tt.tween.props[2] = E:clone_c("tween_prop")
    tt.tween.props[2].sprite_id = 2
    tt.tween.props[2].keys = {{0, 0}, {fts(19), 255}, {dur, 255}, {dur + fts(15), 0}}
    tt.tween.props[3] = E:clone_c("tween_prop")
    tt.tween.props[3].name = "scale"
    tt.tween.props[3].sprite_id = 2
    tt.tween.props[3].keys = {{0, vec_2(0, 0)}, {fts(20), vec_2(0.75, 0.85)}}
    tt.tween.props[4] = E:clone_c("tween_prop")
    tt.tween.props[4].disabled = true
    tt.tween.props[4].name = "scale"
    tt.tween.props[4].sprite_id = 2
    tt.tween.props[4].keys = {{0, vec_2(0.75, 0.85)}, {fts(10), vec_2(0.8, 0.8)}, {fts(20), vec_2(0.75, 0.85)}}
    tt.tween.props[4].loop = true

    tt = E:register_t("hero_giant", "hero")
    E:add_comps(tt, "auras", "melee", "ranged", "timed_attacks")
    anchor_y = 0.19117647058823528
    image_y = 88
    tt.hero.level_stats.hp_max = {330, 360, 390, 420, 450, 480, 510, 540, 570, 600}
    tt.hero.level_stats.armor = {0.24, 0.27, 0.30, 0.34, 0.37, 0.40, 0.44, 0.47, 0.50, 0.55}
    tt.hero.level_stats.melee_damage_min = {10, 12, 14, 15, 17, 18, 20, 21, 23, 24}
    tt.hero.level_stats.melee_damage_max = {16, 18, 20, 23, 25, 27, 30, 32, 34, 37}
    tt.hero.skills.boulderthrow = E:clone_c("hero_skill")
    tt.hero.skills.boulderthrow.damage_min = {20, 40, 60}
    tt.hero.skills.boulderthrow.damage_max = {40, 60, 100}
    tt.hero.skills.boulderthrow.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.boulderthrow.xp_gain_factor = 60
    tt.hero.skills.stomp = E:clone_c("hero_skill")
    tt.hero.skills.stomp.damage = {12, 14, 16}
    tt.hero.skills.stomp.loops = {2, 3, 4}
    tt.hero.skills.stomp.stun_duration = {2, 3, 4}
    tt.hero.skills.stomp.xp_gain_factor = 80
    tt.hero.skills.stomp.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [9] = 3
    }
    tt.hero.skills.bastion = E:clone_c("hero_skill")
    tt.hero.skills.bastion.damage_per_tick = {1.5, 2, 2.5, 3}
    tt.hero.skills.bastion.max_damage = {15, 20, 25, 30}
    tt.hero.skills.bastion.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.hero.skills.massivedamage = E:clone_c("hero_skill")
    tt.hero.skills.massivedamage.chance = {0.2, 0.35, 0.5}
    tt.hero.skills.massivedamage.extra_damage = {60, 120, 180}
    tt.hero.skills.massivedamage.health_factor = 2.5
    tt.hero.skills.massivedamage.xp_gain_factor = 90
    tt.hero.skills.massivedamage.xp_level_steps = {
        [4] = 1,
        [7] = 2,
        [10] = 3
    }
    tt.hero.skills.hardrock = E:clone_c("hero_skill")
    tt.hero.skills.hardrock.extra_hp = {150, 300, 450}
    tt.hero.skills.hardrock.damage_block = {9, 12, 15}
    tt.hero.skills.hardrock.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.auras.list[1] = E:clone_c("aura_attack")
    tt.auras.list[1].cooldown = 0
    tt.auras.list[1].disabled = true
    tt.auras.list[1].name = "aura_giant_bastion"
    tt.health.armor = tt.hero.level_stats.armor[1]
    tt.health.dead_lifetime = 15
    tt.health.hp_max = tt.hero.level_stats.hp_max[1]
    tt.health_bar.offset = vec_2(0, 60)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.health.on_damage = scripts.hero_giant.on_damage
    tt.health.damage_block = 0
    tt.hero.fn_level_up = scripts.hero_giant.level_up
    tt.hero.tombstone_show_time = fts(60)
    tt.idle_flip.cooldown = 1
    tt.info.fn = scripts.hero_basic.get_info
    tt.info.hero_portrait = "kr2_hero_portraits_0008"
    tt.info.portrait = IS_PHONE and "portraits_hero_0008" or "kr2_info_portraits_heroes_0008"
    tt.info.i18n_key = "HERO_GIANT"
    tt.main_script.insert = scripts.hero_giant.insert
    tt.main_script.update = scripts.hero_giant.update
    tt.motion.max_speed = 55
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].prefix = "hero_giant"
    tt.soldier.melee_slot_offset.x = 18
    tt.sound_events.change_rally_point = "HeroGiantTaunt"
    tt.sound_events.death = "HeroGiantDeath"
    tt.sound_events.respawn = "HeroGiantTauntIntro"
    tt.sound_events.insert = "HeroGiantTauntIntro"
    tt.sound_events.hero_room_select = "HeroGiantTauntSelect"
    tt.ui.click_rect = IS_PHONE and r(-35, -15, 70, 70) or r(-25, 0, 50, 45)
    tt.unit.hit_offset = vec_2(0, 12)
    tt.unit.marker_offset = vec_2(0, 0.28)
    tt.unit.mod_offset = vec_2(0, 23)
    tt.unit.size = UNIT_SIZE_MEDIUM
    tt.unit.blood_color = BLOOD_GRAY
    tt.vis.bans = bor(tt.vis.bans, F_POISON)
    tt.vis.flags = bor(tt.vis.flags, F_MOCKING)
    tt.melee.range = 70
    tt.melee.attacks[1] = E:clone_c("melee_attack")
    tt.melee.attacks[1].damage_max = nil
    tt.melee.attacks[1].damage_min = nil
    tt.melee.attacks[1].hit_time = fts(9)
    tt.melee.attacks[1].cooldown = 1.3
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].vis_bans = bor(F_FLYING, F_CLIFF)
    tt.melee.attacks[1].vis_flags = F_BLOCK
    tt.melee.attacks[1].xp_gain_factor = 3.2
    tt.melee.attacks[2] = E:clone_c("melee_attack")
    tt.melee.attacks[2].disabled = true
    tt.melee.attacks[2].damage_max = 0
    tt.melee.attacks[2].damage_min = 0
    tt.melee.attacks[2].animation = "massive"
    tt.melee.attacks[2].hit_time = fts(15)
    tt.melee.attacks[2].cooldown = 9.6
    tt.melee.attacks[2].mod = "mod_giant_massivedamage"
    tt.melee.attacks[2].vis_bans = bor(F_FLYING, F_CLIFF)
    tt.melee.attacks[2].vis_flags = F_BLOCK
    tt.melee.attacks[2].xp_from_skill = "massivedamage"
    tt.melee.attacks[2].sound = "HeroGiantMassiveDamage"
    tt.ranged.attacks[1] = E:clone_c("bullet_attack")
    tt.ranged.attacks[1].disabled = true
    tt.ranged.attacks[1].animation = "ranged"
    tt.ranged.attacks[1].bullet = "giant_boulder"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(0, 77)}
    tt.ranged.attacks[1].cooldown = 10.4
    tt.ranged.attacks[1].max_range = 300
    tt.ranged.attacks[1].min_range = 50
    tt.ranged.attacks[1].shoot_time = fts(20)
    tt.ranged.attacks[1].vis_bans = 0
    tt.ranged.attacks[1].sound = "HeroGiantBoulder"
    tt.ranged.attacks[1].node_prediction = fts(40)
    tt.ranged.attacks[1].xp_from_skill = "boulderthrow"
    tt.timed_attacks.list[1] = E:clone_c("area_attack")
    tt.timed_attacks.list[1].animation = "stomp"
    tt.timed_attacks.list[1].cooldown = 12.6
    tt.timed_attacks.list[1].damage = nil
    tt.timed_attacks.list[1].damage_bans = bor(F_FLYING)
    tt.timed_attacks.list[1].damage_flags = bor(F_AREA)
    tt.timed_attacks.list[1].damage_radius = 150
    tt.timed_attacks.list[1].damage_type = DAMAGE_EXPLOSION
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].hit_times = {fts(4), fts(12)}
    tt.timed_attacks.list[1].loops = nil
    tt.timed_attacks.list[1].max_range = 76.8
    tt.timed_attacks.list[1].stun_chance = 0.5
    tt.timed_attacks.list[1].trigger_min_enemies = 2
    tt.timed_attacks.list[1].trigger_min_hp = 100
    tt.timed_attacks.list[1].vis_bans = bor(F_FLYING)
    tt.timed_attacks.list[1].stun_vis_flags = F_STUN
    tt.timed_attacks.list[1].stun_vis_bans = bor(F_CLIFF, F_BOSS, F_FLYING)
    tt.hardrock_extra_hp = 0

    tt = E:register_t("giant_death_remains", "decal_tween")
    tt.render.sprites[1].name = "hero_giant_death_remains"
    tt.render.sprites[1].anchor.y = 0.19117647058823528
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].name = "hero_giant_death_rocks"
    tt.render.sprites[2].anchor.y = 0.19117647058823528
    tt.render.sprites[2].time_offset = -fts(12)
    tt.tween.remove = true
    tt.tween.props[1].keys = {{0, 0}, {fts(12), 0}, {fts(26), 255}, {fts(45), 255}, {fts(60), 0}}
    tt.tween.props[2] = E:clone_c("tween_prop")
    tt.tween.props[2].keys = {{0, 0}, {fts(12), 0}, {fts(13), 255}, {fts(25), 0}, {fts(27), 0}}
    tt.tween.props[2].sprite_id = 2

    tt = E:register_t("aura_giant_bastion", "aura")
    E:add_comps(tt, "render", "tween")
    tt.aura.duration = -1
    tt.aura.track_source = true
    tt.main_script.update = scripts.aura_giant_bastion.update
    tt.render.sprites[1].name = "giant_bastion_decal"
    tt.render.sprites[1].loop = true
    tt.render.sprites[1].hidden = true
    tt.render.sprites[1].draw_order = 2
    tt.render.sprites[1].scale = vec_2(0, 0)
    tt.render.sprites[1].anchor.y = 0.19117647058823528
    tt.max_distance = 80
    tt.tick_time = 3
    tt.damage_per_tick = nil
    tt.max_damage = nil
    tt.tween.remove = false
    tt.tween.props[1].keys = {{0, 0}, {0.5, 255}}

    tt = E:register_t("mod_giant_massivedamage", "modifier")
    E:add_comps(tt, "render", "tween")
    tt.instakill_chance = nil
    tt.instakill_min_hp = nil
    tt.damage_min = nil
    tt.damage_max = nil
    tt.render.sprites[1].loop = false
    tt.render.sprites[1].z = Z_OBJECTS
    tt.render.sprites[1].name = "giant_ice"
    tt.render.sprites[1].size_names = {"small", "big", "big"}
    tt.render.sprites[1].size_anchors_y = {0.19, 0.22, 0.22}
    tt.tween.props[1].keys = {{0, 255}, {fts(12), 255}, {fts(12) + 0.25, 0}}
    tt.tween.remove = true
    tt.main_script.insert = scripts.mod_giant_massivedamage.insert

    tt = E:register_t("mod_giant_slow", "mod_slow")
    tt.modifier.duration = 1
    tt.slow.factor = 0.5

    tt = E:register_t("mod_giant_stun", "mod_shock_and_awe")
    tt.modifier.duration = nil

    tt = E:register_t("giant_stomp_decal", "decal_timed")
    tt.render.sprites[1].name = "giant_stomp_stones"
    tt.render.sprites[1].z = Z_OBJECTS

    tt = E:register_t("giant_boulder", "bomb")
    tt.bullet.damage_min = nil
    tt.bullet.damage_max = nil
    tt.bullet.damage_radius = 86.4
    tt.bullet.flight_time = fts(20)
    tt.bullet.g = -1.5 / (fts(1) * fts(1))
    tt.bullet.hit_fx = "fx_giant_boulder_explosion"
    tt.bullet.hit_decal = "decal_bomb_crater"
    tt.bullet.hit_fx_water = "fx_explosion_water"
    tt.bullet.hit_fx_sort_y_offset = nil
    tt.sound_events.hit = "HeroGiantExplosionRock"
    tt.sound_events.hit_water = "RTWaterExplosion"
    tt.sound_events.insert = nil
    tt.render.sprites[1].name = "hero_giant_proy_0001"
    tt.main_script.insert = scripts.giant_boulder.insert

    tt = E:register_t("fx_giant_boulder_explosion", "fx")
    tt.render.sprites[1].name = "giant_boulder_explosion"
    tt.render.sprites[1].z = Z_OBJECTS

    tt = E:register_t("hero_minotaur", "hero")
    E:add_comps(tt, "melee", "timed_attacks")
    image_y = 110
    anchor_y = 28 / image_y
    tt.hero.level_stats.hp_max = {325, 350, 375, 400, 425, 450, 475, 500, 525, 550}
    tt.hero.level_stats.armor = {0.13, 0.16, 0.19, 0.22, 0.25, 0.28, 0.31, 0.34, 0.37, 0.4}
    tt.hero.level_stats.damage_min = {15, 17, 19, 21, 23, 25, 27, 29, 32, 34}
    tt.hero.level_stats.damage_max = {27, 31, 35, 39, 43, 47, 51, 55, 59, 62}
    tt.hero.skills.bullrush = E:clone_c("hero_skill")
    tt.hero.skills.bullrush.xp_gain_factor = 15
    tt.hero.skills.bullrush.damage_min = {10, 20, 30}
    tt.hero.skills.bullrush.damage_max = {30, 60, 90}
    tt.hero.skills.bullrush.run_damage_min = {10, 15, 20}
    tt.hero.skills.bullrush.run_damage_max = {20, 35, 50}
    tt.hero.skills.bullrush.duration = {2, 3, 4}
    tt.hero.skills.bullrush.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.bloodaxe = E:clone_c("hero_skill")
    tt.hero.skills.bloodaxe.damage_factor = {2, 3, 4}
    tt.hero.skills.bloodaxe.xp_gain_factor = 25
    tt.hero.skills.bloodaxe.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.daedalusmaze = E:clone_c("hero_skill")
    tt.hero.skills.daedalusmaze.xp_gain_factor = 120
    tt.hero.skills.daedalusmaze.duration = {2, 4, 6}
    tt.hero.skills.daedalusmaze.xp_level_steps = {
        [4] = 1,
        [7] = 2,
        [10] = 3
    }
    tt.hero.skills.roaroffury = E:clone_c("hero_skill")
    tt.hero.skills.roaroffury.extra_damage = {0.25, 0.5, 0.75}
    tt.hero.skills.roaroffury.xp_gain_factor = 35
    tt.hero.skills.roaroffury.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [9] = 3
    }
    tt.hero.skills.doomspin = E:clone_c("hero_skill")
    tt.hero.skills.doomspin.damage_min = {16, 32, 48}
    tt.hero.skills.doomspin.damage_max = {48, 96, 144}
    tt.hero.skills.doomspin.xp_gain_factor = 25
    tt.hero.skills.doomspin.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.health.armor = nil
    tt.health.dead_lifetime = 15
    tt.health.hp_max = nil
    tt.health_bar.offset = vec_2(0, 56)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_minotaur.level_up
    tt.hero.tombstone_show_time = fts(90)
    tt.idle_flip.cooldown = 10
    tt.info.fn = scripts.hero_basic.get_info
    tt.info.hero_portrait = "kr2_hero_portraits_0018"
    tt.info.portrait = IS_PHONE and "portraits_hero_0022" or "kr2_info_portraits_heroes_0018"
    tt.info.i18n_key = "HERO_MINOTAUR"
    tt.main_script.update = scripts.hero_minotaur.update
    tt.motion.max_speed = 90
    tt.regen.cooldown = 1
    tt.regen.health = nil
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].prefix = "hero_minotaur"
    tt.render.sprites[1].angles = {}
    tt.render.sprites[1].angles.walk = {"running"}
    tt.soldier.melee_slot_offset = vec_2(20, 0)
    tt.sound_events.change_rally_point = "HeroMinotaurTaunt"
    tt.sound_events.death = "HeroMinotaurDeath"
    tt.sound_events.respawn = "HeroMinotaurTauntIntro"
    tt.sound_events.insert = "HeroMinotaurTauntIntro"
    tt.sound_events.hero_room_select = "HeroMinotaurTauntSelect"
    tt.unit.hit_offset = vec_2(0, 20)
    tt.unit.marker_offset = vec_2(0, 0)
    tt.unit.mod_offset = vec_2(0, 20)
    tt.melee.attacks[1] = E:clone_c("melee_attack")
    tt.melee.attacks[1].hit_time = fts(8)
    tt.melee.attacks[1].shared_cooldown = true
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].vis_bans = bor(F_FLYING, F_CLIFF)
    tt.melee.attacks[1].vis_flags = F_BLOCK
    tt.melee.attacks[1].xp_gain_factor = 3
    tt.melee.attacks[2] = E:clone_c("melee_attack")
    tt.melee.attacks[2].animation = "axe"
    tt.melee.attacks[2].chance = 0.1
    tt.melee.attacks[2].damage_type = bor(DAMAGE_FX_EXPLODE, DAMAGE_TRUE)
    tt.melee.attacks[2].disabled = true
    tt.melee.attacks[2].hit_decal = "decal_minotaur_bloodaxe"
    tt.melee.attacks[2].hit_offset = vec_2(40, -5)
    tt.melee.attacks[2].hit_time = fts(18)
    tt.melee.attacks[2].shared_cooldown = true
    tt.melee.attacks[2].sound = "HeroMinotaurBloodAxe"
    tt.melee.attacks[2].vis_bans = bor(F_FLYING, F_CLIFF)
    tt.melee.attacks[2].vis_flags = F_BLOCK
    tt.melee.attacks[2].xp_from_skill = "bloodaxe"
    tt.melee.range = 64
    tt.melee.cooldown = 1.5 - fts(21) + fts(8)
    tt.timed_attacks.list[1] = E:clone_c("area_attack")
    tt.timed_attacks.list[1].animation = "spin"
    tt.timed_attacks.list[1].cooldown = 10
    tt.timed_attacks.list[1].damage_radius = 75
    tt.timed_attacks.list[1].damage_type = DAMAGE_PHYSICAL
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].hit_time = fts(14)
    tt.timed_attacks.list[1].max_range = tt.timed_attacks.list[1].damage_radius
    tt.timed_attacks.list[1].min_count = 1
    tt.timed_attacks.list[1].min_range = 0
    tt.timed_attacks.list[1].sound = "HeroMinotaurDoomSpin"
    tt.timed_attacks.list[2] = E:clone_c("mod_attack")
    tt.timed_attacks.list[2].animation = "roar"
    tt.timed_attacks.list[2].cooldown = 15
    tt.timed_attacks.list[2].disabled = true
    tt.timed_attacks.list[2].excluded_templates = {}
    tt.timed_attacks.list[2].mod = "mod_minotaur_roaroffury"
    tt.timed_attacks.list[2].sound = "HeroMinotaurRoarOfFury"
    tt.timed_attacks.list[2].shoot_time = fts(9)
    tt.timed_attacks.list[2].shoot_fx = "fx_minotaur_roarofury_scream"
    tt.timed_attacks.list[3] = E:clone_c("custom_attack")
    tt.timed_attacks.list[3].animations = {"rush_start", "rush_loop", "rush_end"}
    tt.timed_attacks.list[3].cooldown = 16
    tt.timed_attacks.list[3].disabled = true
    tt.timed_attacks.list[3].damage_type = DAMAGE_RUDE
    tt.timed_attacks.list[3].max_range = 350
    tt.timed_attacks.list[3].min_range = 150
    tt.timed_attacks.list[3].mod = "mod_minotaur_stun"
    tt.timed_attacks.list[3].sound = "HeroMinotaurBullRush"
    tt.timed_attacks.list[3].speed_factor = 4
    tt.timed_attacks.list[3].stun_range = 50
    tt.timed_attacks.list[3].stun_vis_bans = bor(F_FLYING, F_CLIFF, F_WATER, F_FRIEND, F_BOSS, F_HERO)
    tt.timed_attacks.list[3].stun_vis_flags = bor(F_RANGED, F_STUN)
    tt.timed_attacks.list[3].vis_bans = bor(F_FLYING, F_CLIFF, F_WATER, F_FRIEND, F_HERO)
    tt.timed_attacks.list[3].vis_flags = bor(F_BLOCK, F_RANGED)
    tt.timed_attacks.list[3].nodes_limit = 20
    tt.timed_attacks.list[4] = E:clone_c("custom_attack")
    tt.timed_attacks.list[4].animation = "daedalus"
    tt.timed_attacks.list[4].cooldown = 25
    tt.timed_attacks.list[4].disabled = true
    tt.timed_attacks.list[4].invalid_terrains = bor(TERRAIN_WATER, TERRAIN_CLIFF, TERRAIN_NOWALK)
    tt.timed_attacks.list[4].max_range = 9000
    tt.timed_attacks.list[4].min_range = 200
    tt.timed_attacks.list[4].mod = "mod_minotaur_daedalus"
    tt.timed_attacks.list[4].nodes_limit = 10
    tt.timed_attacks.list[4].node_offset = -5
    tt.timed_attacks.list[4].sound = "HeroMinotaurDaedalusMaze"
    tt.timed_attacks.list[4].vis_flags = bor(F_BLOCK, F_RANGED, F_TELEPORT)
    tt.timed_attacks.list[4].vis_bans = bor(F_BOSS, F_FLYING, F_CLIFF, F_WATER, F_STUN)

    tt = E:register_t("daedalus_enemy_decal", "decal_tween")
    tt.tween.remove = false
    tt.tween.props[1].keys = {{0, 255}, {0.5, 0}}

    tt = E:register_t("mod_minotaur_daedalus", "modifier")
    E:add_comps(tt, "render")
    tt.modifier.duration = nil
    tt.main_script.queue = scripts.mod_minotaur_daedalus.queue
    tt.main_script.update = scripts.mod_minotaur_daedalus.update
    tt.render.sprites[1].prefix = "stun"
    tt.render.sprites[1].size_names = {"small", "big", "big"}
    tt.render.sprites[1].name = "loop"
    tt.render.sprites[1].sort_y_offset = -1
    tt.render.sprites[1].hidden = true

    tt = E:register_t("decal_minotaur_daedalus", "decal_tween")
    tt.tween.props[1].keys = {{0, 0}, {0.5, 255}, {1, 0}}
    tt.render.sprites[1].name = "minotaur_decal_"
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].z = Z_DECALS

    tt = E:register_t("mod_minotaur_stun", "mod_shock_and_awe")
    tt.modifier.duration = nil

    tt = E:register_t("mod_minotaur_dust", "modifier")
    E:add_comps(tt, "render")
    tt.modifier.use_mod_offset = false
    tt.modifier.duration = 999
    tt.main_script.update = scripts.mod_track_target.update
    tt.render.sprites[1].name = "fx_minotaur_dust"
    tt.render.sprites[1].loop = true

    tt = E:register_t("ps_minotaur_bullrush")
    E:add_comps(tt, "pos", "particle_system")
    tt.particle_system.alphas = {0, 255, 255, 0}
    tt.particle_system.animated = false
    tt.particle_system.emission_rate = 30
    tt.particle_system.emit_area_spread = vec_2(4, 4)
    tt.particle_system.emit_rotation_spread = math.pi
    tt.particle_system.emit_speed = {15, 30}
    tt.particle_system.emit_spread = math.pi
    tt.particle_system.name = "minotaur_particle1"
    tt.particle_system.particle_lifetime = {fts(8), fts(12)}
    tt.particle_system.scale_var = {0.8, 1.2}
    tt.particle_system.scales_x = {0.5, 1.5}
    tt.particle_system.scales_y = {0.5, 1.5}

    tt = E:register_t("mod_minotaur_roaroffury", "modifier")
    E:add_comps(tt, "render", "tween")
    tt.render.sprites[1].name = "minotaur_towerBuff_base_0001"
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].anchor.y = 0.19166666666666668
    tt.render.sprites[1].sort_y_offset = -1
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].name = "decal_minotaur_roaroffury_horns"
    tt.render.sprites[2].anchor.y = 0.19166666666666668
    tt.render.sprites[2].sort_y_offset = -1
    tt.main_script.update = scripts.mod_priest_consecrate.update
    tt.modifier.duration = 4
    tt.extra_damage = nil
    tt.tween.disabled = true
    tt.tween.remove = false
    tt.tween.props[1].keys = {{0, 0}, {0.5, 255}}
    tt.tween.props[2] = E:clone_c("tween_prop")
    tt.tween.props[2].keys = {{0, 0}, {0.5, 255}}
    tt.tween.props[2].sprite_id = 2
    tt.tween.props[3] = E:clone_c("tween_prop")
    tt.tween.props[3].sprite_id = 1
    tt.tween.props[3].loop = true
    tt.tween.props[3].name = "scale"
    tt.tween.props[3].keys = {{0, vec_2(1, 1)}, {0.5, vec_2(0.9, 0.9)}, {1, vec_2(1, 1)}}

    tt = E:register_t("fx_minotaur_roarofury_scream", "fx")
    tt.render.sprites[1].name = "fx_minotaur_roarofury_scream"

    tt = E:register_t("decal_minotaur_bloodaxe", "decal_tween")
    tt.tween.props[1].keys = {{fts(50), 255}, {fts(60), 0}}
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].name = "minotaur_axeDecal"

    tt = E:register_t("hero_monkey_god", "hero")
    E:add_comps(tt, "melee", "timed_attacks")
    image_y = 148
    anchor_y = 28 / image_y
    tt.hero.level_stats.hp_max = {220, 240, 260, 280, 300, 320, 340, 360, 380, 400}
    tt.hero.level_stats.armor = {0.18, 0.21, 0.24, 0.27, 0.3, 0.33, 0.36, 0.39, 0.42, 0.45}
    tt.hero.level_stats.damage_min = {8, 10, 11, 13, 14, 15, 17, 18, 20, 21}
    tt.hero.level_stats.damage_max = {16, 18, 21, 23, 26, 29, 31, 34, 36, 39}
    tt.hero.skills.spinningpole = E:clone_c("hero_skill")
    tt.hero.skills.spinningpole.xp_gain_factor = 28
    tt.hero.skills.spinningpole.loops = {2, 3, 4}
    tt.hero.skills.spinningpole.damage = {18, 25, 30}
    tt.hero.skills.spinningpole.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.tetsubostorm = E:clone_c("hero_skill")
    tt.hero.skills.tetsubostorm.damage = {45, 80, 120}
    tt.hero.skills.tetsubostorm.xp_gain_factor = 60
    tt.hero.skills.tetsubostorm.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.monkeypalm = E:clone_c("hero_skill")
    tt.hero.skills.monkeypalm.stun_duration = {1, 2, 3}
    tt.hero.skills.monkeypalm.silence_duration = {5, 10, 15}
    tt.hero.skills.monkeypalm.damage_min = {10, 20, 30}
    tt.hero.skills.monkeypalm.damage_max = {20, 40, 60}
    tt.hero.skills.monkeypalm.xp_gain_factor = 60
    tt.hero.skills.monkeypalm.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [9] = 3
    }
    tt.hero.skills.angrygod = E:clone_c("hero_skill")
    tt.hero.skills.angrygod.received_damage_factor = {1.25, 1.45, 1.65}
    tt.hero.skills.angrygod.xp_gain_factor = 120
    tt.hero.skills.angrygod.xp_level_steps = {
        [4] = 1,
        [7] = 2,
        [10] = 3
    }
    tt.health.armor = nil
    tt.health.dead_lifetime = 15
    tt.health.hp_max = nil
    tt.health_bar.offset = vec_2(0, 47)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_monkey_god.level_up
    tt.hero.tombstone_show_time = fts(30)
    tt.idle_flip.cooldown = 2
    tt.info.fn = scripts.hero_basic.get_info
    tt.info.hero_portrait = "kr2_hero_portraits_0020"
    tt.info.portrait = IS_PHONE and "portraits_hero_0024" or "kr2_info_portraits_heroes_0024"
    tt.info.i18n_key = "HERO_MONKEY_GOD"
    tt.main_script.insert = scripts.hero_monkey_god.insert
    tt.main_script.update = scripts.hero_monkey_god.update
    tt.motion.max_speed = 108
    tt.nav_grid.valid_terrains = bor(TERRAIN_LAND, TERRAIN_WATER, TERRAIN_SHALLOW, TERRAIN_NOWALK)
    tt.regen.cooldown = 1
    tt.regen.health = nil
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].prefix = "hero_monkey_god"
    tt.render.sprites[1].angles = {}
    tt.render.sprites[1].angles.walk = {"running"}
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].name = "hero_monkeyGod_shadow"
    tt.render.sprites[2].hidden = true
    tt.render.sprites[2].offset = vec_2(0, ady(74))
    tt.soldier.melee_slot_offset = vec_2(20, 0)
    tt.sound_events.change_rally_point = "HeroMonkeyGodTaunt"
    tt.sound_events.death = "HeroMonkeyGodDeath"
    tt.sound_events.respawn = "HeroMonkeyGodTauntIntro"
    tt.sound_events.insert = "HeroMonkeyGodTauntIntro"
    tt.sound_events.hero_room_select = "HeroMonkeyGodTauntSelect"
    tt.sound_events.cloud_start = "HeroMonkeyGodCloudJump"
    tt.sound_events.cloud_loop = "HeroMonkeyGodCloudWalkLoop"
    tt.sound_events.cloud_end = "HeroMonkeyGodCloudDrop"
    tt.sound_events.cloud_end_args = {
        delay = fts(14)
    }
    tt.unit.hit_offset = vec_2(0, 11)
    tt.unit.marker_offset = vec_2(0, -2)
    tt.unit.mod_offset = vec_2(0, 14)
    tt.cloudwalk = {}
    tt.cloudwalk.min_distance = 300
    tt.cloudwalk.extra_speed = 108
    tt.cloudwalk.animations = {"cloud_start", "cloud_loop", "cloud_end"}
    tt.cloudwalk.hit_offset = vec_2(0, 60)
    tt.cloudwalk.mod_offset = vec_2(0, 64)
    tt.melee.attacks[1] = E:clone_c("melee_attack")
    tt.melee.attacks[1].hit_time = fts(8)
    tt.melee.attacks[1].shared_cooldown = true
    tt.melee.attacks[1].sound = "HeroMonkeyGodAttack1"
    tt.melee.attacks[1].vis_bans = bor(F_FLYING, F_CLIFF)
    tt.melee.attacks[1].vis_flags = F_BLOCK
    tt.melee.attacks[1].xp_gain_factor = 3.5
    tt.melee.attacks[2] = table.deepclone(tt.melee.attacks[1])
    tt.melee.attacks[2].animation = "attack2"
    tt.melee.attacks[2].chance = 0.5
    tt.melee.attacks[2].sound = "HeroMonkeyGodAttack2"
    tt.melee.attacks[3] = E:clone_c("area_attack")
    tt.melee.attacks[3].animations = {"pole_start", "pole_loop", "pole_end"}
    tt.melee.attacks[3].cooldown = 16
    tt.melee.attacks[3].damage_max = nil
    tt.melee.attacks[3].damage_min = nil
    tt.melee.attacks[3].damage_radius = 90
    tt.melee.attacks[3].damage_type = DAMAGE_PHYSICAL
    tt.melee.attacks[3].disabled = true
    tt.melee.attacks[3].fn_can = scripts.hero_monkey_god.can_spinningpole
    tt.melee.attacks[3].hit_time = fts(8)
    tt.melee.attacks[3].loopable = true
    tt.melee.attacks[3].loops = nil
    tt.melee.attacks[3].min_count = 2
    tt.melee.attacks[3].vis_bans = bor(F_FLYING, F_CLIFF)
    tt.melee.attacks[3].vis_flags = F_BLOCK
    tt.melee.attacks[3].xp_from_skill = "spinningpole"
    tt.melee.attacks[3].sound = "HeroMonkeyGodSpinningPoleLoop"
    tt.melee.attacks[3].sound_end = "HeroMonkeyGodSpinningPoleLoopEnd"
    tt.melee.attacks[4] = E:clone_c("melee_attack")
    tt.melee.attacks[4].animations = {"tetsubo_start", "tetsubo_loop", "tetsubo_end"}
    tt.melee.attacks[4].cooldown = 16
    tt.melee.attacks[4].damage_max = nil
    tt.melee.attacks[4].damage_min = nil
    tt.melee.attacks[4].disabled = true
    tt.melee.attacks[4].hit_times = {fts(1), fts(4), fts(9)}
    tt.melee.attacks[4].loopable = true
    tt.melee.attacks[4].loops = 1
    tt.melee.attacks[4].vis_bans = bor(F_FLYING, F_CLIFF)
    tt.melee.attacks[4].vis_flags = F_BLOCK
    tt.melee.attacks[4].xp_from_skill = "tetsubostorm"
    tt.melee.attacks[4].sound = "HeroMonkeyGodTetsuboStorm"
    tt.melee.attacks[5] = E:clone_c("melee_attack")
    tt.melee.attacks[5].animation = "palm"
    tt.melee.attacks[5].disabled = true
    tt.melee.attacks[5].damage_type = DAMAGE_MIXED
    tt.melee.attacks[5].damage_max = nil
    tt.melee.attacks[5].damage_min = nil
    tt.melee.attacks[5].mod = "mod_monkey_god_palm"
    tt.melee.attacks[5].vis_bans = bor(F_BOSS, F_STUN)
    tt.melee.attacks[5].vis_flags = F_BLOCK
    tt.melee.attacks[5].xp_from_skill = "monkeypalm"
    tt.melee.attacks[5].sound = "HeroMonkeyGodMonkeyPalm"
    tt.melee.attacks[5].hit_time = fts(12)
    tt.melee.attacks[5].cooldown = 11.2
    tt.melee.attacks[5].side_effect = function(this, store, attack, target)
        this.timed_attacks.list[1].ts = this.timed_attacks.list[1].ts - 4
    end
    tt.melee.range = 64
    tt.melee.cooldown = 1
    tt.timed_attacks.list[1] = E:clone_c("custom_attack")
    tt.timed_attacks.list[1].animations = {"angry_start", "angry_loop", "angry_end"}
    tt.timed_attacks.list[1].cooldown = 36
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].loops = 8
    tt.timed_attacks.list[1].min_count = 5
    tt.timed_attacks.list[1].vis_flags = F_RANGED
    tt.timed_attacks.list[1].vis_bans = 0
    tt.timed_attacks.list[1].min_range = 0
    tt.timed_attacks.list[1].max_range = 9999
    tt.timed_attacks.list[1].mod = "mod_monkey_god_angry"
    tt.timed_attacks.list[1].sound_start = "HeroMonkeyGodAngryGodScream"
    tt.timed_attacks.list[1].sound_loop = "HeroMonkeyGodAngryGodLoop"
    tt.vis.bans = bor(F_POISON)

    tt = E:register_t("aura_monkey_god_divinenature", "aura_beastmaster_regeneration")
    tt.hps.heal_min = 3
    tt.hps.heal_max = 3
    tt.hps.heal_every = fts(10)

    tt = E:register_t("mod_monkey_god_angry", "modifier")
    E:add_comps(tt, "render")
    tt.received_damage_factor = nil
    tt.inflicted_damage_factor = 1
    tt.modifier.duration = 2
    tt.modifier.resets_same = true
    tt.main_script.insert = scripts.mod_damage_factors.insert
    tt.main_script.remove = scripts.mod_damage_factors.remove
    tt.main_script.update = scripts.mod_track_target.update
    tt.render.sprites[1].name = "fx_monkey_god_angry"
    tt.render.sprites[1].loop = true
    tt.render.sprites[1].size_scales = {vec_1(1), vec_1(1.2), vec_1(1.4)}
    tt.render.sprites[1].draw_order = 2
    tt.render.sprites[1].anchor.y = 0.46551724137931033

    tt = E:register_t("mod_monkey_god_fire", "modifier")
    E:add_comps(tt, "dps")
    tt.modifier.level = 1
    tt.modifier.duration = 2
    tt.modifier.vis_flags = F_BURN
    tt.dps.damage_min = 1
    tt.dps.damage_max = 1
    tt.dps.damage_inc = 3
    tt.dps.damage_every = 0.5
    tt.dps.damage_type = DAMAGE_TRUE
    tt.main_script.insert = scripts.mod_dps.insert
    tt.main_script.update = scripts.mod_dps.update

    tt = E:register_t("mod_monkey_god_palm", "modifier")
    E:add_comps(tt, "render")
    tt.main_script.insert = scripts.mod_monkey_god_palm.insert
    tt.main_script.remove = scripts.mod_monkey_god_palm.remove
    tt.main_script.update = scripts.mod_track_target.update
    tt.stun_duration = nil
    tt.stun_mod = "mod_shock_and_awe"
    tt.modifier.duration = nil
    tt.modifier.bans = {"mod_shaman_armor", "mod_shaman_magic_armor", "mod_shaman_priest_heal", "mod_silence_totem"}
    tt.modifier.remove_banned = true
    tt.modifier.use_mod_offset = false
    tt.render.sprites[1].name = "fx_monkey_god_palm"
    tt.render.sprites[1].loop = true
    tt.render.sprites[1].draw_order = 2
    tt.custom_offsets = {}
    tt.custom_offsets.default = vec_2(0, 18)
    tt.custom_offsets.enemy_munra = vec_2(0, 18)
    tt.custom_offsets.enemy_shaman_priest = vec_2(0, 16)
    tt.custom_offsets.enemy_shaman_magic = vec_2(0, 18)
    tt.custom_offsets.enemy_shaman_shield = vec_2(0, 16)
    tt.custom_offsets.enemy_shaman_necro = vec_2(0, 18)
    tt.custom_offsets.enemy_nightscale = vec_2(0, 22)
    tt.custom_offsets.enemy_darter = vec_2(0, 16)
    tt.custom_offsets.enemy_savant = vec_2(0, 18)
    tt.custom_offsets.enemy_bluegale = vec_2(0, 22)
    tt.custom_offsets.enemy_blacksurge = vec_2(0, 18)
    tt.custom_offsets.enemy_phantom_warrior = vec_2(0, 18)

    tt = E:register_t("ps_monkey_god_trail")
    E:add_comps(tt, "pos", "particle_system")
    tt.particle_system.alphas = {150, 0}
    tt.particle_system.emission_rate = 20
    tt.particle_system.emit_area_spread = vec_2(15, 10)
    tt.particle_system.emit_rotation_spread = math.pi
    tt.particle_system.names = {"hero_monkeyGod_cloudParticle_0001", "hero_monkeyGod_cloudParticle_0003"}
    tt.particle_system.particle_lifetime = {0.5, 0.75}
    tt.particle_system.scale_var = {0.9, 1.1}
    tt.particle_system.scales_x = {1, 0.2}
    tt.particle_system.scales_y = {1, 0.2}
    tt.particle_system.sort_y_offset = -45
    tt.particle_system.spin = {-math.pi / 2, math.pi / 2}

    tt = E:register_t("hero_elves_archer", "hero")
    E:add_comps(tt, "melee", "ranged", "dodge")
    image_y = 68
    anchor_y = 16 / image_y
    tt.hero.level_stats.hp_max = {220, 240, 260, 280, 300, 320, 340, 360, 380, 400}
    tt.hero.level_stats.armor = {0.19, 0.23, 0.27, 0.31, 0.35, 0.39, 0.43, 0.47, 0.51, 0.55}
    tt.hero.level_stats.melee_damage_min = {10, 10, 11, 12, 13, 14, 14, 15, 16, 17}
    tt.hero.level_stats.melee_damage_max = {13, 14, 16, 17, 18, 19, 20, 22, 23, 25}
    tt.hero.level_stats.ranged_damage_min = {10, 10, 11, 12, 13, 14, 14, 15, 16, 17}
    tt.hero.level_stats.ranged_damage_max = {13, 14, 16, 17, 18, 19, 20, 22, 23, 25}
    tt.hero.skills.double_strike = E:clone_c("hero_skill")
    tt.hero.skills.double_strike.damage_max = {100, 150, 200}
    tt.hero.skills.double_strike.damage_min = {50, 75, 100}
    tt.hero.skills.double_strike.xp_gain_factor = 50
    tt.hero.skills.double_strike.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [9] = 3
    }
    tt.hero.skills.multishot = E:clone_c("hero_skill")
    tt.hero.skills.multishot.loops = {5, 7, 10}
    tt.hero.skills.multishot.xp_gain_factor = 30
    tt.hero.skills.multishot.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.nimble_fencer = E:clone_c("hero_skill")
    tt.hero.skills.nimble_fencer.chance = {0.4, 0.5, 0.6}
    tt.hero.skills.nimble_fencer.xp_gain = {25, 25, 25}
    tt.hero.skills.nimble_fencer.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
    }
    tt.hero.skills.porcupine = E:clone_c("hero_skill")
    tt.hero.skills.porcupine.damage_inc = {2, 4, 6, 8}
    tt.hero.skills.porcupine.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.hero.skills.ultimate = E:clone_c("hero_skill")
    tt.hero.skills.ultimate.controller_name = "hero_elves_archer_ultimate"
    tt.hero.skills.ultimate.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.hero.skills.ultimate.xp_gain_factor = 32
    tt.health.armor = nil
    tt.health.dead_lifetime = 15
    tt.health.hp_max = nil
    tt.health_bar.offset = vec_2(0, 39)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_elves_archer.level_up
    tt.hero.tombstone_show_time = fts(60)
    tt.idle_flip.chance = 0.4
    tt.idle_flip.cooldown = 1
    tt.info.hero_portrait = "kr3_hero_portraits_0001"
    tt.info.portrait = (IS_PHONE and "portraits_hero" or "kr3_info_portraits_heroes") .. "_0001"
    tt.info.ultimate_icon = "0001"
    tt.info.ultimate_pointer_style = "area"
    tt.info.i18n_key = "HERO_ELVES_ARCHER"
    tt.main_script.insert = scripts.hero_elves_archer.insert
    tt.main_script.update = scripts.hero_elves_archer.update
    tt.motion.max_speed = 110
    tt.regen.cooldown = 1
    tt.render.sprites[1] = E:clone_c("sprite")
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].angles = {}
    tt.render.sprites[1].angles.walk = {"walk"}
    tt.render.sprites[1].angles.ranged = {"shoot"}
    tt.render.sprites[1].name = "idle"
    tt.render.sprites[1].prefix = "hero_elves_archer"
    tt.sound_events.change_rally_point = "ElvesHeroEridanTaunt"
    tt.sound_events.death = "ElvesHeroEridanDeath"
    tt.sound_events.respawn = "ElvesHeroEridanTauntIntro"
    tt.sound_events.insert = "ElvesHeroEridanTauntIntro"
    tt.sound_events.hero_room_select = "ElvesHeroEridanTauntSelect"
    tt.soldier.melee_slot_offset.x = 5
    tt.unit.hit_offset = vec_2(0, 12)
    tt.unit.marker_offset = vec_2(0, -1)
    tt.unit.mod_offset = vec_2(0, 19.9)
    tt.dodge.disabled = true
    tt.dodge.counter_attack = E:clone_c("melee_attack")
    tt.dodge.counter_attack.animation = "nimble_fencer"
    tt.dodge.counter_attack.cooldown = 1
    tt.dodge.counter_attack.damage_max = 40
    tt.dodge.counter_attack.damage_min = 20
    tt.dodge.counter_attack.hit_time = fts(8)
    tt.dodge.counter_attack.sound = "ElvesHeroEridanNimbleFencing"
    tt.melee.attacks[1] = E:clone_c("melee_attack")
    tt.melee.attacks[1].damage_max = nil
    tt.melee.attacks[1].damage_min = nil
    tt.melee.attacks[1].hit_time = fts(7)
    tt.melee.attacks[1].shared_cooldown = true
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].vis_bans = bor(F_CLIFF)
    tt.melee.attacks[1].vis_flags = F_BLOCK
    tt.melee.attacks[1].xp_gain_factor = 3
    tt.melee.attacks[2] = E:clone_c("melee_attack")
    tt.melee.attacks[2].animation = "double_strike"
    tt.melee.attacks[2].cooldown = 11
    tt.melee.attacks[2].damage_max = nil
    tt.melee.attacks[2].damage_min = nil
    tt.melee.attacks[2].damage_type = bor(DAMAGE_RUDE, DAMAGE_FX_EXPLODE, DAMAGE_NO_DODGE)
    tt.melee.attacks[2].never_interrupt = true
    tt.melee.attacks[2].disabled = true
    tt.melee.attacks[2].hit_time = fts(14)
    tt.melee.attacks[2].vis_bans = bor(F_CLIFF)
    tt.melee.attacks[2].vis_flags = F_BLOCK
    tt.melee.attacks[2].xp_from_skill = "double_strike"
    tt.melee.attacks[2].sound = "ElvesHeroEridanDoubleStrike"
    tt.melee.cooldown = 1
    tt.melee.range = 67.5
    tt.ranged.attacks[1] = E:clone_c("bullet_attack")
    tt.ranged.attacks[1].animation = "ranged"
    tt.ranged.attacks[1].bullet = "arrow_hero_elves_archer"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(9, 28)}
    tt.ranged.attacks[1].cooldown = 0.8
    tt.ranged.attacks[1].max_range = 215
    tt.ranged.attacks[1].min_range = 67.5
    tt.ranged.attacks[1].shoot_time = fts(7)
    tt.ranged.attacks[1].vis_bans = 0
    tt.ranged.attacks[2] = E:clone_c("bullet_attack")
    tt.ranged.attacks[2].animations = {"shoot_start", "shoot_loop", "shoot_end"}
    tt.ranged.attacks[2].bullet = "arrow_hero_elves_archer"
    tt.ranged.attacks[2].bullet_start_offset = {vec_2(9, 28)}
    tt.ranged.attacks[2].cooldown = 9
    tt.ranged.attacks[2].disabled = true
    tt.ranged.attacks[2].max_loops = nil
    tt.ranged.attacks[2].max_range = 215
    tt.ranged.attacks[2].min_range = 60
    tt.ranged.attacks[2].shoot_times = {fts(3)}
    tt.ranged.attacks[2].xp_from_skill = "multishot"
    tt.ultimate = {}
    tt.ultimate.ts = 0
    tt.ultimate.cooldown = 32
    tt.ultimate.disabled = true

    tt = E:register_t("aura_elves_archer_regen", "aura")
    tt.aura.duration = -1
    tt.main_script.update = scripts.aura_hero_regen.update

    tt = E:register_t("arrow_hero_elves_archer", "arrow")
    tt.render.sprites[1].name = "archer_hero_proy_0001-f"
    tt.bullet.miss_decal = "archer_hero_proy_0002-f"
    tt.bullet.flight_time = fts(15)
    tt.bullet.pop = {"pop_archer"}
    tt.bullet.hide_radius = 1
    tt.bullet.xp_gain_factor = 3

    tt = E:register_t("hero_elves_archer_ultimate")
    E:add_comps(tt, "pos", "main_script")
    tt.can_fire_fn = scripts.hero_elves_archer_ultimate.can_fire_fn
    tt.cooldown = 40
    tt.bullet = "arrow_hero_elves_archer_ultimate"
    tt.spread = {6, 8, 10, 12}
    tt.damage = {20, 31, 42, 60}
    tt.main_script.update = scripts.hero_elves_archer_ultimate.update

    tt = E:register_t("mod_hero_elves_archer_slow", "mod_slow")
    tt.modifier.duration = 0.1
    tt.slow.factor = 0.5

    tt = E:register_t("arrow_hero_elves_archer_ultimate", "bullet")
    tt.main_script.update = scripts.arrow_hero_elves_archer_ultimate.update
    tt.bullet.damage_radius = 35
    tt.bullet.damage_flags = F_AREA
    tt.bullet.damage_bans = F_FRIEND
    tt.bullet.damage_type = DAMAGE_TRUE
    tt.bullet.arrive_decal = "decal_hero_elves_archer_ultimate"
    tt.bullet.max_speed = 1500
    tt.bullet.mod = "mod_hero_elves_archer_slow"
    tt.render.sprites[1].name = "archer_hero_arrows_proy-f"
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].anchor.x = 0.9629629629629629
    tt.sound_events.insert = "ArrowSound"

    tt = E:register_t("decal_hero_elves_archer_ultimate", "decal_tween")
    AC(tt, "main_script")
    tt.main_script.insert = scripts.decal_hero_elves_archer_ultimate.insert
    tt.tween.props[1].keys = {{0, 255}, {1, 255}, {4, 0}}
    tt.tween.props[2] = table.deepclone(tt.tween.props[1])
    tt.tween.props[2].sprite_id = 2
    tt.render.sprites[1].name = "decal_hero_elves_archer_ultimate"
    tt.render.sprites[1].animated = true
    tt.render.sprites[1].loop = false
    tt.render.sprites[1].z = Z_DECALS
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].name = "fx_hero_elves_archer_ultimate_smoke"
    tt.render.sprites[2].loop = false
    tt.render.sprites[2].z = Z_OBJECTS

    tt = E:register_t("hero_regson", "hero")
    E:add_comps(tt, "melee", "timed_attacks")
    tt.hero.level_stats.armor = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    tt.hero.level_stats.hp_max = {330, 352, 374, 396, 418, 440, 462, 484, 504, 528}
    tt.hero.level_stats.melee_damage_max = {9, 10, 11, 12, 13, 14, 15, 16, 17, 18}
    tt.hero.level_stats.melee_damage_min = {6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
    tt.hero.skills.blade = E:clone_c("hero_skill")
    tt.hero.skills.blade.damage = {60, 100, 140}
    tt.hero.skills.blade.instakill_chance = {0.015, 0.03, 0.045}
    tt.hero.skills.blade.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.blade.xp_gain = {90, 180, 270}
    tt.hero.skills.heal = E:clone_c("hero_skill")
    tt.hero.skills.heal.heal_factor = {0.1, 0.2, 0.3}
    tt.hero.skills.heal.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.path = E:clone_c("hero_skill")
    tt.hero.skills.path.extra_hp = {40, 80, 120}
    tt.hero.skills.path.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.slash = E:clone_c("hero_skill")
    tt.hero.skills.slash.damage_max = {60, 130, 225}
    tt.hero.skills.slash.damage_min = {30, 70, 120}
    tt.hero.skills.slash.targets = {3, 4, 5}
    tt.hero.skills.slash.xp_gain = {28, 84, 168}
    tt.hero.skills.slash.loops = {3, 4, 5}
    tt.hero.skills.slash.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.ultimate = E:clone_c("hero_skill")
    tt.hero.skills.ultimate.controller_name = "hero_regson_ultimate"
    tt.hero.skills.ultimate.cooldown = {160, 80, 56, 40}
    tt.hero.skills.ultimate.damage_boss = {500, 1000, 1500, 2000}
    tt.hero.skills.ultimate.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.hero.skills.ultimate.xp_gain_factor = 84
    tt.health.dead_lifetime = 15
    tt.health_bar.offset = vec_2(0, 39)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_regson.level_up
    tt.hero.tombstone_show_time = fts(90)
    tt.idle_flip.animations = {"idle"}
    tt.info.i18n_key = "HERO_ELVES_ELDRITCH"
    tt.info.hero_portrait = "kr3_hero_portraits_0004"
    tt.info.portrait = (IS_PHONE and "portraits_hero" or "kr3_info_portraits_heroes") .. "_0004"
    tt.info.ultimate_icon = "0004"
    tt.main_script.insert = scripts.hero_regson.insert
    tt.main_script.update = scripts.hero_regson.update
    tt.motion.max_speed = 3.8 * FPS
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = 0.3
    tt.render.sprites[1].prefix = "hero_regson"
    tt.render.sprites[1].angles = {}
    tt.render.sprites[1].angles.walk = {"run"}
    tt.render.sprites[1].name = "idle"
    tt.soldier.melee_slot_offset = vec_2(2, 0)
    tt.sound_events.change_rally_point = "ElvesHeroEldritchTaunt"
    tt.sound_events.death = "ElvesHeroEldritchDeath"
    tt.sound_events.respawn = "ElvesHeroEldritchTauntIntro"
    tt.sound_events.insert = "ElvesHeroEldritchTauntIntro"
    tt.sound_events.hero_room_select = "ElvesHeroEldritchTauntSelect"
    tt.unit.hit_offset = vec_2(0, 16)
    tt.unit.marker_offset = vec_2(0, 0)
    tt.unit.mod_offset = vec_2(0, 14)
    tt.melee.attacks[1].animation = "attack3"
    tt.melee.attacks[1].damage_type = DAMAGE_TRUE
    tt.melee.attacks[1].hit_time = fts(10)
    tt.melee.attacks[1].shared_cooldown = true
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].xp_gain_factor = 2.8
    tt.melee.attacks[2] = table.deepclone(tt.melee.attacks[1])
    tt.melee.attacks[2].animation = "attack2"
    tt.melee.attacks[2].chance = 0.5
    tt.melee.attacks[3] = table.deepclone(tt.melee.attacks[1])
    tt.melee.attacks[3].animation = "attack1"
    tt.melee.attacks[3].chance = 0
    tt.melee.attacks[4] = E:clone_c("melee_attack")
    tt.melee.attacks[4].animations = {nil, "berserk_attack"}
    tt.melee.attacks[4].damage_type = DAMAGE_TRUE
    tt.melee.attacks[4].disabled = true
    tt.melee.attacks[4].hit_times = {fts(10), fts(24)}
    tt.melee.attacks[4].interrupt_on_dead_target = true
    tt.melee.attacks[4].loops = 1
    tt.melee.attacks[4].shared_cooldown = true
    tt.melee.attacks[4].sound_hit = "ElvesHeroEldritchBlade"
    tt.melee.attacks[4].xp_from_skill = "blade"
    tt.melee.attacks[5] = table.deepclone(tt.melee.attacks[4])
    tt.melee.attacks[5].chance = nil
    tt.melee.attacks[5].disabled = true
    tt.melee.attacks[5].instakill = true
    tt.melee.attacks[5].vis_bans = bor(F_BOSS)
    tt.melee.attacks[5].vis_flags = bor(F_INSTAKILL)
    tt.melee.attacks[6] = E:clone_c("area_attack")
    tt.melee.attacks[6].animation = "whirlwind"
    tt.melee.attacks[6].cooldown = 12
    tt.melee.attacks[6].count = 3
    tt.melee.attacks[6].damage_radius = 100
    tt.melee.attacks[6].damage_type = DAMAGE_NONE
    tt.melee.attacks[6].disabled = true
    tt.melee.attacks[6].hit_time = fts(5)
    tt.melee.attacks[6].mod = "mod_regson_slash"
    tt.melee.attacks[6].sound = "ElvesHeroEldritchSlash"
    tt.melee.attacks[6].xp_from_skill = "slash"
    tt.melee.cooldown = 0.6
    tt.melee.range = 65
    tt.timed_attacks.list[1] = E:clone_c("custom_attack")
    tt.timed_attacks.list[1].animation = "whirlwind_mirage"
    tt.timed_attacks.list[1].cooldown = 36
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].fade_time = fts(4)
    tt.timed_attacks.list[1].fade_start_end_time = fts(7)
    tt.timed_attacks.list[1].sound = "ElvesHeroEldritchSlash"
    tt.timed_attacks.list[1].loops = 3
    tt.timed_attacks.list[1].min_count = 3
    tt.timed_attacks.list[1].range = 160
    tt.timed_attacks.list[1].damage_radius = 100
    tt.timed_attacks.list[1].vis_flags = bor(F_RANGED, F_AREA)
    tt.timed_attacks.list[1].vis_bans = F_FLYING
    tt.timed_attacks.list[1].mod = "mod_regson_slash"
    tt.ultimate = {
        ts = 0,
        cooldown = 200,
        disabled = true
    }
    tt.path_extra = 0

    tt = E:register_t("aura_regson_blade", "aura")
    tt.aura.duration = -1
    tt.main_script.update = scripts.aura_regson_blade.update
    tt.blade_cooldown = 25
    tt.blade_duration = 5 + fts(17)

    tt = E:register_t("aura_regson_heal", "aura")
    tt.aura.duration = -1
    tt.aura.radius = 150
    tt.aura.cycle_time = fts(12)
    tt.aura.vis_bans = bor(F_BOSS)
    tt.aura.vis_flags = bor(F_RANGED)
    tt.main_script.update = scripts.aura_regson_heal.update

    tt = E:register_t("mod_regson_heal", "modifier")
    tt.modifier.duration = fts(40)
    tt.main_script.update = scripts.mod_regson_heal.update

    tt = E:register_t("mod_regson_slash", "modifier")
    E:add_comps(tt, "render")
    tt.damage_type = DAMAGE_PHYSICAL
    tt.damage_max = nil
    tt.damage_min = nil
    tt.delay_per_idx = 0.13
    tt.hit_time = fts(4)
    tt.main_script.update = scripts.mod_regson_slash.update
    tt.modifier.duration = fts(11)
    tt.render.sprites[1].name = "fx_regson_slash"
    tt.render.sprites[1].sort_y_offset = -2
    tt.render.sprites[1].loop = false
    tt.modifier.allows_duplicates = true

    tt = E:register_t("hero_regson_ultimate")
    E:add_comps(tt, "pos", "main_script", "sound_events", "render")
    -- tt.can_fire_fn = scripts.hero_regson_ultimate.can_fire_fn
    tt.main_script.update = scripts.hero_regson_ultimate.update
    tt.render.sprites[1].name = "fx_regson_ultimate"
    tt.render.sprites[1].loop = false
    tt.render.sprites[1].z = Z_EFFECTS
    tt.sound_events.insert = "ElvesHeroEldritchVindicator"
    tt.range = 50
    tt.vis_flags = F_RANGED
    tt.vis_bans = 0
    tt.hit_time = fts(20)

    tt = RT("hero_lynn", "hero")
    AC(tt, "melee", "timed_attacks")
    tt.hero.level_stats.armor = {0.13, 0.16, 0.19, 0.22, 0.25, 0.28, 0.31, 0.34, 0.37, 0.4}
    tt.hero.level_stats.magic_armor = {0.13, 0.16, 0.19, 0.22, 0.25, 0.28, 0.31, 0.34, 0.37, 0.4}
    tt.hero.level_stats.hp_max = {350, 370, 390, 410, 430, 450, 470, 490, 510, 530}
    tt.hero.level_stats.melee_damage_max = {14, 17, 19, 22, 24, 26, 29, 31, 34, 36}
    tt.hero.level_stats.melee_damage_min = {10, 11, 13, 14, 16, 18, 19, 21, 22, 24}
    tt.hero.skills.hexfury = E:clone_c("hero_skill")
    tt.hero.skills.hexfury.extra_damage = 20
    tt.hero.skills.hexfury.loops = {1, 2, 3, 4}
    tt.hero.skills.hexfury.xp_gain = {30, 60, 90, 120}
    tt.hero.skills.hexfury.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3,
        [10] = 4
    }
    tt.hero.skills.despair = E:clone_c("hero_skill")
    tt.hero.skills.despair.duration = {4, 6, 8}
    tt.hero.skills.despair.damage_factor = {0.9, 0.8, 0.7}
    tt.hero.skills.despair.speed_factor = {0.7, 0.6, 0.5}
    tt.hero.skills.despair.max_count = {5, 7, 9}
    tt.hero.skills.despair.xp_gain = {25, 50, 100}
    tt.hero.skills.despair.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [9] = 3
    }
    tt.hero.skills.weakening = E:clone_c("hero_skill")
    tt.hero.skills.weakening.duration = {4, 6, 8}
    tt.hero.skills.weakening.armor_reduction = {0.1, 0.2, 0.3}
    tt.hero.skills.weakening.magic_armor_reduction = {0.5, 0.7, 0.9}
    tt.hero.skills.weakening.max_count = {5, 7, 9}
    tt.hero.skills.weakening.xp_gain = {25, 50, 100}
    tt.hero.skills.weakening.xp_level_steps = {
        [4] = 1,
        [7] = 2,
        [10] = 3
    }
    tt.hero.skills.charm_of_unluck = E:clone_c("hero_skill")
    tt.hero.skills.charm_of_unluck.chance = {0.15, 0.3, 0.45}
    tt.hero.skills.charm_of_unluck.xp_gain = {10, 10, 10}
    tt.hero.skills.charm_of_unluck.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.ultimate = E:clone_c("hero_skill")
    tt.hero.skills.ultimate.controller_name = "hero_lynn_ultimate"
    tt.hero.skills.ultimate.damage = {24, 34, 52, 70}
    tt.hero.skills.ultimate.explode_damage = {80, 160, 200, 225}
    tt.hero.skills.ultimate.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.hero.skills.ultimate.xp_gain_factor = 24
    tt.charm_of_unluck = 0.15
    tt.health.dead_lifetime = 15
    tt.health.on_damage = scripts.hero_lynn.on_damage
    tt.health_bar.offset = vec_2(0, 43)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_lynn.level_up
    tt.hero.tombstone_show_time = fts(90)
    tt.info.fn = scripts.hero_basic.get_info
    tt.info.hero_portrait = "kr3_hero_portraits_0014"
    tt.info.i18n_key = "HERO_ELVES_LYNN"
    tt.info.portrait = (IS_PHONE and "portraits_hero" or "kr3_info_portraits_heroes") .. "_0014"
    tt.info.ultimate_icon = "0013"
    tt.main_script.insert = scripts.hero_basic.insert
    tt.main_script.update = scripts.hero_lynn.update
    tt.motion.max_speed = 3 * FPS
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = 0.12
    tt.render.sprites[1].angles = {}
    tt.render.sprites[1].angles.walk = {"walk"}
    tt.render.sprites[1].name = "idle"
    tt.render.sprites[1].prefix = "hero_lynn"
    tt.soldier.melee_slot_offset = vec_2(0, -1)
    tt.sound_events.change_rally_point = "ElvesHeroLynnTaunt"
    tt.sound_events.death = "ElvesHeroLynnDeath"
    tt.sound_events.hero_room_select = "ElvesHeroLynnTauntSelect"
    tt.sound_events.insert = "ElvesHeroLynnTauntIntro"
    tt.sound_events.respawn = "ElvesHeroLynnTauntIntro"
    tt.unit.hit_offset = vec_2(0, 16)
    tt.unit.mod_offset = vec_2(0, 15)
    tt.unit.marker_offset = vec_2(0, 0)
    tt.melee.cooldown = 1
    tt.melee.attacks[1].animation = "attack"
    tt.melee.attacks[1].hit_time = fts(14)
    tt.melee.attacks[1].mod = nil
    tt.melee.attacks[1].shared_cooldown = true
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].xp_gain_factor = 2.7
    tt.melee.attacks[2] = table.deepclone(tt.melee.attacks[1])
    tt.melee.attacks[2].animation = "attack2"
    tt.melee.attacks[2].chance = 0.5
    tt.melee.attacks[3] = CC("melee_attack")
    tt.melee.attacks[3].animations = {nil, "hexfury"}
    tt.melee.attacks[3].cooldown = 16
    tt.melee.attacks[3].disabled = true
    tt.melee.attacks[3].damage_max = 60
    tt.melee.attacks[3].damage_min = 60
    tt.melee.attacks[3].damage_type = DAMAGE_TRUE
    tt.melee.attacks[3].fn_damage = scripts.hero_lynn.fn_damage_melee
    tt.melee.attacks[3].hit_times = {fts(13), fts(21)}
    tt.melee.attacks[3].interrupt_loop_on_dead_target = true
    tt.melee.attacks[3].loops = nil
    tt.melee.attacks[3].mod = nil
    tt.melee.attacks[3].sound_loop = "ElvesHeroLynnHexfury"
    tt.melee.attacks[3].sound_loop_args = {
        delay = fts(3)
    }
    tt.melee.attacks[3].xp_from_skill = "hexfury"
    tt.melee.attacks[3].xp_gain_factor = 5
    tt.melee.range = 60
    tt.timed_attacks.list[1] = CC("mod_attack")
    tt.timed_attacks.list[1].animation = "curseOfDespair"
    tt.timed_attacks.list[1].cooldown = 18
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].hit_time = fts(21)
    tt.timed_attacks.list[1].max_count = 5
    tt.timed_attacks.list[1].min_count = 3
    tt.timed_attacks.list[1].mod = "mod_lynn_despair"
    tt.timed_attacks.list[1].range = 200
    tt.timed_attacks.list[1].sound = "ElvesHeroLynnCurseDespair"
    tt.timed_attacks.list[1].sound_args = {
        delay = fts(4)
    }
    tt.timed_attacks.list[1].vis_flags = bor(F_MOD, F_RANGED)
    tt.timed_attacks.list[2] = CC("mod_attack")
    tt.timed_attacks.list[2].animation = "weakeningCurse"
    tt.timed_attacks.list[2].cooldown = 14
    tt.timed_attacks.list[2].disabled = true
    tt.timed_attacks.list[2].hit_time = fts(21)
    tt.timed_attacks.list[2].max_count = 5
    tt.timed_attacks.list[2].mod = "mod_lynn_weakening"
    tt.timed_attacks.list[2].range = 200
    tt.timed_attacks.list[2].sound = "ElvesHeroLynnWeakening"
    tt.ultimate = {
        ts = 0,
        cooldown = 24,
        disabled = true
    }

    tt = RT("hero_lynn_ultimate")
    AC(tt, "pos", "main_script", "sound_events")
    tt.main_script.update = scripts.hero_lynn_ultimate.update
    tt.mod = "mod_lynn_ultimate"
    tt.range = 50
    tt.vis_flags = F_RANGED
    tt.vis_bans = 0
    tt.sound_events.insert = "ElvesHeroLynnFateSealed"

    tt = RT("mod_lynn_ultimate", "modifier")
    AC(tt, "dps", "render", "tween", "dps")
    tt.render.sprites[1].name = "mod_lynn_ultimate"
    tt.render.sprites[2] = CC("sprite")
    tt.render.sprites[2].name = "mod_lynn_ultimate_decal_loop"
    tt.render.sprites[2].z = Z_DECALS
    tt.render.sprites[3] = CC("sprite")
    tt.render.sprites[3].name = "mod_lynn_ultimate_over"
    tt.render.sprites[3].draw_order = 10
    tt.tween.props[1].keys = {{0, 0}, {0.3, 255}, {"this.modifier.duration-0.3", 255}, {"this.modifier.duration", 0}}
    tt.tween.props[2] = table.deepclone(tt.tween.props[1])
    tt.tween.props[2].sprite_id = 2
    tt.tween.props[3] = table.deepclone(tt.tween.props[1])
    tt.tween.props[2].sprite_id = 3
    tt.tween.remove = false
    tt.main_script.insert = scripts.mod_lynn_ultimate.insert
    tt.main_script.update = scripts.mod_lynn_ultimate.update
    tt.modifier.vis_flags = bor(F_MOD, F_RANGED)
    tt.modifier.vis_bans = 0
    tt.modifier.duration = 5
    tt.modifier.health_bar_offset = vec_2(0, 10)
    tt.dps.damage_min = nil
    tt.dps.damage_max = nil
    tt.dps.damage_every = fts(15)
    tt.dps.damage_type = DAMAGE_TRUE
    tt.explode_fx = "fx_lynn_explosion"
    tt.explode_range = 80
    tt.explode_damage = nil
    tt.explode_damage_type = DAMAGE_TRUE
    tt.explode_vis_flags = F_RANGED
    tt.explode_vis_bans = 0

    tt = RT("mod_lynn_curse", "modifier")
    tt.modifier.chance = 0.25
    tt.modifier.duration = 2
    tt.main_script.insert = scripts.mod_lynn_curse.insert
    tt.main_script.update = scripts.mod_lynn_curse.update
    tt.main_script.remove = scripts.mod_lynn_curse.remove

    tt = RT("mod_lynn_despair", "modifier")
    AC(tt, "tween", "render")
    tt.modifier.health_bar_offset = vec_2(0, 11)
    tt.modifier.duration = 8
    tt.speed_factor = 0.5
    tt.inflicted_damage_factor = 0.7
    tt.main_script.insert = scripts.mod_lynn_despair.insert
    tt.main_script.remove = scripts.mod_lynn_despair.remove
    tt.main_script.update = scripts.mod_track_target.update
    tt.render.sprites[1].name = "mod_lynn_despair"
    tt.render.sprites[2] = CC("sprite")
    tt.render.sprites[2].name = "mod_lynn_despair_decal_loop"
    tt.render.sprites[2].z = Z_DECALS
    tt.tween.props[1].keys = {{0, 0}, {0.3, 255}, {"this.modifier.duration-0.3", 255}, {"this.modifier.duration", 0}}
    tt.tween.props[2] = table.deepclone(tt.tween.props[1])
    tt.tween.props[2].sprite_id = 2
    tt.tween.remove = false

    tt = RT("mod_lynn_weakening", "modifier")
    AC(tt, "tween", "render")
    tt.armor_reduction = 0.7
    tt.magic_armor_reduction = 0.7
    tt.main_script.insert = scripts.mod_lynn_weakening.insert
    tt.main_script.remove = scripts.mod_lynn_weakening.remove
    tt.main_script.update = scripts.mod_track_target.update
    tt.modifier.duration = 8
    tt.modifier.health_bar_offset = vec_2(0, 11)
    tt.render.sprites[1].name = "mod_lynn_weakening"
    tt.render.sprites[2] = CC("sprite")
    tt.render.sprites[2].name = "mod_lynn_weakening_decal_loop"
    tt.render.sprites[2].z = Z_DECALS
    tt.tween.props[1].keys = {{0, 0}, {0.3, 255}, {"this.modifier.duration-0.3", 255}, {"this.modifier.duration", 0}}
    tt.tween.props[2] = table.deepclone(tt.tween.props[1])
    tt.tween.props[2].sprite_id = 2
    tt.tween.remove = false

    tt = RT("hero_wilbur", "hero")
    AC(tt, "ranged", "timed_attacks")
    tt.hero.level_stats.armor = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    tt.hero.level_stats.hp_max = {300, 330, 360, 390, 420, 450, 480, 510, 540, 570}
    tt.hero.level_stats.melee_damage_max = {8, 10, 11, 12, 13, 14, 16, 17, 18, 19}
    tt.hero.level_stats.melee_damage_min = {6, 6, 7, 8, 9, 10, 10, 11, 12, 13}
    tt.hero.level_stats.ranged_damage_max = {14, 16, 18, 20, 22, 24, 26, 28, 30, 32}
    tt.hero.level_stats.ranged_damage_min = {10, 11, 12, 13, 15, 16, 17, 19, 20, 21}
    tt.hero.skills.missile = E:clone_c("hero_skill")
    tt.hero.skills.missile.damage_max = {40, 80, 120}
    tt.hero.skills.missile.damage_min = {28, 56, 84}
    tt.hero.skills.missile.xp_gain = {100, 150, 225}
    tt.hero.skills.missile.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.smoke = E:clone_c("hero_skill")
    tt.hero.skills.smoke.duration = {3, 4, 5}
    tt.hero.skills.smoke.slow_factor = {0.8, 0.6, 0.4}
    tt.hero.skills.smoke.xp_gain = {50, 75, 100}
    tt.hero.skills.smoke.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [9] = 3
    }
    tt.hero.skills.box = E:clone_c("hero_skill")
    tt.hero.skills.box.count = {1, 2, 3}
    tt.hero.skills.box.xp_gain = {50, 100, 200}
    tt.hero.skills.box.xp_level_steps = {
        [4] = 1,
        [7] = 2,
        [10] = 3
    }
    tt.hero.skills.engine = E:clone_c("hero_skill")
    tt.hero.skills.engine.speed_factor = {1.2, 1.4, 1.6}
    tt.hero.skills.engine.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.ultimate = E:clone_c("hero_skill")
    tt.hero.skills.ultimate.controller_name = "hero_wilbur_ultimate"
    tt.hero.skills.ultimate.damage = {4, 8, 12, 16}
    tt.hero.skills.ultimate.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.hero.skills.ultimate.xp_gain_factor = 32
    tt.health.dead_lifetime = 15
    tt.health_bar.draw_order = -1
    tt.health_bar.offset = vec_2(0, 140)
    tt.health_bar.sort_y_offset = -200
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM_LARGE
    tt.hero.fn_level_up = scripts.hero_wilbur.level_up
    tt.hero.tombstone_show_time = nil
    tt.hero.use_custom_spawn_point = true
    tt.idle_flip.cooldown = 10
    tt.info.damage_icon = "arrow"
    tt.info.hero_portrait = "kr3_hero_portraits_0017"
    tt.info.i18n_key = "HERO_ELVES_GYRO"
    tt.info.portrait = (IS_PHONE and "portraits_hero" or "kr3_info_portraits_heroes") .. "_0017"
    tt.info.ultimate_icon = "0016"
    tt.main_script.insert = scripts.hero_wilbur.insert
    tt.main_script.update = scripts.hero_wilbur.update
    tt.motion.max_speed = 1.8 * FPS
    tt.motion.max_speed_base = 1.8 * FPS
    tt.nav_rally.requires_node_nearby = false
    tt.nav_grid.ignore_waypoints = true
    tt.nav_grid.valid_terrains = TERRAIN_ALL_MASK
    tt.nav_grid.valid_terrains_dest = TERRAIN_ALL_MASK
    tt.regen.cooldown = 1

    for i = 1, 4 do
        tt.render.sprites[i] = CC("sprite")
        tt.render.sprites[i].anchor.y = 0.065
        tt.render.sprites[i].prefix = "hero_wilbur_layer" .. i
        tt.render.sprites[i].name = "idle"
        tt.render.sprites[i].angles = {}
        tt.render.sprites[i].angles.walk = {"idle"}
        tt.render.sprites[i].group = i == 3 and "gun" or nil
        tt.render.sprites[i].z = Z_FLYING_HEROES
    end

    tt.render.sprites[5] = CC("sprite")
    tt.render.sprites[5].alpha = 150
    tt.render.sprites[5].anchor.y = 0.04032258064516129
    tt.render.sprites[5].animated = false
    tt.render.sprites[5].name = "decal_wilbur_shadow"
    tt.soldier.melee_slot_offset = vec_2(0, 0)
    tt.sound_events.change_rally_point = "ElvesHeroGyroTaunt"
    tt.sound_events.death = "ElvesHeroGyroDeath"
    tt.sound_events.hero_room_select = "ElvesHeroGyroTauntSelect"
    tt.sound_events.insert = "ElvesHeroGyroTauntIntro"
    tt.sound_events.respawn = "ElvesHeroGyroTauntIntro"
    tt.ui.click_rect = r(-25, 50, 50, 55)
    tt.unit.hit_offset = vec_2(0, 90)
    tt.unit.hide_after_death = true
    tt.unit.mod_offset = vec_2(0, 80)
    tt.vis.bans = bor(tt.vis.bans, F_EAT, F_NET)
    tt.vis.flags = bor(tt.vis.flags, F_FLYING)
    tt.ranged.attacks[1] = CC("bullet_attack")
    tt.ranged.attacks[1].animations = {nil, "shoot"}
    tt.ranged.attacks[1].bullet = "shot_wilbur"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(19, 44)}
    tt.ranged.attacks[1].cooldown = 0.8
    tt.ranged.attacks[1].loops = 1
    tt.ranged.attacks[1].max_range = 150
    tt.ranged.attacks[1].min_range = 0
    tt.ranged.attacks[1].shoot_times = {0, fts(6), fts(12)}
    tt.ranged.attacks[1].sprite_group = "gun"
    tt.ranged.attacks[1].sound = "ElvesHeroGyroAttack"
    tt.ranged.attacks[2] = CC("bullet_attack")
    tt.ranged.attacks[2].animations = {nil, "projectile"}
    tt.ranged.attacks[2].bullet = "missile_wilbur"
    tt.ranged.attacks[2].bullet_shot_start_offset = {vec_2(-24, 87), vec_2(-5, 123)}
    tt.ranged.attacks[2].cooldown = 25
    tt.ranged.attacks[2].disabled = true
    tt.ranged.attacks[2].filter_fn = scripts.hero_wilbur.missile_filter_fn
    tt.ranged.attacks[2].loops = 1
    tt.ranged.attacks[2].max_range = 500
    tt.ranged.attacks[2].min_range = 0
    tt.ranged.attacks[2].node_prediction = 2
    tt.ranged.attacks[2].shoot_times = {fts(5), fts(8)}
    tt.ranged.attacks[2].xp_from_skill_once = "missile"
    tt.timed_attacks.list[1] = CC("aura_attack")
    tt.timed_attacks.list[1].animations = {"smokeStart", "smokeLoop", "smokeEnd"}
    tt.timed_attacks.list[1].bullet = "aura_smoke_wilbur"
    tt.timed_attacks.list[1].cooldown = 15
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].max_range = 20
    tt.timed_attacks.list[1].min_range = 0
    tt.timed_attacks.list[1].node_prediction = fts(24) + 0.25
    tt.timed_attacks.list[1].sound = "ElvesHeroGyroSmokeLaunch"
    tt.timed_attacks.list[1].vis_flags = F_RANGED
    tt.timed_attacks.list[1].vis_bans = F_FLYING
    tt.timed_attacks.list[1].xp_from_skill = "smoke"
    tt.timed_attacks.list[2] = CC("bullet_attack")
    tt.timed_attacks.list[2].animation = "box"
    tt.timed_attacks.list[2].bullet = "box_wilbur"
    tt.timed_attacks.list[2].bullet_start_offset = vec_2(35, 115)
    tt.timed_attacks.list[2].cooldown = 22
    tt.timed_attacks.list[2].disabled = true
    tt.timed_attacks.list[2].payload = "aura_box_wilbur"
    tt.timed_attacks.list[2].range_nodes_max = 200
    tt.timed_attacks.list[2].range_nodes_min = 10
    tt.timed_attacks.list[2].max_path_dist = 50
    tt.timed_attacks.list[2].shoot_time = fts(12)
    tt.timed_attacks.list[2].sound = "ElvesHeroGyroBoombBox"
    tt.timed_attacks.list[2].vis_flags = bor(F_RANGED, F_BLOCK)
    tt.timed_attacks.list[2].vis_bans = F_FLYING
    tt.timed_attacks.list[2].xp_from_skill = "box"
    tt.ultimate = {
        ts = 0,
        cooldown = 32,
        disabled = true
    }
    tt.engine_factor = 1

    tt = RT("hero_wilbur_ultimate")
    AC(tt, "pos", "main_script", "sound_events")
    tt.cooldown = 32
    tt.main_script.update = scripts.hero_wilbur_ultimate.update
    tt.sound_events.insert = "ElvesHeroGyroDronesSpawn"
    tt.entity = "drone_wilbur"
    tt.spawn_offsets = {vec_2(0, 25), vec_2(15, 0), vec_2(-15, 0), vec_2(0, -25)}

    tt = RT("missile_wilbur", "bullet")
    tt.bullet.acceleration_factor = 0.05
    tt.bullet.damage_max = nil
    tt.bullet.damage_min = nil
    tt.bullet.damage_radius = 60
    tt.bullet.damage_type = DAMAGE_EXPLOSION
    tt.bullet.first_retarget_range = 300
    tt.bullet.hit_fx = "fx_missile_wilbur_hit"
    tt.bullet.hit_fx_air = "fx_missile_wilbur_hit_air"
    tt.bullet.max_speed = 360
    tt.bullet.min_speed = 240
    tt.bullet.particles_name = "ps_missile_wilbur"
    tt.bullet.retarget_range = 99999
    tt.bullet.turn_speed = 10 * math.pi / 180 * 30
    tt.bullet.vis_bans = 0
    tt.bullet.vis_flags = F_RANGED
    tt.bullet.damage_flags = F_AREA
    tt.bullet.max_seek_angle = 0.2
    tt.bullet.rot_dir_from_long_angle = true
    tt.main_script.insert = scripts.missile_wilbur.insert
    tt.main_script.update = scripts.missile.update
    tt.render.sprites[1].prefix = "missile_wilbur"
    tt.render.sprites[1].scale = vec_1(0.75)
    tt.sound_events.hit = "BombExplosionSound"
    tt.sound_events.insert = "RocketLaunchSound"

    tt = RT("box_wilbur", "bomb")
    tt.bullet.damage_type = DAMAGE_NONE
    tt.bullet.flight_time = fts(30)
    tt.bullet.hide_radius = nil
    tt.bullet.pop = nil
    tt.bullet.hit_fx = nil
    tt.bullet.hit_decal = nil
    tt.bullet.g = -1 / (fts(1) * fts(1))
    tt.bullet.rotation_speed = -15 * FPS * math.pi / 180
    tt.sound_events.insert = nil
    tt.render.sprites[1].name = "hero_wilburg_box"
    tt.render.sprites[1].animated = false

    tt = RT("shot_wilbur", "bullet")
    tt.bullet.hit_fx = "fx_shot_wilbur_hit"
    tt.bullet.shoot_fx = "fx_shot_wilbur_flash"
    tt.bullet.flight_time = fts(8)
    tt.bullet.damage_type = DAMAGE_TRUE
    tt.bullet.xp_gain_factor = 1.6
    tt.main_script.update = scripts.shot_wilbur.update
    tt.render = nil

    tt = RT("drone_wilbur", "decal_scripted")
    AC(tt, "force_motion", "custom_attack", "sound_events", "tween")
    tt.main_script.update = scripts.drone_wilbur.update
    tt.flight_height = 70
    tt.force_motion.max_a = 1200
    tt.force_motion.max_v = 360
    tt.force_motion.ramp_radius = 30
    tt.force_motion.fr = 0.05
    tt.force_motion.a_step = 20
    tt.duration = 8
    tt.start_ts = nil
    tt.render.sprites[1].prefix = "wilbur_drone"
    tt.render.sprites[1].name = "idle"
    tt.render.sprites[1].z = Z_BULLETS
    tt.render.sprites[1].offset = vec_2(0, tt.flight_height)
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].name = "decal_flying_shadow"
    tt.render.sprites[2].offset = vec_2(0, 0)
    tt.custom_attack.hit_time = fts(2)
    tt.custom_attack.hit_cycles = 3
    tt.custom_attack.hit_delay = fts(2)
    tt.custom_attack.range_sets = {{0, 100}, {100, 1e+99}}
    tt.custom_attack.max_shots = 16
    tt.custom_attack.search_cooldown = 0.1
    tt.custom_attack.cooldown = 0.25
    tt.custom_attack.animation = "shoot"
    tt.custom_attack.sound = "ElvesHeroGyroDronesAttack"
    tt.custom_attack.sound_chance = 0.5
    tt.custom_attack.damage_min = nil
    tt.custom_attack.damage_max = nil
    tt.custom_attack.damage_type = DAMAGE_TRUE
    tt.custom_attack.vis_flags = F_RANGED
    tt.custom_attack.vis_bans = 0
    tt.custom_attack.shoot_range = 25
    tt.tween.remove = false
    tt.tween.props[1].name = "offset"
    tt.tween.props[1].loop = true
    tt.tween.props[1].keys = {{0, vec_2(0, tt.flight_height + 2)}, {0.4, vec_2(0, tt.flight_height - 2)},
                              {0.8, vec_2(0, tt.flight_height + 2)}}
    tt.tween.props[1].interp = "sine"

    tt = RT("hero_veznan", "hero")
    AC(tt, "melee", "ranged", "timed_attacks", "teleport")
    tt.hero.level_stats.armor = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    tt.hero.level_stats.hp_max = {185, 200, 215, 230, 245, 260, 275, 290, 305, 320}
    tt.hero.level_stats.melee_damage_max = {8, 10, 11, 12, 13, 14, 16, 17, 18, 19}
    tt.hero.level_stats.melee_damage_min = {6, 6, 7, 8, 9, 10, 10, 11, 12, 13}
    tt.hero.level_stats.ranged_damage_min = {11, 12, 14, 15, 17, 18, 20, 21, 23, 24}
    tt.hero.level_stats.ranged_damage_max = {32, 36, 41, 45, 50, 54, 59, 63, 68, 72}
    tt.hero.skills.soulburn = E:clone_c("hero_skill")
    tt.hero.skills.soulburn.total_hp = {250, 500, 750}
    tt.hero.skills.soulburn.xp_gain = {105, 210, 315}
    tt.hero.skills.soulburn.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [9] = 3
    }
    tt.hero.skills.shackles = E:clone_c("hero_skill")
    tt.hero.skills.shackles.max_count = {3, 5, 7}
    tt.hero.skills.shackles.xp_gain = {50, 100, 150}
    tt.hero.skills.shackles.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.hermeticinsight = E:clone_c("hero_skill")
    tt.hero.skills.hermeticinsight.range_factor = {1.1, 1.2, 1.3}
    tt.hero.skills.hermeticinsight.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.arcanenova = E:clone_c("hero_skill")
    tt.hero.skills.arcanenova.damage_min = {28, 46, 64}
    tt.hero.skills.arcanenova.damage_max = {52, 86, 120}
    tt.hero.skills.arcanenova.xp_gain = {45, 90, 135}
    tt.hero.skills.arcanenova.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.ultimate = E:clone_c("hero_skill")
    tt.hero.skills.ultimate.controller_name = "hero_veznan_ultimate"
    tt.hero.skills.ultimate.stun_duration = {2, 3, 4, 5}
    tt.hero.skills.ultimate.soldier_hp_max = {666, 999, 1337, 1666}
    tt.hero.skills.ultimate.soldier_damage_max = {50, 90, 115, 130}
    tt.hero.skills.ultimate.soldier_damage_min = {30, 50, 65, 80}
    tt.hero.skills.ultimate.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.hero.skills.ultimate.xp_gain_factor = 96
    tt.health.dead_lifetime = 15
    tt.health_bar.offset = vec_2(0, 41)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_veznan.level_up
    tt.hero.tombstone_show_time = fts(90)
    tt.info.damage_icon = "magic"
    tt.info.hero_portrait = "kr3_hero_portraits_0006"
    tt.info.i18n_key = "HERO_ELVES_VEZNAN"
    tt.info.portrait = (IS_PHONE and "portraits_hero" or "kr3_info_portraits_heroes") .. "_0006"
    tt.info.ultimate_icon = "0006"
    tt.main_script.update = scripts.hero_veznan.update
    tt.motion.max_speed = 2 * FPS
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = 0.125
    tt.render.sprites[1].prefix = "veznan_hero"
    tt.soldier.melee_slot_offset = vec_2(3, 0)
    tt.sound_events.change_rally_point = "ElvesHeroVeznanTaunt"
    tt.sound_events.death = "ElvesHeroVeznanDeath"
    tt.sound_events.respawn = "ElvesHeroVeznanTauntIntro"
    tt.sound_events.insert = "ElvesHeroVeznanTauntIntro"
    tt.sound_events.hero_room_select = "ElvesHeroVeznanTauntSelect"
    tt.teleport.min_distance = 0
    tt.teleport.sound = "ElvesHeroVeznanTeleport"
    tt.unit.hit_offset = vec_2(0, 15)
    tt.unit.mod_offset = vec_2(0, 15)
    tt.melee.attacks[1].cooldown = 1
    tt.melee.attacks[1].hit_time = fts(7)
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].xp_gain_factor = 2.5
    tt.melee.range = 55
    tt.ranged.attacks[1] = CC("bullet_attack")
    tt.ranged.attacks[1].max_range = 165
    tt.ranged.attacks[1].max_range_base = 165
    tt.ranged.attacks[1].min_range = 20
    tt.ranged.attacks[1].cooldown = 1.5
    tt.ranged.attacks[1].bullet = "bolt_veznan"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(20, 40)}
    tt.ranged.attacks[1].shoot_time = fts(11)
    tt.timed_attacks.list[1] = CC("custom_attack")
    tt.timed_attacks.list[1].animations = {"soulBurnStart", "soulBurnLoop", "soulBurnEnd"}
    tt.timed_attacks.list[1].ball = "decal_veznan_soulburn_ball"
    tt.timed_attacks.list[1].balls_dest_offset = vec_2(17, 36)
    tt.timed_attacks.list[1].cast_time = fts(8)
    tt.timed_attacks.list[1].cooldown = 35
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].hit_fx = "fx_veznan_soulburn"
    tt.timed_attacks.list[1].radius = 110
    tt.timed_attacks.list[1].range = 140
    tt.timed_attacks.list[1].range_base = 140
    tt.timed_attacks.list[1].sound = "ElvesHeroVeznanSoulBurn"
    tt.timed_attacks.list[1].total_hp = nil
    tt.timed_attacks.list[1].vis_bans = bor(F_BOSS)
    tt.timed_attacks.list[1].vis_flags = bor(F_RANGED, F_INSTAKILL)
    tt.timed_attacks.list[2] = CC("mod_attack")
    tt.timed_attacks.list[2].animation = "shackles"
    tt.timed_attacks.list[2].cast_sound = "ElvesHeroVeznanMagicSchackles"
    tt.timed_attacks.list[2].cast_time = fts(14)
    tt.timed_attacks.list[2].cooldown = 20
    tt.timed_attacks.list[2].disabled = true
    tt.timed_attacks.list[2].max_count = nil
    tt.timed_attacks.list[2].mods = {"mod_veznan_shackles_stun", "mod_veznan_shackles_dps"}
    tt.timed_attacks.list[2].radius = 100
    tt.timed_attacks.list[2].range = 150
    tt.timed_attacks.list[2].range_base = 150
    tt.timed_attacks.list[2].vis_bans = bor(F_BOSS)
    tt.timed_attacks.list[2].vis_flags = bor(F_RANGED, F_MOD, F_STUN)
    tt.timed_attacks.list[3] = CC("area_attack")
    tt.timed_attacks.list[3].animation = "arcaneNova"
    tt.timed_attacks.list[3].cast_sound = "ElvesHeroVeznanArcaneNova"
    tt.timed_attacks.list[3].cooldown = 18
    tt.timed_attacks.list[3].damage_max = nil
    tt.timed_attacks.list[3].damage_min = nil
    tt.timed_attacks.list[3].damage_radius = 125
    tt.timed_attacks.list[3].damage_type = DAMAGE_MAGICAL_EXPLOSION
    tt.timed_attacks.list[3].disabled = true
    tt.timed_attacks.list[3].hit_decal = "decal_veznan_arcanenova"
    tt.timed_attacks.list[3].hit_fx = "fx_veznan_arcanenova"
    tt.timed_attacks.list[3].hit_time = fts(25)
    tt.timed_attacks.list[3].max_range = 165
    tt.timed_attacks.list[3].max_range_base = 165
    tt.timed_attacks.list[3].min_range = 75
    tt.timed_attacks.list[3].min_count = 2
    tt.timed_attacks.list[3].mod = "mod_veznan_arcanenova"
    tt.timed_attacks.list[3].vis_bans = 0
    tt.timed_attacks.list[3].vis_flags = bor(F_RANGED)
    tt.ultimate = {
        ts = 0,
        cooldown = 96,
        disabled = true
    }
    tt.hermeticinsight_factor = 1

    tt = RT("bolt_veznan", "bolt")
    tt.render.sprites[1].prefix = "veznan_hero_bolt"
    tt.render.sprites[1].anchor = vec_2(0.5, 0.5)
    tt.bullet.damage_type = DAMAGE_MAGICAL
    tt.bullet.acceleration_factor = 0.1
    tt.bullet.min_speed = 30
    tt.bullet.max_speed = 300
    tt.bullet.hit_fx = "fx_bolt_veznan_hit"
    tt.bullet.xp_gain_factor = 2.5
    tt.sound_events.insert = "ElvesHeroVeznanRangeShoot"
    tt.bullet.pop = {"pop_mage"}
    tt.bullet.pop_conds = DR_KILL

    tt = RT("hero_veznan_ultimate")
    E:add_comps(tt, "pos", "main_script", "sound_events")
    tt.cooldown = 96
    tt.entity = "soldier_veznan_demon"
    tt.main_script.update = scripts.hero_veznan_ultimate.update
    tt.mod = "mod_veznan_ultimate_stun"
    tt.range = 65
    tt.sound_events.insert = "ElvesHeroVeznanDarkPact"
    tt.vis_bans = bor(F_BOSS)
    tt.vis_flags = bor(F_MOD, F_STUN)

    tt = RT("hero_durax", "hero")
    AC(tt, "melee", "ranged", "timed_attacks", "transfer")
    tt.hero.level_stats.armor = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    tt.hero.level_stats.hp_max = {280, 300, 320, 340, 360, 380, 400, 420, 440, 460}
    tt.hero.level_stats.melee_damage_max = {12, 13, 15, 16, 18, 19, 21, 22, 24, 25}
    tt.hero.level_stats.melee_damage_min = {8, 9, 10, 11, 12, 13, 14, 15, 16, 17}
    tt.hero.skills.crystallites = E:clone_c("hero_skill")
    tt.hero.skills.crystallites.duration = {35, 60, 85}
    tt.hero.skills.crystallites.xp_gain = {225, 450, 675}
    tt.hero.skills.crystallites.xp_level_steps = {
        [4] = 1,
        [7] = 2,
        [10] = 3
    }
    tt.hero.skills.armsword = E:clone_c("hero_skill")
    tt.hero.skills.armsword.xp_gain = {40, 80, 120}
    tt.hero.skills.armsword.damage = {60, 120, 180}
    tt.hero.skills.armsword.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.lethal_prism = E:clone_c("hero_skill")
    tt.hero.skills.lethal_prism.damage_max = {40, 45, 55}
    tt.hero.skills.lethal_prism.damage_min = {20, 25, 35}
    tt.hero.skills.lethal_prism.ray_count = {2, 4, 6}
    tt.hero.skills.lethal_prism.xp_gain = {23, 46, 78}
    tt.hero.skills.lethal_prism.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [9] = 3
    }
    tt.hero.skills.shardseed = E:clone_c("hero_skill")
    tt.hero.skills.shardseed.damage = {60, 120, 180}
    tt.hero.skills.shardseed.xp_gain = {40, 80, 120}
    tt.hero.skills.shardseed.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.ultimate = E:clone_c("hero_skill")
    tt.hero.skills.ultimate.controller_name = "hero_durax_ultimate"
    tt.hero.skills.ultimate.max_count = {4, 6, 8, 10}
    tt.hero.skills.ultimate.damage = {300, 400, 800, 1200}
    tt.hero.skills.ultimate.xp_gain_factor = 36
    tt.hero.skills.ultimate.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.health.dead_lifetime = 15
    tt.health_bar.offset = vec_2(0, 65)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_durax.level_up
    tt.hero.tombstone_show_time = fts(90)
    tt.info.fn = scripts.hero_durax.get_info
    tt.info.hero_portrait = "kr3_hero_portraits_0012"
    tt.info.i18n_key = "HERO_ELVES_DURAX"
    tt.info.portrait = (IS_PHONE and "portraits_hero" or "kr3_info_portraits_heroes") .. "_0012"
    tt.info.ultimate_icon = "0012"
    tt.main_script.update = scripts.hero_durax.update
    tt.motion.max_speed = 2 * FPS
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = 0.2308
    tt.render.sprites[1].prefix = "durax_hero"
    tt.soldier.melee_slot_offset = vec_2(0, 0)
    tt.sound_events.change_rally_point = "ElvesHeroDuraxTaunt"
    tt.sound_events.death = "ElvesHeroDuraxDeath"
    tt.sound_events.insert = "ElvesHeroDuraxTauntIntro"
    tt.sound_events.respawn = "ElvesHeroDuraxTauntIntro"
    tt.sound_events.hero_room_select = "ElvesHeroDuraxTauntSelect"
    tt.unit.hit_offset = vec_2(0, 23)
    tt.unit.mod_offset = vec_2(0, 23)
    tt.transfer.extra_speed = 5.5 * FPS
    tt.transfer.min_distance = 0
    tt.transfer.sound_loop = "ElvesHeroDuraxWalkLoop"
    tt.transfer.animations = {"lethalPrismStart", "specialwalkLoop", "lethalPrismEnd"}
    tt.transfer.particles_name = "ps_durax_transfer"
    tt.melee.attacks[1].hit_time = fts(8)
    tt.melee.attacks[1].xp_gain_factor = 3.8
    tt.melee.attacks[1].shared_cooldown = true
    tt.melee.attacks[1].damage_type = DAMAGE_TRUE
    tt.melee.attacks[2] = table.deepclone(tt.melee.attacks[1])
    tt.melee.attacks[2].animation = "attack2"
    tt.melee.attacks[2].chance = 0.5
    tt.melee.attacks[3] = CC("melee_attack")
    tt.melee.attacks[3].animation = "armblade"
    tt.melee.attacks[3].cooldown = 20
    tt.melee.attacks[3].damage_max = nil
    tt.melee.attacks[3].damage_min = nil
    tt.melee.attacks[3].damage_type = DAMAGE_TRUE
    tt.melee.attacks[3].disabled = true
    tt.melee.attacks[3].hit_time = fts(27)
    tt.melee.attacks[3].sound = "ElvesHeroDuraxArmblade"
    tt.melee.attacks[3].xp_from_skill = "armsword"
    tt.melee.cooldown = 1
    tt.melee.range = 75
    tt.vis.bans = bor(tt.vis.bans, F_POISON)
    tt.ranged.attacks[1] = CC("bullet_attack")
    tt.ranged.attacks[1].animation = "shardseed"
    tt.ranged.attacks[1].disabled = true
    tt.ranged.attacks[1].max_range = 250
    tt.ranged.attacks[1].min_range = 75
    tt.ranged.attacks[1].cooldown = 25
    tt.ranged.attacks[1].bullet = "spear_durax"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(-17, 55)}
    tt.ranged.attacks[1].shoot_time = fts(9)
    tt.ranged.attacks[1].xp_from_skill = "shardseed"
    tt.timed_attacks.list[1] = CC("bullet_attack")
    tt.timed_attacks.list[1].animations = {"lethalPrismStart", "lethalPrismLoop", "lethalPrismEnd"}
    tt.timed_attacks.list[1].bullet = "ray_durax"
    tt.timed_attacks.list[1].bullet_start_offset = {vec_2(0, 20)}
    tt.timed_attacks.list[1].cooldown = 20
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].range = 150
    tt.timed_attacks.list[1].ray_cooldown = fts(10)
    tt.timed_attacks.list[1].ray_count = nil
    tt.timed_attacks.list[1].vis_flags = F_RANGED
    tt.timed_attacks.list[1].xp_from_skill = "lethal_prism"
    tt.timed_attacks.list[2] = CC("spawn_attack")
    tt.timed_attacks.list[2].animation = "crystallites"
    tt.timed_attacks.list[2].cooldown = 50
    tt.timed_attacks.list[2].disabled = true
    tt.timed_attacks.list[2].entity = "hero_durax_clone"
    tt.timed_attacks.list[2].nodes_offset = {5, 14}
    tt.timed_attacks.list[2].sound = "ElvesHeroDuraxCrystallites"
    tt.timed_attacks.list[2].spawn_offset = vec_2(22, 0)
    tt.timed_attacks.list[2].spawn_time = fts(19)
    tt.timed_attacks.list[2].xp_from_skill = "cristallites"
    tt.ultimate = {
        ts = 0,
        cooldown = 36,
        disabled = true
    }

    tt = RT("hero_durax_ultimate")
    AC(tt, "pos", "main_script", "sound_events")
    tt.can_fire_fn = scripts.hero_durax_ultimate.can_fire_fn
    tt.cooldown = 36
    tt.max_count = nil
    tt.range = 75
    tt.main_script.update = scripts.hero_durax_ultimate.update
    tt.damage = nil
    tt.damage_type = DAMAGE_TRUE
    tt.vis_flags = bor(F_MOD)
    tt.vis_bans = bor(F_FLYING)
    tt.sound_events.insert = "ElvesHeroDuraxUltimate"
    tt.mod_slow = "mod_durax_slow"
    tt.mod_stun = "mod_durax_stun"
    tt.hit_blood_fx = "fx_blood_splat"

    tt = RT("hero_durax_clone", "hero_durax")
    AC(tt, "tween")
    tt.clone = {}
    tt.clone.duration = nil
    tt.render.sprites[1].shader = "p_tint"
    tt.render.sprites[1].shader_args = {
        tint_factor = 0.25,
        tint_color = {0, 0.75, 1, 1}
    }
    tt.health.dead_lifetime = 3
    tt.sound_events.change_rally_point = "ElvesHeroDuraxTaunt"
    tt.sound_events.death = "ElvesHeroDuraxDeath"
    tt.sound_events.insert = nil
    tt.ranged.attacks[1].bullet = "spear_durax_clone"
    tt.health.ignore_delete_after = nil
    tt.tween.disabled = true
    tt.tween.props[1].keys = {{2, 255}, {3, 0}}
    tt.transfer.particles_name = "ps_durax_clone_transfer"

    tt = E:register_t("hero_elves_denas", "hero")
    E:add_comps(tt, "melee", "ranged", "timed_attacks")
    tt.hero.level_stats.armor = {0.38, 0.41, 0.44, 0.47, 0.5, 0.53, 0.56, 0.59, 0.62, 0.65}
    tt.hero.level_stats.hp_max = {308, 324, 343, 357, 374, 390, 407, 423, 440, 456}
    tt.hero.level_stats.melee_damage_max = {14, 17, 19, 21, 23, 25, 27, 30, 32, 34}
    tt.hero.level_stats.melee_damage_min = {10, 11, 12, 14, 15, 17, 18, 20, 21, 23}
    tt.hero.skills.celebrity = E:clone_c("hero_skill")
    tt.hero.skills.celebrity.max_targets = {6, 8, 10}
    tt.hero.skills.celebrity.stun_duration = {1, 2, 3}
    tt.hero.skills.celebrity.xp_gain = {100, 200, 300}
    tt.hero.skills.celebrity.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.mighty = E:clone_c("hero_skill")
    tt.hero.skills.mighty.damage_max = {134, 226, 320}
    tt.hero.skills.mighty.damage_min = {70, 122, 171}
    tt.hero.skills.mighty.xp_gain = {70, 140, 210}
    tt.hero.skills.mighty.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [9] = 3
    }
    tt.hero.skills.shield_strike = E:clone_c("hero_skill")
    tt.hero.skills.shield_strike.damage_max = {36, 46, 52}
    tt.hero.skills.shield_strike.damage_min = {20, 26, 30}
    tt.hero.skills.shield_strike.rebounds = {3, 4, 5}
    tt.hero.skills.shield_strike.xp_gain = {50, 100, 150}
    tt.hero.skills.shield_strike.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.sybarite = E:clone_c("hero_skill")
    tt.hero.skills.sybarite.heal_hp = {80, 160, 240}
    tt.hero.skills.sybarite.xp_gain = {75, 150, 225}
    tt.hero.skills.sybarite.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.ultimate = E:clone_c("hero_skill")
    tt.hero.skills.ultimate.controller_name = "hero_elves_denas_ultimate"
    tt.hero.skills.ultimate.xp_gain_factor = 48
    tt.hero.skills.ultimate.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.hero.skills.ultimate.cooldown = {
        48,
        43.2,
        38.88,
        34.992
    }
    tt.health.dead_lifetime = 15
    tt.health_bar.offset = vec_2(0, 46)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_elves_denas.level_up
    tt.hero.tombstone_show_time = fts(90)
    tt.info.hero_portrait = "kr3_hero_portraits_0005"
    tt.info.i18n_key = "HERO_ELVES_DENAS"
    tt.info.portrait = (IS_PHONE and "portraits_hero" or "kr3_info_portraits_heroes") .. "_0005"
    tt.info.ultimate_icon = "0005"
    tt.main_script.insert = scripts.hero_elves_denas.insert
    tt.main_script.update = scripts.hero_elves_denas.update
    tt.motion.max_speed = 2.75 * FPS
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = 0.21111111111111
    tt.render.sprites[1].angles = {}
    tt.render.sprites[1].angles.walk = {"walk"}
    tt.render.sprites[1].name = "idle"
    tt.render.sprites[1].prefix = "hero_elves_denas"
    tt.soldier.melee_slot_offset = vec_2(10, 0)
    tt.sound_events.change_rally_point = "ElvesHeroDenasTaunt"
    tt.sound_events.death = "ElvesHeroDenasDeath"
    tt.sound_events.respawn = "ElvesHeroDenasTauntIntro"
    tt.sound_events.insert = "ElvesHeroDenasTauntIntro"
    tt.sound_events.hero_room_select = "ElvesHeroDenasTauntSelect"
    tt.unit.hit_offset = vec_2(0, 14)
    tt.unit.mod_offset = vec_2(0, 13)
    tt.melee.attacks[1] = E:clone_c("melee_attack")
    tt.melee.attacks[1].cooldown = 1.2
    tt.melee.attacks[1].hit_time = fts(10)
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].xp_gain_factor = 4
    tt.melee.attacks[2] = table.deepclone(tt.melee.attacks[1])
    tt.melee.attacks[2].animation = "attack2"
    tt.melee.attacks[2].chance = 0.5
    tt.melee.attacks[3] = E:clone_c("melee_attack")
    tt.melee.attacks[3].animation = "specialAttack"
    tt.melee.attacks[3].cooldown = 16.2
    tt.melee.attacks[3].disabled = true
    tt.melee.attacks[3].damage_type = DAMAGE_TRUE
    tt.melee.attacks[3].hit_time = fts(25)
    tt.melee.attacks[3].sound = "ElvesHeroDenasMighty"
    tt.melee.attacks[3].sound_args = {
        delay = fts(17)
    }
    tt.melee.attacks[3].xp_from_skill = "mighty"
    tt.melee.range = 72.5
    tt.ranged.attacks[1] = E:clone_c("bullet_attack")
    tt.ranged.attacks[1].disabled = true
    tt.ranged.attacks[1].bullet = "shield_elves_denas"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(22, 16)}
    tt.ranged.attacks[1].cooldown = 13.5
    tt.ranged.attacks[1].max_range = 150
    tt.ranged.attacks[1].min_range = 0
    tt.ranged.attacks[1].rebound_range = 125
    tt.ranged.attacks[1].shoot_time = fts(13)
    tt.ranged.attacks[1].animation = "shieldThrow"
    tt.ranged.attacks[1].xp_from_skill = "shield_strike"
    tt.timed_attacks.list[1] = E:clone_c("mod_attack")
    tt.timed_attacks.list[1].animation = "showOff"
    tt.timed_attacks.list[1].cooldown = 22.5
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].hit_time = fts(9)
    tt.timed_attacks.list[1].mod = "mod_elves_denas_celebrity"
    tt.timed_attacks.list[1].range = 100
    tt.timed_attacks.list[1].sound = "ElvesHeroDenasCelebrity"
    tt.timed_attacks.list[1].vis_bans = bor(F_BOSS)
    tt.timed_attacks.list[1].vis_flags = bor(F_MOD, F_RANGED, F_STUN)
    tt.timed_attacks.list[1].xp_from_skill = "celebrity"
    tt.timed_attacks.list[2] = E:clone_c("mod_attack")
    tt.timed_attacks.list[2].animation = "eat"
    tt.timed_attacks.list[2].cooldown = 18
    tt.timed_attacks.list[2].disabled = true
    tt.timed_attacks.list[2].hit_time = fts(37)
    tt.timed_attacks.list[2].lost_health = 100
    tt.timed_attacks.list[2].mod = "mod_elves_denas_sybarite"
    tt.timed_attacks.list[2].sound = "ElvesHeroDenasSybarite"
    tt.wealthy = {}
    tt.wealthy.animation = "coinThrow"
    tt.wealthy.gold = 30
    tt.wealthy.sound = "ElvesHeroDenasWealthy"
    tt.wealthy.last_wave = 1
    tt.wealthy.hit_time = fts(9)
    tt.wealthy.fx = "fx_coin_jump"
    tt.ultimate = {
        ts = 0,
        cooldown = 48,
        disabled = true
    }

    tt = E:register_t("hero_elves_denas_ultimate")
    E:add_comps(tt, "pos", "main_script", "sound_events")
    tt.cooldown = 48
    tt.guards_count = {2, 3, 4, 5}
    tt.guards_template = "soldier_elves_denas_guard"
    tt.main_script.update = scripts.hero_elves_denas_ultimate.update
    tt.sound_events.insert = "ElvesHeroDenasKingsguardTaunt"
    tt.can_fire_fn = scripts.hero_elves_denas_ultimate.can_fire_fn

    tt = E:register_t("soldier_elves_denas_guard", "soldier_militia")
    E:add_comps(tt, "reinforcement", "tween", "nav_grid")
    image_y = 80
    anchor_y = 12 / image_y
    tt.health.armor = 0.4
    tt.health.hp_max = 200
    tt.health_bar.offset = vec_2(0, 40)
    tt.controable = true
    tt.ban_global_control = true
    tt.info.portrait = "kr3_portraits_sc_0059"
    tt.info.random_name_count = 15
    tt.info.random_name_format = "ELVES_SOLDIER_IMPERIAL_%i_NAME"
    tt.main_script.insert = scripts.soldier_reinforcement.insert
    tt.main_script.update = scripts.soldier_reinforcement.update
    tt.melee.attacks[1].damage_max = 12
    tt.melee.attacks[1].damage_min = 4
    tt.melee.attacks[1].hit_time = fts(13)
    tt.melee.attacks[1].shared_cooldown = true
    tt.melee.attacks[1].chance = 0.5
    tt.melee.attacks[1].xp_gain_factor = 0
    tt.melee.attacks[2] = table.deepclone(tt.melee.attacks[1])
    tt.melee.attacks[2].animation = "attack2"
    tt.melee.cooldown = 1
    tt.melee.range = 72.5
    tt.motion.max_speed = 75
    tt.regen.cooldown = 1
    tt.reinforcement.duration = 25
    tt.reinforcement.fade = nil
    tt.reinforcement.fade_out = true
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].prefix = "elves_denas_guard"
    tt.render.sprites[1].name = "raise"
    tt.sound_events.insert = nil
    tt.tween.props[1].keys = {{0, 0}, {fts(10), 255}}
    tt.tween.props[1].name = "alpha"
    tt.tween.remove = false
    tt.tween.disabled = true
    tt.unit.level = 0
    tt.vis.bans = bor(F_SKELETON, F_LYCAN)
    tt = E:register_t("mod_elves_denas_celebrity", "mod_shock_and_awe")
    tt.modifier.duration = nil

    tt = E:register_t("mod_elves_denas_sybarite", "modifier")
    E:add_comps(tt, "render")
    tt.inflicted_damage_factor = 2
    tt.heal_hp = nil
    tt.main_script.insert = scripts.mod_elves_denas_sybarite.insert
    tt.main_script.remove = scripts.mod_elves_denas_sybarite.remove
    tt.main_script.update = scripts.mod_track_target.update
    tt.modifier.bans = {"mod_son_of_mactans_poison", "mod_drider_poison", "mod_dark_spitters", "mod_balrog"}
    tt.modifier.duration = 8
    tt.render.sprites[1].name = "fx_elves_denas_heal"

    tt = E:register_t("hero_arivan", "hero")
    E:add_comps(tt, "melee", "ranged", "timed_attacks")
    tt.hero.level_stats.armor = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    tt.hero.level_stats.hp_max = {115, 130, 145, 160, 175, 190, 205, 220, 235, 250}
    tt.hero.level_stats.melee_damage_max = {27, 30, 34, 37, 41, 44, 47, 51, 54, 57}
    tt.hero.level_stats.melee_damage_min = {9, 10, 11, 12, 14, 15, 16, 17, 18, 19}
    tt.hero.level_stats.ranged_damage_min = {9, 10, 11, 12, 14, 15, 16, 17, 18, 19}
    tt.hero.level_stats.ranged_damage_max = {27, 30, 34, 37, 41, 44, 47, 51, 54, 57}
    tt.hero.skills.icy_prison = E:clone_c("hero_skill")
    tt.hero.skills.icy_prison.damage = {35, 50, 65}
    tt.hero.skills.icy_prison.duration = {2, 4, 6}
    tt.hero.skills.icy_prison.xp_gain = {40, 80, 120}
    tt.hero.skills.icy_prison.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.lightning_rod = E:clone_c("hero_skill")
    tt.hero.skills.lightning_rod.damage_max = {100, 220, 340}
    tt.hero.skills.lightning_rod.damage_min = {60, 120, 180}
    tt.hero.skills.lightning_rod.xp_gain = {50, 100, 150}
    tt.hero.skills.lightning_rod.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [9] = 3
    }
    tt.hero.skills.seal_of_fire = E:clone_c("hero_skill")
    tt.hero.skills.seal_of_fire.count = {1, 2, 3}
    tt.hero.skills.seal_of_fire.xp_gain = {62, 125, 187}
    tt.hero.skills.seal_of_fire.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.stone_dance = E:clone_c("hero_skill")
    tt.hero.skills.stone_dance.count = {1, 2, 3}
    tt.hero.skills.stone_dance.stone_extra = {10, 15, 20}
    tt.hero.skills.stone_dance.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.ultimate = E:clone_c("hero_skill")
    tt.hero.skills.ultimate.controller_name = "hero_arivan_ultimate"
    tt.hero.skills.ultimate.damage = {6, 7, 8, 10}
    tt.hero.skills.ultimate.duration = {3, 6, 8, 10}
    tt.hero.skills.ultimate.freeze_chance = {0.2, 0.4, 0.6, 0.8}
    tt.hero.skills.ultimate.freeze_duration = {0.5, 1, 1.5, 2}
    tt.hero.skills.ultimate.xp_gain_factor = 64
    tt.hero.skills.ultimate.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.hero.skills.ultimate.lightning_chance = {0, 0.5, 0.65, 0.8}
    tt.hero.skills.ultimate.lightning_cooldown = {fts(30), fts(30), fts(24), fts(21)}
    tt.health.dead_lifetime = 15
    tt.health.on_damage = scripts.hero_arivan.on_damage
    tt.health_bar.offset = vec_2(0, 39)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_arivan.level_up
    tt.hero.tombstone_show_time = fts(90)
    tt.info.damage_icon = "magic"
    tt.info.i18n_key = "HERO_ELVES_ELEMENTALIST"
    tt.info.hero_portrait = "kr3_hero_portraits_0002"
    tt.info.portrait = (IS_PHONE and "portraits_hero" or "kr3_info_portraits_heroes") .. "_0002"
    tt.info.ultimate_icon = "0002"
    tt.main_script.insert = scripts.hero_arivan.insert
    tt.main_script.update = scripts.hero_arivan.update
    tt.motion.max_speed = 3 * FPS
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = 0.083333333333333
    tt.render.sprites[1].prefix = "hero_arivan"
    tt.render.sprites[1].angles = {}
    tt.render.sprites[1].angles.walk = {"walk"}
    tt.render.sprites[1].name = "idle"
    tt.soldier.melee_slot_offset = vec_2(4, 0)
    tt.sound_events.change_rally_point = "ElvesHeroArivanTaunt"
    tt.sound_events.death = "ElvesHeroArivanDeath"
    tt.sound_events.respawn = "ElvesHeroArivanTauntIntro"
    tt.sound_events.insert = "ElvesHeroArivanTauntIntro"
    tt.sound_events.hero_room_select = "ElvesHeroArivanTauntSelect"
    tt.unit.hit_offset = vec_2(0, 13)
    tt.unit.mod_offset = vec_2(0, 13)
    local function generate_stone_effect(this, store, attack, target)
        local a = this.timed_attacks.list[2]
        local stone_chance = 0.2
        if target and target.vis and band(target.vis.flags, F_BOSS) ~= 0 then
            stone_chance = 0.1
        end
        if #a.aura.stones < a.aura.max_stones and math.random(0, 1) < stone_chance then
            S:queue(a.sound)
            local stone = E:create_entity("arivan_stone")
            local i = #a.aura.stones + 1
            local aura = a.aura
            local angle = i * 2 * math.pi / aura.max_stones % (2 * math.pi)

            stone.pos = U.point_on_ellipse(this.pos, aura.rot_radius, angle)
            stone.render.sprites[1].name = string.format(stone.render.sprites[1].name, i)
            stone.render.sprites[1].ts = store.tick_ts

            queue_insert(store, stone)
            table.insert(aura.stones, stone)
            aura.aura.ts = store.tick_ts

            this.stone_extra = #a.aura.stones * this.stone_extra_per_stone
            this.melee.attacks[1].damage_min = this.melee_raw_min + this.stone_extra
            this.melee.attacks[1].damage_max = this.melee_raw_max + this.stone_extra
        end
    end
    tt.melee.attacks[1].cooldown = 1
    tt.melee.attacks[1].hit_time = fts(15)
    tt.melee.attacks[1].xp_gain_factor = 2.1
    tt.melee.attacks[1].damage_type = DAMAGE_MAGICAL
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].side_effect = generate_stone_effect
    tt.melee.range = 50
    tt.ranged.attacks[1] = E:clone_c("bullet_attack")
    tt.ranged.attacks[1].cooldown = 1.5
    tt.ranged.attacks[1].min_range = 20
    tt.ranged.attacks[1].max_range = 160
    tt.ranged.attacks[1].node_prediction = fts(11)
    tt.ranged.attacks[1].bullet = "ray_arivan_simple"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(0, 35)}
    tt.ranged.attacks[1].shoot_time = fts(11)
    tt.ranged.attacks[1].side_effect = generate_stone_effect
    tt.ranged.attacks[2] = E:clone_c("bullet_attack")
    tt.ranged.attacks[2].animation = "rayShoot"
    tt.ranged.attacks[2].cooldown = 16.2
    tt.ranged.attacks[2].disabled = true
    tt.ranged.attacks[2].min_range = 0
    tt.ranged.attacks[2].max_range = 175
    tt.ranged.attacks[2].node_prediction = fts(19)
    tt.ranged.attacks[2].bullet = "lightning_arivan"
    tt.ranged.attacks[2].bullet_start_offset = {vec_2(1, 39)}
    tt.ranged.attacks[2].shoot_time = fts(19)
    tt.ranged.attacks[2].sound = "ElvesHeroArivanLightingBolt"
    tt.ranged.attacks[2].xp_from_skill = "lightning_rod"
    tt.ranged.attacks[3] = E:clone_c("bullet_attack")
    tt.ranged.attacks[3].animation = "freezeBall"
    tt.ranged.attacks[3].cooldown = 12.6
    tt.ranged.attacks[3].disabled = true
    tt.ranged.attacks[3].min_range = 0
    tt.ranged.attacks[3].max_range = 130
    tt.ranged.attacks[3].node_prediction = fts(25)
    tt.ranged.attacks[3].bullet = "bolt_freeze_arivan"
    tt.ranged.attacks[3].bullet_start_offset = {vec_2(1, 40)}
    tt.ranged.attacks[3].shoot_time = fts(25)
    tt.ranged.attacks[3].sound = "ElvesHeroArivanIceShoot"
    tt.ranged.attacks[3].xp_from_skill = "icy_prison"
    tt.timed_attacks.list[1] = E:clone_c("bullet_attack")
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].cooldown = 21.7
    tt.timed_attacks.list[1].min_range = 0
    tt.timed_attacks.list[1].max_range = 160
    tt.timed_attacks.list[1].bullet = "fireball_arivan"
    tt.timed_attacks.list[1].bullet_start_offset = {vec_2(-7, 50), vec_2(7, 50)}
    tt.timed_attacks.list[1].shoot_times = {fts(4), fts(14)}
    tt.timed_attacks.list[1].animations = {"multiShootStart", "multiShootLoop", "multiShootEnd"}
    tt.timed_attacks.list[1].loops = 0
    tt.timed_attacks.list[1].xp_from_skill = "seal_of_fire"
    tt.timed_attacks.list[2] = E:clone_c("custom_attack")
    tt.timed_attacks.list[2].animation = "stoneCast"
    tt.timed_attacks.list[2].cooldown = 18
    tt.timed_attacks.list[2].disabled = true
    tt.timed_attacks.list[2].hit_time = fts(13)
    tt.timed_attacks.list[2].sound = "ElvesHeroArivanSummonRocks"
    tt.ultimate = {
        ts = 0,
        cooldown = 64,
        disabled = true
    }
    tt.stone_extra = 0
    tt.stone_extra_per_stone = 0
    tt.melee_raw_min = 0
    tt.melee_raw_max = 0

    tt = E:register_t("ray_arivan_simple", "bullet")
    tt.bullet.damage_type = DAMAGE_TRUE
    tt.bullet.damage_max = nil
    tt.bullet.damage_min = nil
    tt.bullet.hit_fx = "fx_ray_arivan_simple_hit"
    tt.bullet.hit_time = fts(5)
    tt.bullet.xp_gain_factor = 2.7
    tt.image_width = 60
    tt.track_target = true
    tt.main_script.update = scripts.ray_simple.update
    tt.render.sprites[1].anchor = vec_2(0, 0.5)
    tt.render.sprites[1].loop = false
    tt.render.sprites[1].name = "arivan_ray_simple"
    tt.sound_events.insert = "ElvesHeroArivanRegularRay"

    tt = E:register_t("fx_ray_arivan_simple_hit", "fx")
    tt.render.sprites[1].name = "arivan_ray_simple_hit"
    tt = E:register_t("lightning_arivan", "bullet")
    tt.bullet.damage_type = DAMAGE_TRUE
    tt.bullet.damage_max = nil
    tt.bullet.damage_min = nil
    tt.bullet.hit_fx = "fx_lighting_arivan_hit"
    tt.bullet.hit_time = fts(5)
    tt.image_width = 90
    tt.track_target = true
    tt.main_script.update = scripts.ray_simple.update
    tt.render.sprites[1].anchor = vec_2(0, 0.5)
    tt.render.sprites[1].loop = false
    tt.render.sprites[1].name = "arivan_lightning"
    tt.sound_events.insert = nil
    tt = E:register_t("fx_lighting_arivan_hit", "fx")
    tt.render.sprites[1].name = "arivan_lightning_hit"
    tt = E:register_t("bolt_freeze_arivan", "bolt")
    tt.bullet.acceleration_factor = 0.3
    tt.bullet.damage_type = DAMAGE_MAGICAL
    tt.bullet.damage_max = nil
    tt.bullet.damage_min = nil
    tt.bullet.hit_fx = "fx_bolt_freeze_arivan_hit"
    tt.bullet.max_speed = 450
    tt.bullet.min_speed = 150
    tt.bullet.mod = "mod_arivan_freeze"
    tt.bullet.particles_name = "ps_freeze_arivan"
    tt.bullet.pop = nil
    tt.render.sprites[1].prefix = "arivan_freeze"
    tt.render.sprites[1].name = "travel"
    tt.render.sprites[1].loop = false
    tt.render.sprites[1].anchor = vec_2(0.5, 0.5)
    tt.sound_events.insert = "ElvesHeroArivanLightingBolt"

    tt = E:register_t("fx_bolt_freeze_arivan_hit", "fx")
    E:add_comps(tt, "sound_events")
    tt.render.sprites[1].name = "arivan_freeze_hit"
    tt.sound_events.insert = "ElvesHeroArivanIceShootHit"

    tt = E:register_t("mod_arivan_freeze", "mod_freeze")
    E:add_comps(tt, "render", "tween")
    tt.modifier.duration = nil
    tt.modifier.vis_bans = F_BOSS
    tt.render.sprites[1].name = "arivan_hero_freeze_decal"
    tt.render.sprites[1].animated = false
    tt.tween.props[1].keys = {{"this.modifier.duration-0.5", 255}, {"this.modifier.duration", 0}}

    tt = E:register_t("fireball_arivan", "bullet")
    tt.bullet.acceleration_factor = 0.15
    tt.bullet.damage_flags = F_AREA
    tt.bullet.damage_max = 40
    tt.bullet.damage_min = 20
    tt.bullet.damage_radius = 70
    tt.bullet.damage_type = bor(DAMAGE_MAGICAL_EXPLOSION, DAMAGE_FX_NOT_EXPLODE)
    tt.bullet.hit_fx = "fx_fireball_arivan_hit"
    tt.bullet.max_speed = 450
    tt.bullet.min_speed = 150
    tt.bullet.particles_name = "ps_fireball_arivan"
    tt.idle_time = fts(10)
    tt.main_script.update = scripts.fireball_arivan.update
    tt.render.sprites[1].name = "idle"
    tt.render.sprites[1].prefix = "arivan_fireball"
    tt.sound_events.hit = "ElvesHeroArivanFireballExplode"
    tt.sound_events.insert = "ElvesHeroArivanFireballSummon"
    tt.sound_events.travel = "ElvesHeroArivanFireball"

    tt = E:register_t("fx_fireball_arivan_hit", "fx")
    tt.render.sprites[1].name = "arivan_fireball_hit"
    tt.render.sprites[1].sort_y_offset = -5
    tt.render.sprites[1].anchor.y = 0.20930232558139536
    tt.render.sprites[1].z = Z_OBJECTS

    tt = E:register_t("aura_arivan_stone_dance", "aura")
    E:add_comps(tt, "render")
    tt.aura.duration = -1
    tt.main_script.update = scripts.aura_arivan_stone_dance.update
    tt.stones = {}
    tt.max_stones = 0
    tt.shield_active = false
    tt.render.sprites[1].name = "arivan_shield"
    tt.render.sprites[1].hide_after_runs = 1
    tt.render.sprites[1].hidden = true
    tt.render.sprites[1].anchor.y = 0.083333333333333
    tt.owner_vis_bans = bor(F_BURN, F_POISON, F_STUN, F_NET, F_BLOOD)
    tt.rot_speed = 3 * FPS * math.pi / 180
    tt.rot_radius = 25

    tt = E:register_t("arivan_stone", "decal_tween")
    anchor_y = 0.11666666666666667
    tt.render.sprites[1].name = "arivan_stone_%d"
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].loop = false
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].name = "arivan_stone_1_0014"
    tt.render.sprites[2].anchor.y = anchor_y
    tt.render.sprites[2].z = Z_DECALS
    tt.tween.props[1].name = "offset"
    tt.tween.props[1].keys = {{0, vec_2(0, 0)}, {0.5, vec_2(0, 3)}, {1, vec_2(0, 0)}, {1.5, vec_2(0, -3)},
                              {2, vec_2(0, 0)}}
    tt.tween.props[1].loop = true
    tt.tween.remove = false
    tt.hp = 60

    tt = E:register_t("fx_arivan_stone_explosion", "fx")
    tt.render.sprites[1].name = "arivan_stone_explosion"
    tt.render.sprites[1].anchor.y = 0.11666666666666667

    tt = E:register_t("hero_arivan_ultimate", "aura")
    E:add_comps(tt, "timed_attacks", "motion", "nav_path", "render", "sound_events")
    tt.aura.duration = nil
    tt.aura.range_nodes = 60
    tt.aura.nodes_step = -5
    tt.aura.vis_bans = bor(F_CLIFF, F_WATER)
    tt.can_fire_fn = scripts.hero_arivan_ultimate.can_fire_fn
    tt.cooldown = 64
    tt.main_script.update = scripts.hero_arivan_ultimate.update
    tt.motion.max_speed = 0.5 * FPS
    tt.render.sprites[1].prefix = "arivan_twister"
    tt.render.sprites[1].anchor.y = 0.15853658536585366
    tt.sound_events.insert = "ElvesHeroArivanStorm"
    tt.sound_events.remove_stop = "ElvesHeroArivanStorm"
    tt.timed_attacks.list[1] = E:clone_c("mod_attack")
    tt.timed_attacks.list[1].cooldown = fts(5)
    tt.timed_attacks.list[1].mod = "mod_slow"
    tt.timed_attacks.list[1].max_range = 80
    tt.timed_attacks.list[2] = E:clone_c("area_attack")
    tt.timed_attacks.list[2].cooldown = fts(6)
    tt.timed_attacks.list[2].max_range = 80
    tt.timed_attacks.list[2].damage_max = nil
    tt.timed_attacks.list[2].damage_min = nil
    tt.timed_attacks.list[2].damage_type = DAMAGE_TRUE
    tt.timed_attacks.list[2].vis_bans = 0
    tt.timed_attacks.list[3] = E:clone_c("mod_attack")
    tt.timed_attacks.list[3].cooldown = fts(30)
    tt.timed_attacks.list[3].max_range = 80
    tt.timed_attacks.list[3].mod = "mod_arivan_ultimate_freeze"
    tt.timed_attacks.list[3].chance = nil
    tt.timed_attacks.list[3].vis_bans = F_BOSS
    tt.timed_attacks.list[4] = E:clone_c("bullet_attack")
    tt.timed_attacks.list[4].bullet = "lightning_arivan_ultimate"
    tt.timed_attacks.list[4].bullet_start_offset = {vec_2(6, 36)}
    tt.timed_attacks.list[4].max_range = 100
    tt.timed_attacks.list[4].chance = nil

    tt = E:register_t("lightning_arivan_ultimate", "bullet")
    tt.bullet.damage_min = 0
    tt.bullet.damage_max = 0
    tt.bullet.damage_type = DAMAGE_TRUE
    tt.bullet.mod = "fx_lighting_arivan_ultimate_hit"
    tt.bullet.hit_time = fts(4)
    tt.image_width = 40
    tt.track_target = true
    tt.main_script.update = scripts.ray_simple.update
    tt.render.sprites[1].anchor = vec_2(0, 0.5)
    tt.render.sprites[1].loop = false
    tt.render.sprites[1].name = "arivan_twister_ray"
    tt.sound_events.insert = "ElvesHeroArivanRegularRay"

    tt = E:register_t("fx_lighting_arivan_ultimate_hit", "modifier")
    E:add_comps(tt, "render")
    tt.render.sprites[1].name = "arivan_twister_ray_hit"
    tt.main_script.insert = scripts.mod_track_target.insert
    tt.main_script.remove = scripts.mod_track_target.remove
    tt.main_script.update = scripts.mod_track_target.update
    tt.modifier.duration = fts(12)

    tt = E:register_t("mod_arivan_ultimate_freeze", "mod_arivan_freeze")
    tt.modifier.duration = nil

    tt = RT("hero_phoenix", "hero")
    E:add_comps(tt, "ranged", "timed_attacks", "selfdestruct")
    tt.hero.level_stats.armor = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    tt.hero.level_stats.hp_max = {530,510,490,470,450,430,410,390,370,350}
    tt.hero.level_stats.melee_damage_max = {1, 2, 4, 4, 5, 6, 7, 8, 9, 10}
    tt.hero.level_stats.melee_damage_min = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
    tt.hero.level_stats.ranged_damage_min = {16, 19, 22, 24, 27, 30, 33, 35, 38, 41}
    tt.hero.level_stats.ranged_damage_max = {24, 29, 33, 37, 41, 45, 49, 53, 57, 61}
    tt.hero.level_stats.egg_damage = {4, 5, 5, 6, 7, 7, 8, 9, 9, 10}
    tt.hero.level_stats.egg_explosion_damage_max = {72, 84, 96, 108, 120, 132, 144, 156, 168, 180}
    tt.hero.level_stats.egg_explosion_damage_min = {48, 56, 64, 72, 80, 88, 96, 104, 112, 120}
    tt.hero.skills.inmolate = E:clone_c("hero_skill")
    tt.hero.skills.inmolate.damage_max = {115, 235, 350}
    tt.hero.skills.inmolate.damage_min = {65, 125, 190}
    tt.hero.skills.inmolate.xp_gain = {170, 340, 510}
    tt.hero.skills.inmolate.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.purification = E:clone_c("hero_skill")
    tt.hero.skills.purification.damage_min = {15, 25, 35}
    tt.hero.skills.purification.damage_max = {15, 25, 35}
    tt.hero.skills.purification.max_targets = {3, 5, 7}
    tt.hero.skills.purification.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.blazing_offspring = E:clone_c("hero_skill")
    tt.hero.skills.blazing_offspring.damage_max = {55, 70, 80}
    tt.hero.skills.blazing_offspring.damage_min = {30, 40, 45}
    tt.hero.skills.blazing_offspring.count = {2, 3, 4}
    tt.hero.skills.blazing_offspring.xp_gain = {36, 72, 108}
    tt.hero.skills.blazing_offspring.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.flaming_path = E:clone_c("hero_skill")
    tt.hero.skills.flaming_path.damage = {20, 40, 60}
    tt.hero.skills.flaming_path.xp_gain = {75, 150, 225}
    tt.hero.skills.flaming_path.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [9] = 3
    }
    tt.hero.skills.ultimate = E:clone_c("hero_skill")
    tt.hero.skills.ultimate.damage_max = {45, 105, 220, 400}
    tt.hero.skills.ultimate.damage_min = {25, 55, 120, 200}
    tt.hero.skills.ultimate.xp_gain_factor = 14.4
    tt.hero.skills.ultimate.controller_name = "hero_phoenix_ultimate"
    tt.hero.skills.ultimate.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.health.dead_lifetime = 5
    tt.health_bar.draw_order = -1
    tt.health_bar.offset = vec_2(0, 160)
    tt.health_bar.sort_y_offset = -200
    tt.health_bar.type = HEALTH_BAR_SIZE_LARGE
    tt.hero.fn_level_up = scripts.hero_phoenix.level_up
    tt.hero.tombstone_show_time = nil
    tt.hero.use_custom_spawn_point = true
    tt.idle_flip.cooldown = 10
    tt.info.damage_icon = "fireball"
    tt.info.fn = scripts.hero_phoenix.get_info
    tt.info.hero_portrait = "kr3_hero_portraits_0011"
    tt.info.i18n_key = "HERO_ELVES_PHOENIX"
    tt.info.portrait = (IS_PHONE and "portraits_hero" or "kr3_info_portraits_heroes") .. "_0011"
    tt.info.ultimate_icon = "0011"
    tt.main_script.insert = scripts.hero_phoenix.insert
    tt.main_script.update = scripts.hero_phoenix.update
    tt.motion.max_speed = 3.5 * FPS
    tt.nav_rally.requires_node_nearby = false
    tt.nav_grid.ignore_waypoints = true
    tt.nav_grid.valid_terrains = TERRAIN_ALL_MASK
    tt.nav_grid.valid_terrains_dest = TERRAIN_ALL_MASK
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = 0.19411764705882
    tt.render.sprites[1].prefix = "hero_phoenix"
    tt.render.sprites[1].angles.walk = {"idle"}
    tt.render.sprites[1].z = Z_FLYING_HEROES
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].name = "phoenix_hero_0192"
    tt.render.sprites[2].anchor.y = 0.19117647058823528
    tt.render.sprites[2].offset = vec_2(0, 0)
    tt.render.sprites[2].alpha = 90
    tt.soldier.melee_slot_offset = vec_2(0, 0)
    tt.sound_events.change_rally_point = "ElvesHeroPhoenixTaunt"
    tt.sound_events.death = "ElvesHeroPhoenixDeath"
    tt.sound_events.hero_room_select = "ElvesHeroPhoenixTauntSelect"
    tt.sound_events.insert = "ElvesHeroPhoenixTauntIntro"
    tt.sound_events.respawn = "ElvesHeroPhoenixTauntIntro"
    tt.ui.click_rect = IS_PHONE and r(-35, 90, 70, 75) or r(-25, 80, 50, 55)
    tt.unit.hit_offset = vec_2(0, 100)
    tt.unit.hide_after_death = true
    tt.unit.mod_offset = vec_2(0, 134)
    tt.vis.bans = bor(tt.vis.bans, F_EAT, F_NET, F_POISON, F_BURN)
    tt.vis.flags = bor(tt.vis.flags, F_FLYING)
    tt.ranged.attacks[1] = CC("bullet_attack")
    tt.ranged.attacks[1].bullet = "ray_phoenix"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(0, 100)}
    tt.ranged.attacks[1].cooldown = 1 + fts(17)
    tt.ranged.attacks[1].min_range = 0
    tt.ranged.attacks[1].max_range = 150
    tt.ranged.attacks[1].shoot_time = fts(23)
    tt.ranged.attacks[1].sync_animation = true
    tt.ranged.attacks[1].animation = "attack"
    tt.ranged.attacks[1].sound_shoot = "ElvesHeroPhoenixAttack"
    tt.ranged.attacks[2] = CC("bullet_attack")
    tt.ranged.attacks[2].bullet = "missile_phoenix"
    tt.ranged.attacks[2].bullet_start_offset = {vec_2(5, 115)}
    tt.ranged.attacks[2].cooldown = 22
    tt.ranged.attacks[2].disabled = true
    tt.ranged.attacks[2].min_range = 0
    tt.ranged.attacks[2].max_range = 300
    tt.ranged.attacks[2].shoot_times = {}
    tt.ranged.attacks[2].sync_animation = true
    tt.ranged.attacks[2].animations = {nil, "birdThrow"}
    tt.ranged.attacks[2].sound = "ElvesHeroPhoenixBlazingOffspringShoot"
    tt.ranged.attacks[2].loops = 1
    tt.ranged.attacks[2].xp_from_skill_once = "blazing_offspring"
    tt.timed_attacks.list[1] = CC("custom_attack")
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].cooldown = 45
    tt.timed_attacks.list[1].min_count = 3
    tt.timed_attacks.list[1].range = 60
    tt.timed_attacks.list[1].vis_flags = F_RANGED
    tt.timed_attacks.list[2] = CC("mod_attack")
    tt.timed_attacks.list[2].disabled = true
    tt.timed_attacks.list[2].animation = "birdThrow"
    tt.timed_attacks.list[2].cooldown = 30
    tt.timed_attacks.list[2].max_count = 1
    tt.timed_attacks.list[2].max_range = 150
    tt.timed_attacks.list[2].min_range = 0
    tt.timed_attacks.list[2].mod = "mod_phoenix_flaming_path"
    tt.timed_attacks.list[2].hit_time = fts(4)
    tt.timed_attacks.list[2].sound = "ElvesHeroPhoenixRingOfFireSpawn"
    tt.timed_attacks.list[2].enemies_min_count = 2
    tt.timed_attacks.list[2].enemies_range = 125
    tt.timed_attacks.list[2].enemies_vis_flags = F_RANGED
    tt.timed_attacks.list[2].enemies_vis_bans = bor(F_FLYING)
    tt.selfdestruct.animation = "suicide"
    tt.selfdestruct.damage_radius = 80
    tt.selfdestruct.damage_type = DAMAGE_PHYSICAL
    tt.selfdestruct.damage_max = nil
    tt.selfdestruct.damage_min = nil
    tt.selfdestruct.disabled = true
    tt.selfdestruct.hit_time = fts(29)
    tt.selfdestruct.hit_fx = "fx_phoenix_inmolation"
    tt.selfdestruct.sound = "ElvesHeroPhoenixImmolation"
    tt.selfdestruct.sound_args = {
        delay = fts(10)
    }
    tt.selfdestruct.dead_lifetime = 5
    tt.selfdestruct.xp_from_skill = "inmolate"
    tt.ultimate = {
        ts = 0,
        cooldown = 14.4,
        disabled = true
    }

    tt = RT("hero_phoenix_ultimate", "aura")
    AC(tt, "render", "tween")
    tt.aura.duration = 180
    tt.aura.vis_flags = F_RANGED
    tt.aura.vis_bans = F_FLYING
    tt.aura.damage_vis_bans = 0
    tt.aura.radius = 50
    tt.aura.hit_fx = "fx_phoenix_explosion"
    tt.aura.hit_decal = "decal_phoenix_ultimate"
    tt.aura.damage_type = DAMAGE_TRUE
    tt.aura.damage_max = nil
    tt.aura.damage_min = nil
    tt.cooldown = 14.4
    tt.main_script.update = scripts.hero_phoenix_ultimate.update
    tt.sound_events.insert = "ElvesHeroPhoenixFireEggDrop"
    tt.sound_events.activate = "ElvesHeroPhoenixFireEggActivate"
    tt.sound_events.explode = "ElvesHeroPhoenixFireEggExplosion"
    tt.render.sprites[1].prefix = "phoenix_ultimate"
    tt.render.sprites[1].name = "place"
    tt.render.sprites[1].anchor.y = 0.45
    tt.render.sprites[2] = CC("sprite")
    tt.render.sprites[2].name = "phoenix_hero_egg_0016"
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].alpha = 0
    tt.render.sprites[2].anchor.y = 0.45
    tt.activate_delay = 2
    tt.tween.remove = false
    tt.tween.disabled = true
    tt.tween.props[1].keys = {{0, 0}, {0.9, 255}, {1.1, 255}, {2, 0}}
    tt.tween.props[1].sprite_id = 2
    tt.tween.props[1].loop = true

    tt = RT("ray_phoenix", "bullet")
    tt.image_width = 120
    tt.main_script.update = scripts.ray_simple.update
    tt.render.sprites[1].name = "ray_phoenix"
    tt.render.sprites[1].loop = false
    tt.render.sprites[1].anchor = vec_2(0, 0.5)
    tt.bullet.hit_fx = "fx_ray_phoenix_hit"
    tt.bullet.hit_fx_ignore_hit_offset = true
    tt.bullet.damage_type = DAMAGE_NONE
    tt.bullet.hit_time = fts(4)
    tt.bullet.hit_payload = "aura_ray_phoenix"
    tt.track_target = true

    tt = RT("aura_ray_phoenix", "aura")
    tt.main_script.insert = scripts.aura_ray_phoenix.insert
    tt.main_script.update = scripts.aura_apply_damage.update
    tt.aura.cycles = 1
    tt.aura.damage_min = nil
    tt.aura.damage_max = nil
    tt.aura.damage_inc = nil
    tt.aura.damage_type = DAMAGE_TRUE
    tt.aura.radius = 45
    tt.aura.vis_bans = bor(F_FRIEND)
    tt.aura.mod = "mod_veznan_demon_fire"
    tt.aura.xp_gain_factor = 1.75

    tt = RT("missile_phoenix", "bullet")
    tt.bullet.acceleration_factor = 0.05
    tt.bullet.damage_max = nil
    tt.bullet.damage_min = nil
    tt.bullet.damage_radius = nil
    tt.bullet.damage_type = DAMAGE_TRUE
    tt.bullet.first_retarget_range = 300
    tt.bullet.hit_fx = "fx_ray_phoenix_hit"
    tt.bullet.hit_fx_ignore_hit_offset = true
    tt.bullet.max_speed = 540
    tt.bullet.min_speed = 420
    tt.bullet.particles_name = "ps_missile_phoenix"
    tt.bullet.retarget_range = 99999
    tt.bullet.speed_var = 60
    tt.bullet.turn_helicoidal_factor = 2
    tt.bullet.turn_speed = 10 * math.pi / 180 * 30
    tt.bullet.vis_bans = 0
    tt.bullet.vis_flags = F_RANGED
    tt.bullet.vis_flags = F_RANGED
    tt.bullet.xp_gain_factor = 0.6
    tt.main_script.insert = scripts.missile_phoenix.insert
    tt.main_script.update = scripts.missile.update
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].name = "phoenix_hero_bird"
    tt.sound_events.hit = "ElvesHeroPhoenixBlazingOffspringHit"

    tt = RT("missile_phoenix_small", "missile_phoenix")
    tt.bullet.damage_max = nil
    tt.bullet.damage_min = nil
    tt.bullet.particles_name = "ps_missile_phoenix_small"
    tt.bullet.xp_gain_factor = 0.12
    tt.render.sprites[1].scale = vec_1(0.65)

    tt = RT("mod_phoenix_purification", "modifier")
    tt.modifier.duration = fts(11)
    tt.fx = "fx_ray_phoenix_hit"
    tt.entity = "missile_phoenix_small"
    tt.main_script.update = scripts.mod_phoenix_purification.update

    tt = RT("mod_phoenix_egg", "mod_lava")
    tt.modifier.duration = 2
    tt.dps.damage_type = DAMAGE_TRUE
    tt.dps.damage_min = nil
    tt.dps.damage_max = nil
    tt.dps.damage_inc = 0
    tt.dps.damage_every = fts(6)

    tt = RT("mod_phoenix_flaming_path", "modifier")
    AC(tt, "custom_attack", "render", "tween")
    tt.main_script.update = scripts.mod_phoenix_flaming_path.update
    tt.modifier.duration = 6.5
    tt.custom_attack = CC("custom_attack")
    tt.custom_attack.damage = nil
    tt.custom_attack.cooldown = 2
    tt.custom_attack.fx = "decal_phoenix_flaming_path_pulse"
    tt.custom_attack.fx_start = "fx_flaming_path_start"
    tt.custom_attack.fx_end = "fx_flaming_path_end"
    tt.custom_attack.hit_time = 0.1
    tt.custom_attack.mod = "mod_veznan_demon_fire"
    tt.custom_attack.radius = 125
    tt.custom_attack.damage_type = DAMAGE_TRUE
    tt.custom_attack.sound = "ElvesHeroPhoenixRingOfFireExplode"
    tt.custom_attack.vis_flags = F_RANGED
    tt.custom_attack.vis_bans = F_FLYING
    tt.custom_offsets = {}
    tt.custom_offsets.tower_pixie = vec_2(0, -10)
    tt.render.sprites[1].name = "phoenix_hero_towerBurn_towerFx"
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].anchor.y = 0.19166666666666668
    tt.render.sprites[1].offset.y = -5
    tt.render.sprites[2] = CC("sprite")
    tt.render.sprites[2].name = "decal_flaming_path_fire"
    tt.render.sprites[2].anchor.y = 0.19166666666666668
    tt.render.sprites[2].offset.y = -5
    tt.render.sprites[2].draw_order = 20
    tt.tween.remove = false
    tt.tween.props[1].name = "scale"
    tt.tween.props[1].keys = {{0, vec_2(1, 1)}, {0.5, vec_2(1.05, 1.05)}, {1, vec_2(1, 1)}}
    tt.tween.props[2] = CC("tween_prop")
    tt.tween.props[2].keys = {{0, 0}, {0.3, 255}, {"this.modifier.duration-0.3", 255}, {"this.modifier.duration", 0}}
    tt.tween.props[3] = table.deepclone(tt.tween.props[2])
    tt.tween.props[3].sprite_id = 2

    tt = RT("aura_phoenix_egg", "aura")
    AC(tt, "render")
    tt.render.sprites[1].prefix = "hero_phoenix_egg"
    tt.render.sprites[1].name = "spawn"
    tt.render.sprites[1].anchor.y = 0.2
    tt.render.sprites[1].hidden = true
    tt.main_script.update = scripts.aura_phoenix_egg.update
    tt.aura.cycle_time = fts(6)
    tt.aura.radius = 50
    tt.aura.vis_flags = F_RANGED
    tt.aura.vis_bans = F_FLYING
    tt.aura.mod = "mod_phoenix_egg"
    tt.aura.duration = 5
    tt.custom_attack = CC("custom_attack")
    tt.custom_attack.radius = 90
    tt.custom_attack.damage_max = nil
    tt.custom_attack.damage_min = nil
    tt.custom_attack.damage_type = DAMAGE_TRUE
    tt.custom_attack.vis_flags = F_RANGED
    tt.custom_attack.hit_fx = "fx_phoenix_explosion"

    tt = RT("aura_phoenix_purification", "aura")
    tt.aura.cycle_time = fts(9)
    tt.aura.duration = -1
    tt.aura.mod = "mod_phoenix_purification"
    tt.aura.radius = 125
    tt.aura.targets_per_cycle = nil
    tt.aura.track_source = true
    tt.aura.track_dead = true
    tt.aura.vis_flags = bor(F_RANGED, F_MOD)
    tt.aura.vis_bans = bor(F_FRIEND)
    tt.main_script.insert = scripts.aura_apply_mod.insert
    tt.main_script.update = scripts.aura_apply_mod.update

    tt = E:register_t("hero_bravebark", "hero")
    E:add_comps(tt, "melee", "teleport", "timed_attacks")
    tt.hero.level_stats.armor = {0.13, 0.16, 0.19, 0.22, 0.25, 0.28, 0.31, 0.34, 0.37, 0.4}
    tt.hero.level_stats.hp_max = {375, 400, 425, 450, 475, 500, 525, 550, 575, 600}
    tt.hero.level_stats.melee_damage_max = {29, 34, 38, 43, 48, 53, 58, 62, 67, 72}
    tt.hero.level_stats.melee_damage_min = {19, 22, 26, 29, 32, 35, 38, 42, 45, 48}
    tt.hero.skills.rootspikes = E:clone_c("hero_skill")
    tt.hero.skills.rootspikes.damage_max = {50, 90, 120}
    tt.hero.skills.rootspikes.damage_min = {30, 50, 80}
    tt.hero.skills.rootspikes.xp_gain = {100, 200, 300}
    tt.hero.skills.rootspikes.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.oakseeds = E:clone_c("hero_skill")
    tt.hero.skills.oakseeds.xp_gain = {50, 100, 150}
    tt.hero.skills.oakseeds.soldier_hp_max = {50, 100, 150}
    tt.hero.skills.oakseeds.soldier_damage_max = {4, 8, 12}
    tt.hero.skills.oakseeds.soldier_damage_min = {2, 4, 6}
    tt.hero.skills.oakseeds.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.branchball = E:clone_c("hero_skill")
    tt.hero.skills.branchball.hp_max = {300, 750, 9000000000}
    tt.hero.skills.branchball.xp_gain = {157, 314, 471}
    tt.hero.skills.branchball.xp_level_steps = {
        [4] = 1,
        [7] = 2,
        [10] = 3
    }
    tt.hero.skills.springsap = E:clone_c("hero_skill")
    tt.hero.skills.springsap.duration = {2, 3, 4}
    tt.hero.skills.springsap.hp_per_cycle = {7, 14, 21}
    tt.hero.skills.springsap.xp_gain = {200, 300, 400}
    tt.hero.skills.springsap.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.ultimate = E:clone_c("hero_skill")
    tt.hero.skills.ultimate.controller_name = "hero_bravebark_ultimate"
    tt.hero.skills.ultimate.count = {6, 9, 12, 15}
    tt.hero.skills.ultimate.damage = {30, 40, 50, 60}
    tt.hero.skills.ultimate.xp_gain_factor = 14.4
    tt.hero.skills.ultimate.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.health.dead_lifetime = 15
    tt.health_bar.offset = vec_2(0, 62)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_bravebark.level_up
    tt.hero.hide_after_death = false
    tt.hero.tombstone_show_time = nil
    tt.info.i18n_key = "HERO_ELVES_FOREST_ELEMENTAL"
    tt.info.ultimate_icon = "0007"
    tt.info.ultimate_pointer_style = "area"
    tt.info.fn = scripts.hero_basic.get_info
    tt.info.hero_portrait = "kr3_hero_portraits_0007"
    tt.info.portrait = (IS_PHONE and "portraits_hero" or "kr3_info_portraits_heroes") .. "_0007"
    tt.main_script.update = scripts.hero_bravebark.update
    tt.motion.max_speed = 2 * FPS
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = 0.15517241379310345
    tt.render.sprites[1].prefix = "hero_bravebark"
    tt.soldier.melee_slot_offset = vec_2(24, 0)
    tt.sound_events.change_rally_point = "ElvesHeroForestElementalTaunt"
    tt.sound_events.death = "ElvesHeroForestElementalDeath"
    tt.sound_events.respawn = "ElvesHeroForestElementalTauntIntro"
    tt.sound_events.insert = "ElvesHeroForestElementalTauntIntro"
    tt.sound_events.hero_room_select = "ElvesHeroForestElementalTauntSelect"
    tt.teleport.min_distance = 120
    tt.teleport.delay = fts(10)
    tt.teleport.fx_out = "fx_bravebark_teleport_out"
    tt.teleport.fx_in = "fx_bravebark_teleport_in"
    tt.ui.click_rect = IS_PHONE and r(-35, -15, 70, 80) or r(-20, -5, 40, 60)
    tt.unit.hit_offset = vec_2(0, 25)
    tt.unit.mod_offset = vec_2(0, 25)
    tt.melee.attacks[1].cooldown = 2
    tt.melee.attacks[1].hit_time = fts(16)
    tt.melee.attacks[1].hit_fx = "fx_bravebark_melee_hit"
    tt.melee.attacks[1].hit_decal = "decal_bravebark_melee_hit"
    tt.melee.attacks[1].hit_offset = vec_2(42, 0)
    tt.melee.attacks[1].xp_gain_factor = 2.7
    tt.melee.attacks[1].sound_hit = "ElvesHeroForestElementalAttack"
    tt.melee.attacks[2] = E:clone_c("melee_attack")
    tt.melee.attacks[2].disabled = true
    tt.melee.attacks[2].cooldown = 35
    tt.melee.attacks[2].hp_max = nil
    tt.melee.attacks[2].fn_can = function(t, s, a, target)
        return target.health.hp <= a.hp_max
    end
    tt.melee.attacks[2].mod = "mod_bravebark_branchball"
    tt.melee.attacks[2].damage_type = bor(DAMAGE_NONE, DAMAGE_NO_DODGE)
    tt.melee.attacks[2].animation = "branchBall"
    tt.melee.attacks[2].hit_time = 0
    tt.melee.attacks[2].ignore_rally_change = true
    tt.melee.attacks[2].vis_bans = bor(F_BOSS)
    tt.melee.attacks[2].vis_flags = bor(F_BLOCK, F_EAT, F_INSTAKILL)
    tt.melee.attacks[2].xp_from_skill = "branchball"
    tt.melee.range = 65
    tt.timed_attacks.list[1] = E:clone_c("area_attack")
    tt.timed_attacks.list[1].animation = "rootSpikes"
    tt.timed_attacks.list[1].cooldown = 25
    tt.timed_attacks.list[1].damage_radius = 100
    tt.timed_attacks.list[1].damage_type = DAMAGE_PHYSICAL
    tt.timed_attacks.list[1].decal_range = 50
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].hit_decal = "decal_bravebark_rootspikes_hit"
    tt.timed_attacks.list[1].hit_offset = vec_2(35, 0)
    tt.timed_attacks.list[1].hit_time = fts(17)
    tt.timed_attacks.list[1].max_range = 75
    tt.timed_attacks.list[1].sound = "ElvesHeroForestElementalSpikes"
    tt.timed_attacks.list[1].trigger_count = 3
    tt.timed_attacks.list[1].vis_flags = bor(F_RANGED, F_BLOCK)
    tt.timed_attacks.list[1].xp_from_skill = "rootspikes"
    tt.timed_attacks.list[2] = E:clone_c("spawn_attack")
    tt.timed_attacks.list[2].animation = "oakSeeds"
    tt.timed_attacks.list[2].bullet = "bullet_bravebark_seed"
    tt.timed_attacks.list[2].cooldown = 25
    tt.timed_attacks.list[2].count = 2
    tt.timed_attacks.list[2].disabled = true
    tt.timed_attacks.list[2].entity = "soldier_bravebark"
    tt.timed_attacks.list[2].max_range = 100
    tt.timed_attacks.list[2].sound = "ElvesHeroForestElementalTrees"
    tt.timed_attacks.list[2].spawn_offset = vec_2(58, 65)
    tt.timed_attacks.list[2].spawn_time = fts(12)
    tt.timed_attacks.list[2].vis_flags = bor(F_RANGED, F_BLOCK)
    tt.timed_attacks.list[2].xp_from_skill = "oakseeds"
    tt.springsap = {}
    tt.springsap.disabled = true
    tt.springsap.animations = {"springsap_start", "springsap_loop", "springsap_end"}
    tt.springsap.aura = "aura_bravebark_springsap"
    tt.springsap.cooldown = 35
    tt.springsap.trigger_hp_factor = 0.3
    tt.springsap.radius = 100
    tt.springsap.sound = "ElvesHeroForestElementalHealing"
    tt.springsap.ts = 0
    tt.ultimate = {
        ts = 0,
        cooldown = 32,
        disabled = true,
        range = 180
    }

    tt = E:register_t("hero_bravebark_ultimate")
    E:add_comps(tt, "pos", "main_script", "sound_events")
    tt.can_fire_fn = scripts.hero_bravebark_ultimate.can_fire_fn
    tt.cooldown = 32
    tt.count = nil
    tt.main_script.update = scripts.hero_bravebark_ultimate.update
    tt.sound_events.insert = "ElvesHeroForestElementalUltimate"
    tt.sep_nodes_min = 2
    tt.sep_nodes_max = 4
    tt.show_delay_min = 0.1
    tt.show_delay_max = 0.2
    tt.decal = "decal_bravebark_ultimate"
    tt.damage = nil
    tt.damage_radius = 40
    tt.damage_type = DAMAGE_TRUE
    tt.vis_flags = bor(F_STUN)
    tt.vis_bans = bor(F_FLYING, F_BOSS)
    tt.mod = "mod_bravebark_ultimate"

    tt = E:register_t("hero_catha", "hero")
    E:add_comps(tt, "melee", "ranged", "timed_attacks")
    tt.hero.level_stats.armor = {0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45}
    tt.hero.level_stats.hp_max = {210, 220, 230, 240, 250, 260, 270, 280, 290, 300}
    tt.hero.level_stats.melee_damage_max = {8, 9, 10, 12, 13, 14, 16, 17, 18, 20}
    tt.hero.level_stats.melee_damage_min = {4, 5, 6, 6, 7, 8, 8, 9, 10, 11}
    tt.hero.level_stats.ranged_damage_min = {4, 5, 6, 6, 7, 8, 8, 9, 10, 11}
    tt.hero.level_stats.ranged_damage_max = {8, 9, 10, 12, 13, 14, 16, 17, 18, 20}
    tt.hero.skills.soul = E:clone_c("hero_skill")
    tt.hero.skills.soul.xp_gain_factor = 70
    tt.hero.skills.soul.heal_hp = {50, 100, 150}
    tt.hero.skills.soul.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.tale = E:clone_c("hero_skill")
    tt.hero.skills.tale.max_count = {2, 3, 4}
    tt.hero.skills.tale.hp_max = {30, 40, 50}
    tt.hero.skills.tale.xp_gain_factor = 70
    tt.hero.skills.tale.xp_gain_factor = 0
    tt.hero.skills.tale.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.fury = E:clone_c("hero_skill")
    tt.hero.skills.fury.count = {2, 3, 4}
    tt.hero.skills.fury.damage_min = {10, 12, 18}
    tt.hero.skills.fury.damage_max = {30, 40, 50}
    tt.hero.skills.fury.xp_gain_factor = 30
    tt.hero.skills.fury.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [9] = 3
    }
    tt.hero.skills.curse = E:clone_c("hero_skill")
    tt.hero.skills.curse.chance = {0.2, 0.2, 0.2}
    tt.hero.skills.curse.duration = {0.5, 1, 1.5}
    tt.hero.skills.curse.chance_factor_tale = 0.5
    tt.hero.skills.curse.xp_gain = {0, 0, 0}
    tt.hero.skills.curse.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.ultimate = E:clone_c("hero_skill")
    tt.hero.skills.ultimate.controller_name = "hero_catha_ultimate"
    tt.hero.skills.ultimate.duration = {1.5, 3, 4.5, 6}
    tt.hero.skills.ultimate.duration_boss = {0.75, 1.5, 2.25, 3}
    tt.hero.skills.ultimate.range = {160, 180, 200, 220}
    tt.hero.skills.ultimate.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.hero.skills.ultimate.xp_gain_factor = 20
    tt.health.dead_lifetime = 15
    tt.health_bar.offset = vec_2(0, 45)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_catha.level_up
    tt.hero.tombstone_show_time = fts(90)
    tt.info.damage_icon = "arrow"
    tt.info.fn = scripts.hero_basic.get_info
    tt.info.hero_portrait = "kr3_hero_portraits_0003"
    tt.info.portrait = (IS_PHONE and "portraits_hero" or "kr3_info_portraits_heroes") .. "_0003"
    tt.info.i18n_key = "HERO_ELVES_PIXIE"
    tt.info.ultimate_icon = "0003"
    tt.info.ultimate_pointer_style = "area"
    tt.main_script.update = scripts.hero_catha.update
    tt.motion.max_speed = 3.5 * FPS
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = 0.37301587301587
    tt.render.sprites[1].prefix = "hero_catha"
    tt.render.sprites[1].angles.ranged = {"shoot", "shootUp", "shoot"}
    tt.render.sprites[1].angles_custom = {
        ranged = {45, 135, 210, 315}
    }
    tt.render.sprites[1].angles_flip_vertical = {
        ranged = true
    }
    tt.soldier.melee_slot_offset = vec_2(2, 0)
    tt.sound_events.change_rally_point = "ElvesHeroCathaTaunt"
    tt.sound_events.death = "ElvesHeroCathaDeath"
    tt.sound_events.respawn = "ElvesHeroCathaTauntIntro"
    tt.sound_events.insert = "ElvesHeroCathaTauntIntro"
    tt.sound_events.hero_room_select = "ElvesHeroCathaTauntSelect"
    tt.unit.hit_offset = vec_2(0, 16)
    tt.unit.mod_offset = vec_2(0, 22)
    tt.melee.attacks[1].cooldown = 1
    tt.melee.attacks[1].hit_time = fts(12)
    tt.melee.attacks[1].xp_gain_factor = 4
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.range = 50
    tt.ranged.attacks[1] = CC("bullet_attack")
    tt.ranged.attacks[1].max_range = 175
    tt.ranged.attacks[1].min_range = 20
    tt.ranged.attacks[1].cooldown = 1
    tt.ranged.attacks[1].bullet = "knife_catha"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(9, 27)}
    tt.ranged.attacks[1].shoot_time = fts(7)
    tt.timed_attacks.list[1] = CC("bullet_attack")
    tt.timed_attacks.list[1].animation = "explode"
    tt.timed_attacks.list[1].bullet = "catha_fury"
    tt.timed_attacks.list[1].cooldown = 10
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].max_range = 150
    tt.timed_attacks.list[1].min_range = 40
    tt.timed_attacks.list[1].shoot_time = fts(13)
    tt.timed_attacks.list[1].sound = "ElvesHeroCathaFurySummon"
    tt.timed_attacks.list[1].vis_bans = bor(F_FLYING, F_CLIFF, F_WATER)
    tt.timed_attacks.list[1].vis_flags = bor(F_RANGED)
    tt.timed_attacks.list[2] = CC("mod_attack")
    tt.timed_attacks.list[2].animation = "cloudSpell"
    tt.timed_attacks.list[2].mod = "mod_catha_soul"
    tt.timed_attacks.list[2].cooldown = 12
    tt.timed_attacks.list[2].disabled = true
    tt.timed_attacks.list[2].max_range = 100
    tt.timed_attacks.list[2].max_count = 3
    tt.timed_attacks.list[2].vis_flags = bor(F_FRIEND)
    tt.timed_attacks.list[2].sound = "ElvesHeroCathaSoul"
    tt.timed_attacks.list[2].shoot_time = fts(30)
    tt.timed_attacks.list[2].shoot_fx = "fx_catha_soul"
    tt.timed_attacks.list[2].excluded_templates = {"soldier_xin_shadow", "soldier_xin_ultimate"}
    tt.timed_attacks.list[2].max_hp_factor = 0.7
    tt.timed_attacks.list[3] = CC("spawn_attack")
    tt.timed_attacks.list[3].animation = "cloneSpell"
    tt.timed_attacks.list[3].cooldown = 16
    tt.timed_attacks.list[3].disabled = true
    tt.timed_attacks.list[3].entity = "soldier_catha"
    tt.timed_attacks.list[3].entity_offsets = {vec_2(30, 30), vec_2(-30, -30), vec_2(30, -30), vec_2(-30, 30)}
    tt.timed_attacks.list[3].max_count = nil
    tt.timed_attacks.list[3].max_range = 150
    tt.timed_attacks.list[3].min_range = 20
    tt.timed_attacks.list[3].sound = "ElvesHeroCathaTaleSummon"
    tt.timed_attacks.list[3].sound_args = {
        delay = fts(15)
    }
    tt.timed_attacks.list[3].spawn_time = fts(26)
    tt.timed_attacks.list[3].vis_bans = 0
    tt.timed_attacks.list[3].vis_flags = F_RANGED
    tt.ultimate = {
        ts = 0,
        cooldown = 20,
        disabled = true,
        range = 80
    }

    tt = E:register_t("hero_catha_ultimate")
    E:add_comps(tt, "pos", "main_script", "sound_events", "render")
    tt.cooldown = 20
    tt.range = 80
    tt.duration = 0
    tt.duration_boss = 0
    tt.mod = "mod_catha_ultimate"
    tt.hit_fx = "fx_catha_ultimate"
    tt.main_script.update = scripts.hero_catha_ultimate.update
    tt.sound_events.insert = "ElvesHeroCathaDust"
    tt.vis_flags = bor(F_RANGED, F_MOD)
    tt.vis_bans = 0
    tt.render.sprites[1].name = "hero_catha_ultimate"
    tt.render.sprites[1].anchor.y = 0.373
    tt.hit_time = fts(22)

    tt = RT("knife_catha", "arrow")
    tt.render.sprites[1].name = "catha_hero_proy_0001"
    tt.render.sprites[1].animated = false
    tt.bullet.damage_min = nil
    tt.bullet.damage_max = nil
    tt.bullet.flight_time = fts(9)
    tt.bullet.hit_fx = "fx_knife_catha_hit"
    tt.bullet.miss_decal = nil
    tt.bullet.mod = nil
    tt.bullet.xp_gain_factor = 3.9

    tt = RT("hero_lilith", "hero")
    E:add_comps(tt, "melee", "ranged", "timed_attacks", "revive")
    tt.hero.level_stats.armor = {0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55}
    tt.hero.level_stats.hp_max = {240, 260, 280, 300, 320, 340, 360, 380, 400, 420}
    tt.hero.level_stats.melee_damage_max = {14, 16, 17, 18, 19, 20, 22, 23, 24, 25}
    tt.hero.level_stats.melee_damage_min = {10, 10, 11, 12, 13, 14, 14, 15, 16, 17}
    tt.hero.level_stats.ranged_damage_max = {28, 32, 34, 36, 38, 40, 44, 46, 48, 50}
    tt.hero.level_stats.ranged_damage_min = {20, 21, 22, 24, 26, 28, 29, 30, 32, 34}
    tt.hero.skills.reapers_harvest = E:clone_c("hero_skill")
    tt.hero.skills.reapers_harvest.damage = {110, 220, 330}
    tt.hero.skills.reapers_harvest.instakill_chance = {0.1, 0.2, 0.3}
    tt.hero.skills.reapers_harvest.xp_gain = {105, 210, 315}
    tt.hero.skills.reapers_harvest.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.soul_eater = E:clone_c("hero_skill")
    tt.hero.skills.soul_eater.damage_factor = {0.3, 0.6, 0.9}
    tt.hero.skills.soul_eater.xp_gain = {10, 20, 30}
    tt.hero.skills.soul_eater.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.infernal_wheel = E:clone_c("hero_skill")
    tt.hero.skills.infernal_wheel.damage = {6, 12, 18}
    tt.hero.skills.infernal_wheel.xp_gain = {30, 60, 120}
    tt.hero.skills.infernal_wheel.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [9] = 3
    }
    tt.hero.skills.resurrection = E:clone_c("hero_skill")
    tt.hero.skills.resurrection.chance = {0.1, 0.2, 0.3}
    tt.hero.skills.resurrection.xp_gain = {60, 120, 180}
    tt.hero.skills.resurrection.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.ultimate = E:clone_c("hero_skill")
    tt.hero.skills.ultimate.controller_name = "hero_lilith_ultimate"
    tt.hero.skills.ultimate.angel_damage = {25, 32, 40, 50}
    tt.hero.skills.ultimate.angel_count = {3, 4, 5, 6}
    tt.hero.skills.ultimate.meteor_damage = {40, 80, 120, 160}
    tt.hero.skills.ultimate.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.hero.skills.ultimate.xp_gain_factor = 40
    tt.health.dead_lifetime = 15
    tt.health_bar.offset = vec_2(0, 54)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_lilith.level_up
    tt.hero.tombstone_show_time = fts(90)
    tt.info.hero_portrait = "kr3_hero_portraits_0016"
    tt.info.i18n_key = "HERO_ELVES_FALLEN_ANGEL"
    tt.info.portrait = (IS_PHONE and "portraits_hero" or "kr3_info_portraits_heroes") .. "_0016"
    tt.main_script.insert = scripts.hero_lilith.insert
    tt.main_script.update = scripts.hero_lilith.update
    tt.motion.max_speed = 3.3 * FPS
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = 0.1666
    tt.render.sprites[1].prefix = "hero_lilith"
    tt.render.sprites[1].alpha = 128
    tt.render.sprites[1].color = {255, 255, 155}
    tt.soldier.melee_slot_offset = vec_2(0, 0)
    tt.sound_events.change_rally_point = "ElvesHeroLilithTaunt"
    tt.sound_events.death = "ElvesHeroLilithDeath"
    tt.sound_events.insert = "ElvesHeroLilithTauntIntro"
    tt.sound_events.respawn = "ElvesHeroLilithTauntIntro"
    tt.sound_events.hero_room_select = "ElvesHeroLilithTauntSelect"
    tt.unit.hit_offset = vec_2(0, 16)
    tt.unit.marker_offset = vec_2(0, 0)
    tt.unit.mod_offset = vec_2(0, 22)
    tt.revive.disabled = true
    tt.revive.chance = 0
    tt.revive.animation = "resurrection"
    tt.revive.sound = "ElvesHeroLilithResurrection"
    tt.revive.protect = 0.1
    tt.revive.resist = {
        bans = bor(F_STUN, F_BLOOD, F_POISON, F_BURN),
        duration = 8,
        cost = 0.06,
        side_effect = function(this, store)
            this.melee.attacks[3].ts = 0
            this.melee.attacks[4].ts = 0
        end
    }
    tt.soul_eater = {}
    tt.soul_eater.last_ts = 0
    tt.soul_eater.active = true
    tt.melee.attacks[1].cooldown = 1
    tt.melee.attacks[1].hit_time = fts(14)
    tt.melee.attacks[1].shared_cooldown = true
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].xp_gain_factor = 3.2
    tt.melee.attacks[1].side_effect = function(this, store, attack, target)
        this.revive.protect = this.revive.protect + 0.01
    end
    tt.melee.attacks[2] = table.deepclone(tt.melee.attacks[1])
    tt.melee.attacks[2].animation = "attack2"
    tt.melee.attacks[2].chance = 1
    tt.melee.attacks[3] = CC("melee_attack")
    tt.melee.attacks[3].side_effect = function(this, store, attack, target)
        this.revive.protect = this.revive.protect + 0.01
    end
    tt.melee.attacks[3].disabled = true
    tt.melee.attacks[3].cooldown = 20
    tt.melee.attacks[3].damage_type = bor(DAMAGE_TRUE, DAMAGE_NO_DODGE)
    tt.melee.attacks[3].animation = "reapersHarvest"
    tt.melee.attacks[3].hit_time = fts(30)
    tt.melee.attacks[3].sound = "ElvesHeroLilithReapersHarvest"
    tt.melee.attacks[3].sound_args = {
        delay = fts(7)
    }
    tt.melee.attacks[3].cooldown_group = "reapers_harvest"
    tt.melee.attacks[3].xp_from_skill = "reapers_harvest"
    tt.melee.attacks[3].hit_decal = "decal_lilith_reapers_harvest"
    tt.melee.attacks[3].hit_offset = vec_2(30, 0)
    tt.melee.attacks[4] = table.deepclone(tt.melee.attacks[3])
    tt.melee.attacks[4].side_effect = function(this, store, attack, target)
        this.revive.protect = this.revive.protect + 0.02
        this.soul_eater.last_ts = store.tick_ts - E:get_template("aura_lilith_soul_eater").aura.cooldown
        scripts.heal(this, this.health.hp_max * 0.2)
    end
    tt.melee.attacks[4].instakill = true
    tt.melee.attacks[4].chance = 0.1
    tt.melee.attacks[4].origin_chance = 0.1
    tt.melee.attacks[4].vis_bans = bor(F_BOSS)
    tt.melee.attacks[4].vis_flags = bor(F_INSTAKILL)
    tt.melee.cooldown = 1
    tt.melee.range = 57.5
    tt.ranged.attacks[1] = CC("bullet_attack")
    tt.ranged.attacks[1].animation = "throw"
    tt.ranged.attacks[1].max_range = 170
    tt.ranged.attacks[1].min_range = 20
    tt.ranged.attacks[1].cooldown = 2
    tt.ranged.attacks[1].bullet = "bullet_lilith"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(5, 40)}
    tt.ranged.attacks[1].shoot_time = fts(28)
    tt.ranged.attacks[1].node_prediction = fts(28)
    tt.ranged.attacks[1].side_effect = function(this, store, attack, target)
        this.revive.protect = this.revive.protect + 0.015
    end
    tt.timed_attacks.list[1] = E:clone_c("aura_attack")
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].animation = "infernalWheel"
    tt.timed_attacks.list[1].bullet = "aura_lilith_infernal_wheel"
    tt.timed_attacks.list[1].cooldown = 22
    tt.timed_attacks.list[1].shoot_time = fts(12)
    tt.timed_attacks.list[1].range = 175
    tt.timed_attacks.list[1].sound = "ElvesHeroLilithInfernalWheel"
    tt.timed_attacks.list[1].vis_bans = bor(F_FLYING)
    tt.timed_attacks.list[1].vis_flags = bor(F_RANGED)
    tt.ultimate = {
        ts = 0,
        cooldown = 44,
        disabled = true
    }

    tt = RT("hero_lilith_ultimate")
    AC(tt, "pos", "main_script", "sound_events")
    tt.main_script.update = scripts.hero_lilith_ultimate.update
    tt.cooldown = 40
    tt.angel_range = 125
    tt.angel_entity = "soldier_lilith_angel"
    tt.angel_mod = "mod_lilith_angel_stun"
    tt.angel_delay = 0.5
    tt.angel_vis_flags = bor(F_RANGED)
    tt.angel_vis_bans = bor(F_FRIEND, F_FLYING)
    tt.meteor_bullet = "meteor_lilith"
    tt.meteor_chance = 0.5
    tt.meteor_node_spread = 5

    tt = RT("bullet_lilith", "arrow")
    tt.bullet.damage_max = nil
    tt.bullet.damage_min = nil
    tt.bullet.flight_time = fts(10)
    tt.bullet.hide_radius = 1
    tt.bullet.hit_fx = "fx_lilith_ranged_hit"
    tt.bullet.miss_fx = "fx_lilith_ranged_hit"
    tt.bullet.miss_decal = nil
    tt.bullet.particles_name = "ps_bullet_lilith_trail"
    tt.bullet.predict_target_pos = true
    tt.bullet.use_unit_damage_factor = true
    tt.bullet.xp_gain_factor = 3.2
    tt.render.sprites[1].name = "fallen_angel_hero_proy_0001-f"
    tt.sound_events.insert = "ElvesHeroLilithRangeShoot"

    tt = E:register_t("hero_xin", "hero")
    E:add_comps(tt, "melee", "timed_attacks")
    tt.hero.level_stats.armor = {0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25}
    tt.hero.level_stats.hp_max = {330, 360, 390, 420, 450, 480, 510, 540, 570, 600}
    tt.hero.level_stats.melee_damage_max = {14, 17, 20, 23, 25, 28, 31, 33, 36, 40}
    tt.hero.level_stats.melee_damage_min = {10, 11, 13, 15, 17, 19, 20, 22, 24, 25}
    tt.hero.skills.daring_strike = E:clone_c("hero_skill")
    tt.hero.skills.daring_strike.damage_max = {70, 125, 175}
    tt.hero.skills.daring_strike.damage_min = {50, 80, 115}
    tt.hero.skills.daring_strike.xp_gain_factor = 66
    tt.hero.skills.daring_strike.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [9] = 3
    }
    tt.hero.skills.inspire = E:clone_c("hero_skill")
    tt.hero.skills.inspire.duration = {3, 5, 7}
    tt.hero.skills.inspire.xp_gain_factor = 55
    tt.hero.skills.inspire.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.mind_over_body = E:clone_c("hero_skill")
    tt.hero.skills.mind_over_body.duration = {4, 7, 10}
    tt.hero.skills.mind_over_body.heal_every = {fts(5), fts(5), fts(5)}
    tt.hero.skills.mind_over_body.heal_hp = {4, 6, 8}
    tt.hero.skills.mind_over_body.damage_buff = {14, 23, 31}
    tt.hero.skills.mind_over_body.xp_gain_factor = 55
    tt.hero.skills.mind_over_body.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.panda_style = E:clone_c("hero_skill")
    tt.hero.skills.panda_style.damage_max = {55, 100, 140}
    tt.hero.skills.panda_style.damage_min = {30, 55, 80}
    tt.hero.skills.panda_style.xp_gain_factor = 88
    tt.hero.skills.panda_style.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.ultimate = E:clone_c("hero_skill")
    tt.hero.skills.ultimate.controller_name = "hero_xin_ultimate"
    tt.hero.skills.ultimate.count = {2, 4, 5, 6}
    tt.hero.skills.ultimate.damage = {45, 60, 80, 90}
    tt.hero.skills.ultimate.xp_gain_factor = 24
    tt.hero.skills.ultimate.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.health.dead_lifetime = 15
    tt.health_bar.offset = vec_2(0, 55)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_xin.level_up
    tt.hero.tombstone_show_time = fts(90)
    tt.info.hero_portrait = "kr3_hero_portraits_0008"
    tt.info.portrait = (IS_PHONE and "portraits_hero" or "kr3_info_portraits_heroes") .. "_0008"
    tt.info.i18n_key = "HERO_ELVES_PANDA"
    tt.main_script.update = scripts.hero_xin.update
    tt.motion.max_speed = 2.7 * FPS
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = 0.25925925925925924
    tt.render.sprites[1].prefix = "hero_xin"
    tt.soldier.melee_slot_offset = vec_2(12, 0)
    tt.sound_events.change_rally_point = "ElvesHeroXinTaunt"
    tt.sound_events.death = "ElvesHeroXinDeath"
    tt.sound_events.respawn = "ElvesHeroXinTauntIntro"
    tt.sound_events.insert = "ElvesHeroXinTauntIntro"
    tt.sound_events.hero_room_select = "ElvesHeroXinTauntSelect"
    tt.unit.hit_offset = vec_2(0, 18)
    tt.unit.mod_offset = vec_2(0, 23)
    tt.melee.attacks[1].cooldown = 1.5
    tt.melee.attacks[1].hit_time = fts(12)
    tt.melee.attacks[1].xp_gain_factor = 4.3
    tt.melee.attacks[1].sound_hit = "ElvesHeroXinPoleHit"
    tt.melee.attacks[1].shared_cooldown = true
    tt.melee.attacks[1].side_effect = function(this, store, attack, target)
        this.timed_attacks.list[3].ts = this.timed_attacks.list[3].ts - this.timed_attacks.list[3].cooldown * 0.1
    end
    tt.melee.attacks[2] = table.deepclone(tt.melee.attacks[1])
    tt.melee.attacks[2].chance = 0.5
    tt.melee.attacks[2].animation = "attack2"
    tt.melee.attacks[2].side_effect = function(this, store, attack, target)
        if this.mind_over_body_active then
            this.melee.attacks[3].ts = this.melee.attacks[3].ts - this.melee.attacks[3].cooldown * 0.1
            this.timed_attacks.list[1].ts = this.timed_attacks.list[1].ts - this.timed_attacks.list[1].cooldown * 0.1
            this.timed_attacks.list[2].ts = this.timed_attacks.list[2].ts - this.timed_attacks.list[2].cooldown * 0.1
            this.ultimate.ts = this.ultimate.ts - this.ultimate.cooldown * 0.1
        end
    end
    tt.melee.attacks[3] = E:clone_c("area_attack")
    tt.melee.attacks[3].animation = "buttStrike"
    tt.melee.attacks[3].cooldown = 26
    tt.melee.attacks[3].count = 999
    tt.melee.attacks[3].damage_max = nil
    tt.melee.attacks[3].damage_min = nil
    tt.melee.attacks[3].damage_radius = 60
    tt.melee.attacks[3].damage_type = DAMAGE_PHYSICAL
    tt.melee.attacks[3].disabled = true
    tt.melee.attacks[3].hit_fx = "fx_xin_panda_style_smoke"
    tt.melee.attacks[3].hit_time = fts(19)
    tt.melee.attacks[3].sound = "ElvesHeroXinPandaStyle"
    tt.melee.attacks[3].xp_from_skill = "panda_style"
    tt.melee.range = 65
    tt.nav_grid.ignore_waypoints = true
    tt.timed_attacks.list[1] = E:clone_c("custom_attack")
    tt.timed_attacks.list[1].animations = {"teleport_out", "teleport_hit", "teleport_hit2", "teleport_hit_out",
                                           "teleport_in"}
    tt.timed_attacks.list[1].sounds = {"ElvesHeroXinAfterTeleportOut", "ElvesHeroXinDaringStrikeHit", nil, nil,
                                       "ElvesHeroXinAfterTeleportIn"}
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].cooldown = 15
    tt.timed_attacks.list[1].vis_flags = bor(F_RANGED, F_BLOCK)
    tt.timed_attacks.list[1].vis_bans = bor(F_FLYING)
    tt.timed_attacks.list[1].max_range = 9999
    tt.timed_attacks.list[1].min_range = 0
    tt.timed_attacks.list[1].damage_max = nil
    tt.timed_attacks.list[1].damage_min = nil
    tt.timed_attacks.list[1].node_margin = 10
    tt.timed_attacks.list[1].damage_type = DAMAGE_TRUE
    tt.timed_attacks.list[1].mod = "mod_xin_slow"
    tt.timed_attacks.list[2] = E:clone_c("mod_attack")
    tt.timed_attacks.list[2].animation = "inspire"
    tt.timed_attacks.list[2].disabled = true
    tt.timed_attacks.list[2].cast_time = fts(15)
    tt.timed_attacks.list[2].cooldown = 16
    tt.timed_attacks.list[2].max_count = 7
    tt.timed_attacks.list[2].max_range = 90
    tt.timed_attacks.list[2].min_count = 3
    tt.timed_attacks.list[2].mod = "mod_xin_inspire"
    tt.timed_attacks.list[2].sound = "ElvesHeroXinInspire"
    tt.timed_attacks.list[2].vis_bans = bor(F_FLYING)
    tt.timed_attacks.list[2].vis_flags = bor(F_RANGED)
    tt.timed_attacks.list[3] = E:clone_c("mod_attack")
    tt.timed_attacks.list[3].animation = "drink"
    tt.timed_attacks.list[3].disabled = true
    tt.timed_attacks.list[3].cooldown = 20
    tt.timed_attacks.list[3].min_health_factor = 0.7
    tt.timed_attacks.list[3].mod = "mod_xin_mind_over_body"
    tt.timed_attacks.list[3].cast_time = fts(15)
    tt.timed_attacks.list[3].sound = "ElvesHeroXinMindOverBody"
    tt.ultimate = {
        ts = 0,
        cooldown = 24,
        disabled = true,
        range = 180
    }
    tt.mind_over_body_last_ts = 0
    tt.mind_over_body_active = false
    tt.mind_over_body_damage_buff_max = 0
    tt.mind_over_body_damage_buff = 0
    tt.mind_over_body_duration = 0

    tt = E:register_t("hero_xin_ultimate")
    E:add_comps(tt, "pos", "main_script", "sound_events")
    tt.cooldown = 24
    tt.range = 125
    tt.spawn_delay = 0.5
    tt.count = nil
    tt.main_script.update = scripts.hero_xin_ultimate.update
    tt.sound_events.insert = "ElvesHeroXinPandamonium"
    tt.vis_flags = bor(F_RANGED)
    tt.vis_bans = bor(F_FLYING)
    tt.entity = "soldier_xin_ultimate"

    tt = E:register_t("mod_xin_stun", "mod_shock_and_awe")
    tt.modifier.duration = 1.3
    tt = E:register_t("mod_xin_inspire", "modifier")
    E:add_comps(tt, "render")
    tt.modifier.duration = nil
    tt.modifier.use_mod_offset = false
    tt.inflicted_damage_factor = 2
    tt.main_script.insert = scripts.mod_damage_factors.insert
    tt.main_script.remove = scripts.mod_damage_factors.remove
    tt.main_script.update = scripts.mod_track_target.update
    tt.render.sprites[1].name = "mod_xin_inspire"
    tt.render.sprites[1].z = Z_DECALS

    tt = E:register_t("mod_xin_mind_over_body", "modifier")
    E:add_comps(tt, "render", "hps")
    tt.hps.heal_min = nil
    tt.hps.heal_max = nil
    tt.hps.heal_every = nil
    tt.main_script.insert = scripts.mod_hps.insert
    tt.main_script.update = scripts.mod_hps.update
    tt.modifier.duration = nil
    tt.modifier.use_mod_offset = false
    tt.modifier.remove_banned = true
    tt.modifier.ban_types = {MOD_TYPE_BLEED, MOD_TYPE_POISON, MOD_TYPE_STUN}
    tt.render.sprites[1].name = "fx_xin_drink_bubbles"
    tt.render.sprites[1].draw_order = 10
    tt.render.sprites[1].anchor.y = 0.25925925925925924
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].name = "xin_hero_drink_decal"
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].z = Z_DECALS

    tt = RT("mod_xin_slow", "mod_slow")
    tt.modifier.duration = 6

    tt = E:register_t("hero_faustus", "hero")
    E:add_comps(tt, "ranged", "timed_attacks")
    tt.hero.level_stats.armor = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    tt.hero.level_stats.hp_max = {400, 425, 450, 475, 500, 525, 550, 575, 600, 625}
    tt.hero.level_stats.melee_damage_max = {1, 2, 4, 4, 5, 6, 7, 8, 9, 10}
    tt.hero.level_stats.melee_damage_min = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
    tt.hero.level_stats.ranged_damage_min = {9, 11, 13, 15, 16, 18, 20, 22, 24, 25}
    tt.hero.level_stats.ranged_damage_max = {14, 16, 19, 22, 24, 27, 30, 33, 35, 38}
    tt.hero.skills.dragon_lance = E:clone_c("hero_skill")
    tt.hero.skills.dragon_lance.damage_min = {53, 93, 135}
    tt.hero.skills.dragon_lance.damage_max = {98, 173, 250}
    tt.hero.skills.dragon_lance.xp_gain = {50, 100, 150}
    tt.hero.skills.dragon_lance.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.teleport_rune = E:clone_c("hero_skill")
    tt.hero.skills.teleport_rune.xp_gain = {75, 150, 225}
    tt.hero.skills.teleport_rune.max_targets = {3, 5, 7}
    tt.hero.skills.teleport_rune.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [9] = 3
    }
    tt.hero.skills.enervation = E:clone_c("hero_skill")
    tt.hero.skills.enervation.duration = {6, 9, 12}
    tt.hero.skills.enervation.max_targets = {1, 2, 3}
    tt.hero.skills.enervation.xp_gain = {30, 90, 180}
    tt.hero.skills.enervation.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.liquid_fire = E:clone_c("hero_skill")
    tt.hero.skills.liquid_fire.flames_count = {6, 12, 18}
    tt.hero.skills.liquid_fire.mod_damage = {3, 5, 7}
    tt.hero.skills.liquid_fire.xp_gain = {120, 240, 360}
    tt.hero.skills.liquid_fire.xp_level_steps = {
        [4] = 1,
        [7] = 2,
        [10] = 3
    }
    tt.hero.skills.ultimate = E:clone_c("hero_skill")
    tt.hero.skills.ultimate.xp_gain_factor = 32
    tt.hero.skills.ultimate.mod_damage = {2, 3, 5, 7}
    tt.hero.skills.ultimate.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.hero.skills.ultimate.controller_name = "hero_faustus_ultimate"
    tt.health.dead_lifetime = 15
    tt.health_bar.draw_order = -1
    tt.health_bar.offset = vec_2(0, 189)
    tt.health_bar.sort_y_offset = -200
    tt.health_bar.type = HEALTH_BAR_SIZE_LARGE
    tt.hero.fn_level_up = scripts.hero_faustus.level_up
    tt.hero.tombstone_show_time = nil
    tt.hero.use_custom_spawn_point = true
    tt.idle_flip.cooldown = 10
    tt.info.hero_portrait = "kr3_hero_portraits_0009"
    tt.info.i18n_key = "HERO_ELVES_FAUSTUS"
    tt.info.portrait = (IS_PHONE and "portraits_hero" or "kr3_info_portraits_heroes") .. "_0009"
    tt.info.ultimate_icon = "0009"
    tt.info.ultimate_pointer_style = "area"
    tt.main_script.insert = scripts.hero_faustus.insert
    tt.main_script.update = scripts.hero_faustus.update
    tt.motion.max_speed = 6.6 * FPS
    tt.nav_rally.requires_node_nearby = false
    tt.nav_grid.ignore_waypoints = true
    tt.nav_grid.valid_terrains = TERRAIN_ALL_MASK
    tt.nav_grid.valid_terrains_dest = TERRAIN_ALL_MASK
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = 0.065
    tt.render.sprites[1].prefix = "hero_faustus"
    tt.render.sprites[1].angles.walk = {"idle"}
    tt.render.sprites[1].z = Z_FLYING_HEROES
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].name = "faustus_hero_0233"
    tt.render.sprites[2].anchor.y = 0.045
    tt.render.sprites[2].offset = vec_2(0, 0)
    tt.render.sprites[2].alpha = 90
    tt.soldier.melee_slot_offset = vec_2(0, 0)
    tt.sound_events.change_rally_point = "ElvesHeroFaustusTaunt"
    tt.sound_events.death = "ElvesHeroFaustusDeath"
    tt.sound_events.respawn = "ElvesHeroFaustusTauntIntro"
    tt.sound_events.insert = "ElvesHeroFaustusTauntIntro"
    tt.sound_events.hero_room_select = "ElvesHeroFaustusTauntSelect"
    tt.ui.click_rect = IS_PHONE and r(-35, 90, 70, 75) or r(-25, 100, 50, 55)
    tt.unit.hit_offset = vec_2(0, 135)
    tt.unit.hide_after_death = true
    tt.unit.mod_offset = vec_2(0, 134)
    tt.vis.bans = bor(tt.vis.bans, F_EAT, F_NET, F_POISON)
    tt.vis.flags = bor(tt.vis.flags, F_FLYING)
    tt.ranged.attacks[1] = E:clone_c("bullet_attack")
    tt.ranged.attacks[1].bullet = "bolt_faustus"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(26, 80)}
    tt.ranged.attacks[1].cooldown = 1
    tt.ranged.attacks[1].bullet_count = 3
    tt.ranged.attacks[1].min_range = 0
    tt.ranged.attacks[1].max_range = 150
    tt.ranged.attacks[1].extra_range = 80
    tt.ranged.attacks[1].shoot_time = fts(12)
    tt.ranged.attacks[1].sync_animation = true
    tt.ranged.attacks[1].animation = "attackBase"
    tt.ranged.attacks[1].start_fx = "fx_faustus_start_attack"
    tt.ranged.attacks[1].sound = "ElvesHeroFaustusAttack"
    tt.ranged.attacks[2] = E:clone_c("bullet_attack")
    tt.ranged.attacks[2].disabled = true
    tt.ranged.attacks[2].bullet = "bolt_lance_faustus"
    tt.ranged.attacks[2].bullet_count = 3
    tt.ranged.attacks[2].bullet_start_offset = {vec_2(22, 110)}
    tt.ranged.attacks[2].cooldown = 24
    tt.ranged.attacks[2].min_range = 0
    tt.ranged.attacks[2].max_range = 150
    tt.ranged.attacks[2].extra_range = 80
    tt.ranged.attacks[2].shoot_time = fts(22)
    tt.ranged.attacks[2].sync_animation = true
    tt.ranged.attacks[2].animation = "altAttackBase"
    tt.ranged.attacks[2].start_fx = "fx_faustus_start_lance"
    tt.ranged.attacks[2].start_sound = "ElvesHeroFaustusRayKill"
    tt.ranged.attacks[2].start_sound_args = {
        delay = fts(12)
    }
    tt.ranged.attacks[2].target_offset_rect = r(40, -80, 110, 160)
    tt.ranged.attacks[2].estimated_flight_time = 1
    tt.ranged.attacks[2].xp_from_skill = "dragon_lance"
    tt.ranged.attacks[3] = E:clone_c("aura_attack")
    tt.ranged.attacks[3].disabled = true
    tt.ranged.attacks[3].bullet = "aura_teleport_faustus"
    tt.ranged.attacks[3].cooldown = 27
    tt.ranged.attacks[3].min_range = 0
    tt.ranged.attacks[3].max_range = 100
    tt.ranged.attacks[3].shoot_time = fts(16)
    tt.ranged.attacks[3].sync_animation = true
    tt.ranged.attacks[3].animation = "altAttackBase"
    tt.ranged.attacks[3].start_fx = "fx_faustus_start_teleport"
    tt.ranged.attacks[3].start_sound = "ElvesHeroFaustusTeleport"
    tt.ranged.attacks[3].start_sound_args = {
        delay = fts(12)
    }
    tt.ranged.attacks[3].estimated_flight_time = 1
    tt.ranged.attacks[3].vis_flags = bor(F_RANGED, F_TELEPORT)
    tt.ranged.attacks[3].vis_bans = bor(F_BOSS)
    tt.ranged.attacks[3].xp_from_skill = "teleport_rune"
    tt.ranged.attacks[4] = E:clone_c("aura_attack")
    tt.ranged.attacks[4].disabled = true
    tt.ranged.attacks[4].bullet = "aura_enervation_faustus"
    tt.ranged.attacks[4].cooldown = 19
    tt.ranged.attacks[4].min_range = 25
    tt.ranged.attacks[4].max_range = 100
    tt.ranged.attacks[4].shoot_time = fts(4)
    tt.ranged.attacks[4].sync_animation = true
    tt.ranged.attacks[4].animation = "idle"
    tt.ranged.attacks[4].start_fx = "fx_faustus_start_enervation"
    tt.ranged.attacks[4].start_sound = "ElvesHeroFaustusEnervation"
    tt.ranged.attacks[4].estimated_flight_time = 0
    tt.ranged.attacks[4].vis_flags = bor(F_RANGED, F_SPELLCASTER)
    tt.ranged.attacks[4].vis_bans = bor(F_BOSS)
    tt.ranged.attacks[4].xp_from_skill = "enervation"
    tt.ranged.attacks[5] = E:clone_c("bullet_attack")
    tt.ranged.attacks[5].animation = "attackBase"
    tt.ranged.attacks[5].bullet = "bullet_liquid_fire_faustus"
    tt.ranged.attacks[5].bullet_start_offset = {vec_2(30, 86)}
    tt.ranged.attacks[5].cooldown = 38
    tt.ranged.attacks[5].disabled = true
    tt.ranged.attacks[5].estimated_flight_time = fts(10)
    tt.ranged.attacks[5].max_range = 180
    tt.ranged.attacks[5].min_range = 50
    tt.ranged.attacks[5].min_count = 3
    tt.ranged.attacks[5].max_count_range = 120
    tt.ranged.attacks[5].min_count_nodes_offset = -5
    tt.ranged.attacks[5].shoot_time = fts(12)
    tt.ranged.attacks[5].start_fx = "fx_faustus_start_liquid_fire"
    tt.ranged.attacks[5].start_sound = "ElvesHeroFaustusFire"
    tt.ranged.attacks[5].sync_animation = true
    tt.ranged.attacks[5].target_offset_rect = r(50, -80, 130, 160)
    tt.ranged.attacks[5].vis_bans = bor(F_FLYING)
    tt.ranged.attacks[5].vis_flags = bor(F_RANGED)
    tt.ranged.attacks[5].xp_from_skill = "liquid_fire"
    tt.ultimate = {
        ts = 0,
        cooldown = 32,
        disabled = true
    }

    tt = E:register_t("bolt_faustus", "bolt_elves")
    tt.bullet.damage_type = DAMAGE_TRUE
    tt.bullet.hit_fx = "fx_bolt_faustus_hit"
    tt.bullet.particles_name = "ps_bolt_faustus"
    tt.bullet.xp_gain_factor = 1.9
    tt.initial_impulse = 2100
    tt.render.sprites[1].prefix = "bolt_faustus"
    tt.sound_events.insert = nil
    tt.upgrades_disabled = true

    tt = E:register_t("hero_faustus_ultimate")
    E:add_comps(tt, "pos", "main_script", "sound_events")
    tt.cooldown = 32
    tt.main_script.update = scripts.hero_faustus_ultimate.update
    tt.sound_events.insert = "ElvesHeroFaustusUltimate"
    tt.separation_nodes = 20
    tt.show_delay = 0.5

    tt = RT("hero_rag", "hero")
    AC(tt, "melee", "ranged", "timed_attacks")
    tt.hero.level_stats.armor = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    tt.hero.level_stats.hp_max = {380, 405, 440, 465, 490, 515, 550, 575, 600, 625}
    tt.hero.level_stats.melee_damage_max = {12, 14, 16, 17, 19, 21, 23, 25, 26, 28}
    tt.hero.level_stats.melee_damage_min = {8, 9, 10, 12, 13, 14, 15, 16, 18, 19}
    tt.hero.level_stats.ranged_damage_max = {12, 14, 16, 17, 19, 21, 23, 25, 26, 28}
    tt.hero.level_stats.ranged_damage_min = {8, 9, 10, 12, 13, 14, 15, 16, 18, 19}
    tt.hero.skills.raggified = E:clone_c("hero_skill")
    tt.hero.skills.raggified.max_target_hp = {300, 900, 10000}
    tt.hero.skills.raggified.xp_gain = {94, 188, 282}
    tt.hero.skills.raggified.doll_duration = {5, 7, 9}
    tt.hero.skills.raggified.break_factor = {0.25, 0.375, 0.5}
    tt.hero.skills.raggified.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.kamihare = E:clone_c("hero_skill")
    tt.hero.skills.kamihare.count = {4, 8, 12}
    tt.hero.skills.kamihare.xp_gain = {70, 140, 210}
    tt.hero.skills.kamihare.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [9] = 3
    }
    tt.hero.skills.angry_gnome = E:clone_c("hero_skill")
    tt.hero.skills.angry_gnome.damage_max = {50, 100, 150}
    tt.hero.skills.angry_gnome.damage_min = {25, 50, 75}
    tt.hero.skills.angry_gnome.xp_gain = {21, 42, 63}
    tt.hero.skills.angry_gnome.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.hammer_time = E:clone_c("hero_skill")
    tt.hero.skills.hammer_time.duration = {3, 4, 5}
    tt.hero.skills.hammer_time.xp_gain = {105, 210, 315}
    tt.hero.skills.hammer_time.xp_level_steps = {
        [4] = 1,
        [7] = 2,
        [10] = 3
    }
    tt.hero.skills.ultimate = E:clone_c("hero_skill")
    tt.hero.skills.ultimate.controller_name = "hero_rag_ultimate"
    tt.hero.skills.ultimate.max_count = {2, 4, 6, 8}
    tt.hero.skills.ultimate.xp_gain_factor = 48
    tt.hero.skills.ultimate.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.health.dead_lifetime = 15
    tt.health_bar.offset = vec_2(0, 58)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_rag.level_up
    tt.hero.tombstone_show_time = fts(90)
    tt.info.hero_portrait = "kr3_hero_portraits_0010"
    tt.info.i18n_key = "HERO_ELVES_RAG"
    tt.info.portrait = (IS_PHONE and "portraits_hero" or "kr3_info_portraits_heroes") .. "_0010"
    tt.info.ultimate_icon = "0010"
    tt.info.ultimate_pointer_style = "area"
    tt.main_script.update = scripts.hero_rag.update
    tt.motion.max_speed = 2.2 * FPS
    tt.regen.cooldown = 1

    for i = 1, 2 do
        tt.render.sprites[i] = CC("sprite")
        tt.render.sprites[i].anchor.y = 0.239
        tt.render.sprites[i].prefix = "hero_rag_layer" .. i
        tt.render.sprites[i].name = "idle"
        tt.render.sprites[i].angles = {}
        tt.render.sprites[i].angles.walk = {"running"}
    end

    tt.soldier.melee_slot_offset = vec_2(7, 0)
    tt.sound_events.change_rally_point = "ElvesHeroRagTaunt"
    tt.sound_events.death = "ElvesHeroRagDeath"
    tt.sound_events.insert = "ElvesHeroRagTauntIntro"
    tt.sound_events.respawn = "ElvesHeroRagTauntIntro"
    tt.sound_events.hero_room_select = "ElvesHeroRagTauntSelect"
    tt.unit.hit_offset = vec_2(0, 16)
    tt.unit.mod_offset = vec_2(6, 20)
    tt.melee.attacks[1] = CC("area_attack")
    tt.melee.attacks[1].hit_offset = vec_2(32, -5)
    tt.melee.attacks[1].cooldown = 2
    tt.melee.attacks[1].hit_time = fts(11)
    tt.melee.attacks[1].damage_radius = 75
    tt.melee.attacks[1].damage_max = nil
    tt.melee.attacks[1].damage_min = nil
    tt.melee.attacks[1].count = 5
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].xp_gain_factor = 1.9
    tt.melee.attacks[1].sound_hit = "ElvesHeroRagGroundStomp"
    tt.melee.range = 50
    tt.ranged.attacks[1] = CC("bullet_attack")
    tt.ranged.attacks[1].max_range = 110
    tt.ranged.attacks[1].min_range = 45
    tt.ranged.attacks[1].cooldown = 1
    tt.ranged.attacks[1].bullet = "bullet_rag"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(3, 80)}
    tt.ranged.attacks[1].shoot_time = fts(5)
    tt.timed_attacks.list[1] = CC("bullet_attack")
    tt.timed_attacks.list[1].animation = "throw"
    tt.timed_attacks.list[1].bullet_prefix = "bullet_rag_throw_"
    tt.timed_attacks.list[1].bullet_start_offset = {vec_2(3, 80)}
    tt.timed_attacks.list[1].cooldown = 15
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].max_range = 125
    tt.timed_attacks.list[1].min_range = 45
    tt.timed_attacks.list[1].shoot_time = fts(20)
    tt.timed_attacks.list[1].sound = "ElvesHeroRagSpawn"
    tt.timed_attacks.list[1].things = {"bolso", "anchor", "fungus", "pan", "chair"}
    tt.timed_attacks.list[1].vis_bans = 0
    tt.timed_attacks.list[1].vis_flags = bor(F_RANGED)
    tt.timed_attacks.list[1].xp_from_skill = "angry_gnome"
    tt.timed_attacks.list[2] = E:clone_c("spawn_attack")
    tt.timed_attacks.list[2].animations = {"rabbitCall", "rabbitCallEnd"}
    tt.timed_attacks.list[2].bullet = "bullet_kamihare"
    tt.timed_attacks.list[2].cooldown = 32
    tt.timed_attacks.list[2].count = nil
    tt.timed_attacks.list[2].disabled = true
    tt.timed_attacks.list[2].entity = "rabbit_kamihare"
    tt.timed_attacks.list[2].range_nodes_max = 200
    tt.timed_attacks.list[2].range_nodes_min = 50
    tt.timed_attacks.list[2].sound = "ElvesHeroRagKamihare"
    tt.timed_attacks.list[2].sound_delay = fts(12)
    tt.timed_attacks.list[2].spawn_offset = vec_2(0, 31)
    tt.timed_attacks.list[2].spawn_time = fts(15)
    tt.timed_attacks.list[2].vis_flags = bor(F_RANGED, F_BLOCK)
    tt.timed_attacks.list[2].vis_bans = bor(F_FLYING)
    tt.timed_attacks.list[2].xp_from_skill = "kamihare"
    tt.timed_attacks.list[3] = E:clone_c("area_attack")
    tt.timed_attacks.list[3].animations = {"hammer_start", "hammer_walk", "hammer_end"}
    tt.timed_attacks.list[3].cooldown = 32
    tt.timed_attacks.list[3].damage_every = fts(10)
    tt.timed_attacks.list[3].damage_max = 15
    tt.timed_attacks.list[3].damage_min = 10
    tt.timed_attacks.list[3].damage_radius = 65
    tt.timed_attacks.list[3].damage_type = DAMAGE_PHYSICAL
    tt.timed_attacks.list[3].disabled = true
    tt.timed_attacks.list[3].max_range = 100
    tt.timed_attacks.list[3].mod = "mod_rag_hammer_time_stun"
    tt.timed_attacks.list[3].nodes_range = 5
    tt.timed_attacks.list[3].sound_hit = "ElvesHeroRagHammer"
    tt.timed_attacks.list[3].sound_loop = "ElvesHeroRagHammerTime"
    tt.timed_attacks.list[3].speed_factor = 1.25
    tt.timed_attacks.list[3].trigger_hp = 600
    tt.timed_attacks.list[3].vis_bans = bor(F_FLYING)
    tt.timed_attacks.list[3].vis_flags = bor(F_RANGED)
    tt.timed_attacks.list[3].xp_from_skill = "hammer_time"
    tt.timed_attacks.list[4] = E:clone_c("bullet_attack")
    tt.timed_attacks.list[4].animation = "polymorph"
    tt.timed_attacks.list[4].bullet = "ray_rag"
    tt.timed_attacks.list[4].bullet_start_offset = {vec_2(5, 77)}
    tt.timed_attacks.list[4].cooldown = 23
    tt.timed_attacks.list[4].disabled = true
    tt.timed_attacks.list[4].max_range = 125
    tt.timed_attacks.list[4].max_target_hp = nil
    tt.timed_attacks.list[4].min_range = 60
    tt.timed_attacks.list[4].shoot_time = fts(17)
    tt.timed_attacks.list[4].sound = "ElvesHeroRagAttack"
    tt.timed_attacks.list[4].vis_bans = bor(F_FLYING, F_BOSS)
    tt.timed_attacks.list[4].vis_flags = bor(F_RANGED, F_MOD, F_RAGGIFY)
    tt.timed_attacks.list[4].xp_from_skill = "raggified"
    tt.ultimate = {
        ts = 0,
        cooldown = 48,
        disabled = true
    }

    tt = RT("hero_rag_ultimate")
    E:add_comps(tt, "pos", "main_script", "sound_events")
    tt.max_count = nil
    tt.range = 100
    tt.doll_duration = 10
    tt.mod = "mod_rag_raggified"
    tt.hit_fx = "fx_rag_ultimate"
    tt.hit_decal = "decal_rag_ultimate"
    tt.main_script.update = scripts.hero_rag_ultimate.update
    tt.vis_flags = bor(F_RANGED, F_MOD, F_RAGGIFY)
    tt.vis_bans = bor(F_BOSS, F_FLYING)
    tt.hit_time = fts(2)

    tt = RT("bullet_rag", "arrow")
    tt.bullet.damage_max = nil
    tt.bullet.damage_min = nil
    tt.bullet.damage_type = DAMAGE_MAGICAL
    tt.bullet.flight_time = fts(18)
    tt.bullet.hit_blood_fx = nil
    tt.bullet.hit_fx = "fx_bullet_rag_hit"
    tt.bullet.miss_decal = nil
    tt.bullet.miss_fx = "fx_bullet_rag_hit"
    tt.bullet.miss_fx_water = nil
    tt.bullet.particles_name = "ps_bullet_rag_trail"
    tt.bullet.pop = nil
    tt.bullet.predict_target_pos = true
    tt.bullet.xp_gain_factor = 1.9
    tt.render.sprites[1].name = "razzAndRaggs_hero_proy-f"
    tt.sound_events.insert = "ElvesHeroRagGnomeShot"

    tt = RT("soldier_rag", "soldier_militia")
    AC(tt, "reinforcement")
    tt.health.armor = 0
    tt.health.hp_max = nil
    tt.health_bar.offset = vec_2(0, 37)
    tt.health_bar.size = HEALTH_BAR_SIZE_SMALL
    tt.health.damage_factor = 1.5
    tt.info.portrait = "kr3_portraits_sc_0068"
    tt.info.i18n_key = "ELVES_SOLDIER_RAG_DOLL"
    tt.info.random_name_format = nil
    tt.main_script.insert = scripts.soldier_reinforcement.insert
    tt.main_script.update = scripts.soldier_reinforcement.update
    tt.melee.attacks[1].damage_max = 50
    tt.melee.attacks[1].damage_min = 40
    tt.melee.attacks[1].hit_time = fts(11)
    tt.melee.attacks[1].shared_cooldown = true
    tt.melee.attacks[1].xp_gain_factor = 0
    tt.melee.cooldown = 0.5
    tt.melee.range = 60
    tt.motion.max_speed = 60
    tt.regen.cooldown = 100
    tt.regen.health = 0
    tt.reinforcement.duration = 1200
    tt.reinforcement.fade = nil
    tt.render.sprites[1].anchor.y = 0.22
    tt.render.sprites[1].prefix = "rag_polymorphed"
    tt.render.sprites[1].name = "idle"
    tt.soldier.melee_slot_offset = vec_2(4, 0)
    tt.unit.level = 0
    tt.unit.mod_offset = vec_2(0, 15)
    tt.unit.hide_after_death = true
    tt.vis.bans = bor(F_SKELETON, F_CANNIBALIZE, F_LYCAN)

    tt = RT("hero_bruce", "hero")
    AC(tt, "melee", "timed_attacks")
    tt.hero.level_stats.armor = {0.14, 0.18, 0.22, 0.26, 0.3, 0.34, 0.38, 0.42, 0.46, 0.5}
    tt.hero.level_stats.hp_max = {365, 390, 415, 440, 465, 490, 515, 540, 565, 590}
    tt.hero.level_stats.melee_damage_max = {27, 31, 34, 38, 41, 45, 49, 52, 56, 59}
    tt.hero.level_stats.melee_damage_min = {18, 20, 23, 25, 28, 30, 32, 35, 37, 40}
    tt.hero.skills.sharp_claws = E:clone_c("hero_skill")
    tt.hero.skills.sharp_claws.damage = {3, 6, 9}
    tt.hero.skills.sharp_claws.extra_damage = {12, 25, 40}
    tt.hero.skills.sharp_claws.xp_gain = {10, 20, 30}
    tt.hero.skills.sharp_claws.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.kings_roar = E:clone_c("hero_skill")
    tt.hero.skills.kings_roar.stun_duration = {1, 2, 3}
    tt.hero.skills.kings_roar.xp_gain = {100, 120, 150}
    tt.hero.skills.kings_roar.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [9] = 3
    }
    tt.hero.skills.lions_fur = E:clone_c("hero_skill")
    tt.hero.skills.lions_fur.extra_hp = {40, 80, 120}
    tt.hero.skills.lions_fur.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3
    }
    tt.hero.skills.grievous_bites = E:clone_c("hero_skill")
    tt.hero.skills.grievous_bites.damage = {20, 50, 95}
    tt.hero.skills.grievous_bites.xp_gain = {30, 60, 90}
    tt.hero.skills.grievous_bites.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.ultimate = E:clone_c("hero_skill")
    tt.hero.skills.ultimate.controller_name = "hero_bruce_ultimate"
    tt.hero.skills.ultimate.damage_per_tick = {8, 12, 14, 16}
    tt.hero.skills.ultimate.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.hero.skills.ultimate.damage_boss = {150, 200, 350, 500}
    tt.hero.skills.ultimate.count = {2, 3, 4, 5}
    tt.health.dead_lifetime = 15
    tt.health_bar.offset = vec_2(0, 53)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.fn_level_up = scripts.hero_bruce.level_up
    tt.hero.tombstone_show_time = fts(90)
    tt.info.hero_portrait = "kr3_hero_portraits_0015"
    tt.info.i18n_key = "HERO_ELVES_BRUCE"
    tt.info.portrait = (IS_PHONE and "portraits_hero" or "kr3_info_portraits_heroes") .. "_0015"
    tt.main_script.insert = scripts.hero_bruce.insert
    tt.main_script.update = scripts.hero_bruce.update
    tt.motion.max_speed = 3.3 * FPS
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = 0.16666666666667
    tt.render.sprites[1].angles = {}
    tt.render.sprites[1].angles.walk = {"walk"}
    tt.render.sprites[1].name = "idle"
    tt.render.sprites[1].prefix = "hero_bruce"
    tt.soldier.melee_slot_offset = vec_2(12, -1)
    tt.sound_events.change_rally_point = "ElvesHeroBruceTaunt"
    tt.sound_events.death = "ElvesHeroBruceDeath"
    tt.sound_events.hero_room_select = "ElvesHeroBruceTauntSelect"
    tt.sound_events.insert = "ElvesHeroBruceTauntIntro"
    tt.sound_events.respawn = "ElvesHeroBruceTauntIntro"
    tt.unit.hit_offset = vec_2(0, 16)
    tt.unit.mod_offset = vec_2(0, 22)
    tt.melee.attacks[1].hit_time = fts(10)
    tt.melee.attacks[1].shared_cooldown = true
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].xp_gain_factor = 3.1
    tt.melee.attacks[1].damage_type = DAMAGE_RUDE
    tt.melee.attacks[2] = table.deepclone(tt.melee.attacks[1])
    tt.melee.attacks[2].animation = "attack2"
    tt.melee.attacks[2].chance = 0.5
    tt.melee.attacks[3] = table.deepclone(tt.melee.attacks[1])
    tt.melee.attacks[3].animation = "attack3"
    tt.melee.attacks[3].chance = 0.2
    tt.melee.attacks[3].fn_chance = scripts.hero_bruce.fn_chance_sharp_claws
    tt.melee.attacks[3].disabled = true
    tt.melee.attacks[3].mod = "mod_bruce_sharp_claws"
    tt.melee.attacks[4] = CC("melee_attack")
    tt.melee.attacks[4].animations = {nil, "eat"}
    tt.melee.attacks[4].cooldown = 16
    tt.melee.attacks[4].damage_max = nil
    tt.melee.attacks[4].damage_min = nil
    tt.melee.attacks[4].damage_type = DAMAGE_TRUE
    tt.melee.attacks[4].disabled = true
    tt.melee.attacks[4].hit_times = {fts(8), fts(16), fts(25)}
    tt.melee.attacks[4].interrupt_on_dead_target = true
    tt.melee.attacks[4].loops = 1
    tt.melee.attacks[4].sound = "ElvesHeroBruceGriveousBites"
    tt.melee.attacks[4].sound_args = {
        delay = fts(3)
    }
    tt.melee.attacks[4].xp_from_skill = "grievous_bites"
    tt.melee.attacks[4].xp_gain_factor = 5
    tt.melee.cooldown = 1
    tt.melee.range = 55
    tt.timed_attacks.list[1] = CC("mod_attack")
    tt.timed_attacks.list[1].animation = "specialAttack"
    tt.timed_attacks.list[1].cooldown = 20
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].hit_time = fts(17)
    tt.timed_attacks.list[1].max_count = 7
    tt.timed_attacks.list[1].min_count = 3
    tt.timed_attacks.list[1].mod = "mod_bruce_kings_roar"
    tt.timed_attacks.list[1].range = 125
    tt.timed_attacks.list[1].sound = "ElvesHeroBruceKingsRoar"
    tt.timed_attacks.list[1].sound_args = {
        delay = fts(9)
    }
    tt.timed_attacks.list[1].vis_bans = bor(F_BOSS)
    tt.timed_attacks.list[1].vis_flags = bor(F_MOD, F_STUN, F_RANGED)
    tt.timed_attacks.list[1].xp_from_skill = "kings_roar"
    tt.ultimate = {
        ts = 0,
        cooldown = 36,
        disabled = true
    }

    tt = RT("hero_bruce_ultimate")
    AC(tt, "pos", "main_script", "sound_events")
    tt.cooldown = 36
    tt.main_script.update = scripts.hero_bruce_ultimate.update
    tt.sound_events.insert = "ElvesHeroBruceGuardianLionsCast"
    tt.entity = "lion_bruce"
    tt.count = nil
    tt.range_nodes_min = 0
    tt.range_nodes_max = 999
    tt.vis_flags = bor(F_RANGED)
    tt.vis_bans = bor(F_FLYING)

    tt = RT("lion_bruce", "decal_scripted")
    AC(tt, "nav_path", "motion", "custom_attack", "sound_events", "tween")
    tt.custom_attack.cooldown = fts(6)
    tt.custom_attack.mods = {"mod_lion_bruce_stun", "mod_lion_bruce_damage"}
    tt.custom_attack.damage_boss = nil
    tt.custom_attack.range = 40
    tt.custom_attack.vis_flags = bor(F_RANGED, F_STUN, F_CUSTOM)
    tt.custom_attack.vis_bans = bor(F_FLYING)
    tt.custom_attack.damage_type = DAMAGE_TRUE
    tt.duration = 5
    tt.motion.max_speed = 150
    tt.main_script.insert = scripts.lion_bruce.insert
    tt.main_script.update = scripts.lion_bruce.update
    tt.nav_path.dir = -1
    tt.render.sprites[1].anchor.y = 0.22058823529411764
    tt.render.sprites[1].angles = {}
    tt.render.sprites[1].angles.walk = {"walkingRightLeft", "walkingUp", "walkingDown"}
    tt.render.sprites[1].angles_custom = {
        walk = {55, 135, 240, 315}
    }
    tt.render.sprites[1].angles_stickiness = {
        walk = 10
    }
    tt.render.sprites[1].loop_forced = true
    tt.render.sprites[1].prefix = "bruce_ultimate"
    tt.sound_events.custom_loop_end = "ElvesHeroBruceGuardianLionsLoopEnd"
    tt.tween.remove = false
    tt.tween.props[1].keys = {{0, 0}, {0.5, 255}}

    tt = RT("hero_bolverk", "hero")
    AC(tt, "melee", "timed_attacks")
    tt.hero.level_stats.armor = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    tt.hero.level_stats.hp_max = {410, 425, 440, 455, 470, 485, 500, 515, 530, 545}
    tt.hero.level_stats.melee_damage_max = {23, 25, 27, 29, 31, 33, 35, 37, 39, 41}
    tt.hero.level_stats.melee_damage_min = {18, 19, 20, 21, 22, 23, 24, 25, 26, 27}
    tt.hero.skills.slash = E:clone_c("hero_skill")
    tt.hero.skills.slash.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.slash.damage_max = {60, 80, 100}
    tt.hero.skills.slash.damage_min = {40, 60, 80}
    tt.hero.skills.scream = E:clone_c("hero_skill")
    tt.hero.skills.scream.xp_level_steps = {
        [3] = 1,
        [6] = 2,
        [9] = 3
    }
    tt.hero.skills.scream.fire_damage = {5, 10, 15}
    tt.hero.skills.scream.xp_gain_factor = 60
    tt.hero.skills.berserker = E:clone_c("hero_skill")
    tt.hero.skills.berserker.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.hero.skills.berserker.factor = {0.5, 0.4, 0.3, 0.2}
    tt.health.armor = 0
    tt.health.dead_lifetime = 15
    tt.health.hp_max = 545
    tt.health_bar.offset = vec_2(0, 43)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.tombstone_show_time = fts(90)
    tt.info.hero_portrait = "kr3_hero_portraits_0018"
    tt.info.i18n_key = "HERO_ELVES_BOLVERK"
    tt.info.portrait = (IS_PHONE and "portraits_hero" or "kr3_info_portraits_heroes") .. "_0018"
    tt.hero.fn_level_up = scripts.hero_bolverk.level_up
    tt.main_script.insert = scripts.hero_bolverk.insert
    tt.main_script.update = scripts.hero_bolverk.update
    tt.motion.max_speed = 3.3 * FPS
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = 0.22727272727273
    tt.render.sprites[1].prefix = "hero_bolverk"
    tt.render.sprites[1].angles = {}
    tt.render.sprites[1].angles.walk = {"walk"}
    tt.render.sprites[1].name = "idle"
    tt.soldier.melee_slot_offset = vec_2(2, 0)
    tt.sound_events.change_rally_point = "ElvesHeroBolverkTaunt"
    tt.sound_events.death = "ElvesHeroBolverkDeath"
    tt.sound_events.insert = "ElvesHeroBolverkTauntIntro"
    tt.sound_events.respawn = "ElvesHeroBolverkTauntIntro"
    tt.sound_events.hero_room_select = "ElvesHeroBolverkTauntSelect"
    tt.unit.hit_offset = vec_2(0, 20)
    tt.unit.mod_offset = vec_2(0, 20)
    tt.melee.attacks[1].damage_max = 41
    tt.melee.attacks[1].damage_min = 27
    tt.melee.attacks[1].cooldown = 1
    tt.melee.attacks[1].raw_cooldown = 1
    tt.melee.attacks[1].hit_time = fts(10)
    tt.melee.attacks[1].xp_gain_factor = 3.5
    tt.melee.attacks[2] = CC("melee_attack")
    tt.melee.attacks[2].animation = "hit"
    tt.melee.attacks[2].cooldown = 20
    tt.melee.attacks[2].raw_cooldown = 20
    tt.melee.attacks[2].damage_max = 100
    tt.melee.attacks[2].damage_min = 80
    tt.melee.attacks[2].damage_type = DAMAGE_RUDE
    tt.melee.attacks[2].hit_time = fts(9)
    tt.melee.attacks[2].sound = "ElvesHeroBolverkSlash"
    tt.melee.attacks[2].xp_gain_factor = 3.5
    tt.melee.attacks[2].disabled = true
    tt.melee.attacks[2].side_effect = function(this, store, attack, target)
        scripts.heal(this, (this.health.hp_max-this.health.hp) * 0.12)
    end
    tt.melee.range = 55
    tt.timed_attacks.list[1] = CC("mod_attack")
    tt.timed_attacks.list[1].animation = "scream"
    tt.timed_attacks.list[1].cooldown = 10
    tt.timed_attacks.list[1].raw_cooldown = 10
    tt.timed_attacks.list[1].max_range = 60
    tt.timed_attacks.list[1].min_range = 0
    tt.timed_attacks.list[1].min_count = 1
    tt.timed_attacks.list[1].mods = {"mod_bolverk_scream","mod_bolverk_fire"}
    tt.timed_attacks.list[1].hit_time = fts(9)
    tt.timed_attacks.list[1].sound = "ElvesHeroBolverkCry"
    tt.timed_attacks.list[1].vis_flags = F_RANGED
    tt.timed_attacks.list[1].vis_bans = bor(F_FLYING)
    tt.timed_attacks.list[1].disabled = true
    tt.vis.bans = bor(tt.vis.bans, F_BURN)
    tt.berserker_factor = 0.5

    tt = RT("mod_bolverk_scream", "modifier")
    AC(tt, "render")
    tt.received_damage_factor = 1.5
    tt.inflicted_damage_factor = 0.7
    tt.modifier.duration = 20
    tt.modifier.resets_same = false
    tt.modifier.use_mod_offset = false
    tt.main_script.insert = scripts.mod_damage_factors.insert
    tt.main_script.remove = scripts.mod_damage_factors.remove
    tt.main_script.update = scripts.mod_track_target.update
    tt.render.sprites[1].prefix = "mod_weakness"
    tt.render.sprites[1].size_names = {"small", "big", "big"}
    tt.render.sprites[1].name = "small"
    tt.render.sprites[1].loop = true
    tt.render.sprites[1].z = Z_DECALS

    tt = RT("mod_bolverk_fire", "modifier")
    AC(tt, "render", "dps")
    tt.explode_fx = "fx_unit_explode"
    tt.modifier.duration = 7
    tt.modifier.vis_flags = bor(F_MOD, F_BURN)
    tt.nodes_limit = 20
    tt.render.sprites[1].name = "mod_dark_spitters"
    tt.render.sprites[1].draw_order = 10
    tt.main_script.insert = scripts.mod_dps.insert
    tt.main_script.update = scripts.mod_dps.update
    tt.dps.damage_every = 0.5
    tt.dps.damage_max = 5
    tt.dps.damage_min = 5
    tt.dps.damage_type = DAMAGE_POISON

    tt = E:register_t("hero_dwarf", "hero")
    E:add_comps(tt, "melee","timed_attacks")
    image_y = 94
    anchor_y = 0.13
    tt.hero.level_stats.armor = {0.43, 0.46, 0.49, 0.52, 0.55, 0.58, 0.61, 0.64, 0.67, 0.7}
    tt.hero.level_stats.hp_max = {285, 300, 315, 330, 345, 360, 375, 390, 405, 420}
    tt.hero.level_stats.melee_damage_min = {1, 2, 3, 4, 5, 6, 7, 8 , 9, 10}
    tt.hero.level_stats.melee_damage_max = {12, 14, 16, 18, 20, 22, 24, 26, 28, 30}
    tt.hero.skills.ring = E:clone_c("hero_skill")
    tt.hero.skills.ring.xp_level_steps = {
        [1] = 1,
        [4] = 2,
        [7] = 3,
        [10] = 4
    }
    tt.hero.skills.ring.damage_min = {60, 80, 100, 120}
    tt.hero.skills.ring.damage_max = {80, 100, 120, 140}
    tt.hero.skills.giant = E:clone_c("hero_skill")
    tt.hero.skills.giant.xp_level_steps = {
        [2] = 1,
        [5] = 2,
        [8] = 3
    }
    tt.hero.skills.giant.scale = {1.5, 2, 2.5}
    tt.hero.skills.giant.xp_gain_factor = 150
    tt.health.armor = 0.43
    tt.health.dead_lifetime = 15
    tt.health.hp_max = 420
    tt.health_bar.offset = vec_2(0, ady(50))
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.hero.tombstone_show_time = fts(60)
    tt.hero.fn_level_up = scripts.hero_dwarf.level_up
    tt.idle_flip.cooldown = 1
    tt.info.hero_portrait = "kr2_hero_portraits_0010"
    tt.info.portrait = IS_PHONE and "portraits_hero_0013" or "kr2_info_portraits_heroes_0013"
    tt.info.i18n_key = "HERO_DWARF"
    tt.main_script.update = scripts.hero_dwarf.update
    tt.melee.attacks[1].cooldown = 1
    tt.melee.attacks[1].damage_max = 30
    tt.melee.attacks[1].damage_min = 10
    tt.melee.attacks[1].hit_time = fts(9)
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].xp_gain_factor = 6
    tt.melee.attacks[2] = E:clone_c("area_attack")
    tt.melee.attacks[2].animation = "attack2"
    tt.melee.attacks[2].cooldown = 8
    tt.melee.attacks[2].damage_max = 120
    tt.melee.attacks[2].damage_min = 60
    tt.melee.attacks[2].damage_radius = 60
    tt.melee.attacks[2].damage_type = bor(DAMAGE_TRUE, DAMAGE_FX_EXPLODE)
    tt.melee.attacks[2].xp_gain_factor = 1.5
    tt.melee.attacks[2].disabled = true
    tt.melee.attacks[2].hit_decal = "fx_dwarf_area_quake"
    tt.melee.attacks[2].hit_fx = "fx_dwarf_area_ring"
    tt.melee.attacks[2].hit_offset = vec_2(29, 0)
    tt.melee.attacks[2].hit_time = fts(29)
    tt.melee.range = 80
    tt.timed_attacks.list[1] = E:clone_c("custom_attack")
    tt.timed_attacks.list[1].animations = {"giant_start", "attack2", "giant_end"}
    tt.timed_attacks.list[1].scale_time = fts(10)
    tt.timed_attacks.list[1].cooldown = 25
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].scale = 1.5
    tt.timed_attacks.list[1].min_count = 3
    tt.timed_attacks.list[1].vis_flags = F_AREA
    tt.timed_attacks.list[1].vis_bans = F_FLYING
    tt.timed_attacks.list[1].sound = "HeroReinforcementJump"
    tt.timed_attacks.list[1].mod = "mod_dwarf_champion_stun"
    tt.motion.max_speed = 2.7 * FPS
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].name = "idle"
    tt.render.sprites[1].prefix = "hero_dwarf"
    tt.render.sprites[1].angles = {}
    tt.render.sprites[1].angles.walk = {"running"}
    tt.render.sprites[1].scale = vec_1(1)
    tt.soldier.melee_slot_offset.x = 10
    tt.sound_events.change_rally_point = "DwarfHeroTaunt"
    tt.sound_events.death = "DwarfHeroTauntDeath"
    tt.sound_events.respawn = "DwarfHeroTauntIntro"
    tt.sound_events.hero_room_select = "DwarfHeroTauntSelect"
    tt.unit.hit_offset = vec_2(0, 12)
    tt.unit.marker_offset = vec_2(0, -2)
    tt.unit.mod_offset = vec_2(0, ady(22))

    tt = E:register_t("fx_dwarf_area_quake", "decal_timed")
    tt.render.sprites[1].name = "fx_dwarf_area_quake"
    tt.render.sprites[1].anchor.y = 0.24
    tt.render.sprites[1].offset.y = 2
    tt.render.sprites[1].scale = vec_2(0.8, 0.8)
    tt.render.sprites[1].alpha = 166
    tt.render.sprites[1].z = Z_DECALS
    tt.render.sprites[2] = table.deepclone(tt.render.sprites[1])
    tt.render.sprites[2].offset.y = -22

    tt = E:register_t("fx_dwarf_area_ring", "decal_timed")
    tt.render.sprites[1].name = "fx_dwarf_area_ring"
    tt.render.sprites[1].z = Z_DECALS - 1
    tt.render.sprites[1].scale = vec_1(1)

    tt = RT("mod_dwarf_champion_stun", "mod_stun")
    tt.modifier.vis_flags = bor(F_MOD, F_STUN)
    tt.modifier.vis_bans = bor(F_FLYING, F_BOSS)
end

return heroes
