local i18n = require("i18n")
require("constants")
local anchor_y = 0
local anchor_x = 0
local image_x = 0
local image_y = nil
local tt = nil
local scripts = require("game_scripts")
require("templates")
local function adx(v)
    return v - anchor_x * image_x
end
local function ady(v)
    return v - anchor_y * image_y
end
local function vv(x)
    return {
        x = x,
        y = x
    }
end
local function v(x, y)
    return {
        x = x,
        y = y
    }
end
require("game_templates_utils")

local function barrack_towers()
    tt = RT("tower_paladin", "tower_barrack_1")
    AC(tt, "powers")
    tt.info.portrait = IS_PHONE_OR_TABLET and "portraits_towers_0007" or "info_portraits_towers_0005"
    tt.info.enc_icon = 14
    tt.info.i18n_key = "TOWER_PALADINS"
    tt.tower.type = "paladin"
    tt.tower.price = 185
    tt.powers.healing = CC("power")
    tt.powers.healing.price_base = 150
    tt.powers.healing.price_inc = 100
    tt.powers.healing.enc_icon = 6
    tt.powers.shield = CC("power")
    tt.powers.shield.price_base = 175
    tt.powers.shield.price_inc = 100
    tt.powers.shield.max_level = 1
    tt.powers.shield.enc_icon = 7
    tt.powers.holystrike = CC("power")
    tt.powers.holystrike.price_base = 200
    tt.powers.holystrike.price_inc = 150
    tt.powers.holystrike.enc_icon = 5
    tt.powers.holystrike.name = "HOLY_STRIKE"
    tt.barrack.soldier_type = "soldier_paladin"
    tt.barrack.rally_range = 160
    tt.render.sprites[1].name = "terrain_barrack_%04i"
    tt.render.sprites[1].offset = vec_2(0, 13)
    tt.render.sprites[2].name = "tower_barracks_lvl4_Paladins_layer1_0001"
    tt.render.sprites[2].offset = vec_2(0, 39)
    tt.render.sprites[3].prefix = "towerbarracklvl4_paladin_door"
    tt.render.sprites[3].offset = vec_2(0, 39)
    tt.render.sprites[4] = CC("sprite")
    tt.render.sprites[4].name = "tower_paladin_flag"
    tt.render.sprites[4].offset = vec_2(7, 72)
    tt.sound_events.insert = "BarrackPaladinTaunt"
    tt.sound_events.change_rally_point = "BarrackPaladinTaunt"

    tt = RT("soldier_paladin", "soldier_militia")
    AC(tt, "powers", "timed_actions")
    anchor_y = 0.17
    image_y = 42
    tt.health.armor = 0.45
    tt.health.magic_armor = 0.45
    tt.health.dead_lifetime = 14
    tt.health.hp_max = 250
    tt.health.armor_power_name = "shield"
    tt.health.armor_inc = 0.15
    tt.health_bar.offset = vec_2(0, ady(40))
    tt.info.portrait = "info_portraits_soldiers_0004"
    tt.info.random_name_count = 20
    tt.info.random_name_format = "SOLDIER_PALADIN_RANDOM_%i_NAME"
    tt.melee.attacks[1].damage_max = 18
    tt.melee.attacks[1].damage_min = 12
    tt.melee.attacks[1].shared_cooldown = true
    tt.melee.attacks[2] = table.deepclone(tt.melee.attacks[1])
    tt.melee.attacks[2].animation = "attack2"
    tt.melee.attacks[2].chance = 0.5
    tt.melee.attacks[3] = CC("area_attack")
    tt.melee.attacks[3].animation = "holystrike"
    tt.melee.attacks[3].chance = 0.12
    tt.melee.attacks[3].damage_max = 0
    tt.melee.attacks[3].damage_min = 0
    tt.melee.attacks[3].damage_max_inc = 50
    tt.melee.attacks[3].damage_min_inc = 30
    tt.melee.attacks[3].damage_radius = 50
    tt.melee.attacks[3].damage_type = DAMAGE_MAGICAL
    tt.melee.attacks[3].disabled = true
    tt.melee.attacks[3].hit_decal = "decal_paladin_holystrike"
    tt.melee.attacks[3].hit_offset = vec_2(22, 0)
    tt.melee.attacks[3].hit_time = fts(15)
    tt.melee.attacks[3].level = 0
    tt.melee.attacks[3].pop = nil
    tt.melee.attacks[3].mod = "mod_paladin_silence"
    tt.melee.attacks[3].power_name = "holystrike"
    tt.melee.attacks[3].shared_cooldown = true
    tt.melee.attacks[3].signal = "holystrike"
    tt.melee.attacks[3].vis_bans = bor(F_FLYING)
    tt.melee.attacks[3].vis_flags = bor(F_BLOCK)
    tt.melee.cooldown = 1 + fts(13)
    tt.melee.range = 60
    tt.motion.max_speed = 75
    tt.powers.healing = CC("power")
    tt.powers.shield = CC("power")
    tt.powers.holystrike = CC("power")
    tt.render.sprites[1].prefix = "soldier_paladin"
    tt.render.sprites[1].anchor.y = anchor_y
    tt.soldier.melee_slot_offset = vec_2(5, 0)
    tt.timed_actions.list[1] = CC("mod_attack")
    tt.timed_actions.list[1].animation = "healing"
    tt.timed_actions.list[1].cast_time = fts(17)
    tt.timed_actions.list[1].cooldown = 10
    tt.timed_actions.list[1].disabled = true
    tt.timed_actions.list[1].fn_can = function(t, s, a)
        return t.health.hp < a.min_health_factor * t.health.hp_max
    end
    tt.timed_actions.list[1].level = 0
    tt.timed_actions.list[1].min_health_factor = 0.7
    tt.timed_actions.list[1].mod = "mod_healing_paladin"
    tt.timed_actions.list[1].power_name = "healing"
    tt.timed_actions.list[1].sound = "HealingSound"

    tt = RT("mod_healing_paladin", "modifier")
    AC(tt, "hps")
    tt.hps.heal_every = 1e+99
    tt.hps.heal_min = 0
    tt.hps.heal_max = 0
    tt.hps.heal_min_inc = 44
    tt.hps.heal_max_inc = 66
    tt.main_script.insert = scripts.mod_hps.insert
    tt.main_script.update = scripts.mod_hps.update
    tt.modifier.duration = fts(1)
    tt.modifier.ban_types = {MOD_TYPE_POISON}
    tt.modifier.remove_banned = true

    tt = RT("mod_paladin_silence", "modifier")
    AC(tt, "render")
    tt.modifier.duration = 4
    tt.modifier.bans = {"mod_shaman_armor", "mod_shaman_magic_armor", "mod_shaman_priest_heal"}
    tt.modifier.remove_banned = true
    tt.main_script.insert = scripts.mod_silence.insert
    tt.main_script.remove = scripts.mod_silence.remove
    tt.main_script.update = scripts.mod_track_target.update
    tt.render.sprites[1].prefix = "vanhelsing_silence"
    tt.render.sprites[1].size_names = {"small", "big", "big"}
    tt.render.sprites[1].name = "small"
    tt.render.sprites[1].loop = true
    tt.render.sprites[1].sort_y_offset = -2

    tt = RT("tower_barbarian", "tower_barrack_1")
    AC(tt, "powers")
    tt.info.portrait = IS_PHONE_OR_TABLET and "portraits_towers_0008" or "info_portraits_towers_0012"
    tt.info.enc_icon = 18
    tt.info.i18n_key = "TOWER_BARBARIANS"
    tt.tower.type = "barbarian"
    tt.tower.price = 195
    tt.powers.dual = CC("power")
    tt.powers.dual.price_base = 250
    tt.powers.dual.price_inc = 100
    tt.powers.dual.enc_icon = 12
    tt.powers.dual.name = "DOUBLE_AXE"
    tt.powers.twister = CC("power")
    tt.powers.twister.price_base = 150
    tt.powers.twister.price_inc = 100
    tt.powers.twister.enc_icon = 13
    tt.powers.throwing = CC("power")
    tt.powers.throwing.price_base = 150
    tt.powers.throwing.price_inc = 100
    tt.powers.throwing.enc_icon = 14
    tt.powers.throwing.name = "THROWING_AXES"
    tt.barrack.soldier_type = "soldier_barbarian"
    tt.barrack.max_soldiers = 4
    tt.barrack.rally_range = 165
    tt.render.sprites[1].name = "terrain_barrack_%04i"
    tt.render.sprites[1].offset = vec_2(0, 13)
    tt.render.sprites[2].name = "tower_barrack_lvl4_Barbarians_layer1_0001"
    tt.render.sprites[2].offset = vec_2(0, 39)
    tt.render.sprites[3].prefix = "towerbarracklvl4_barbarian_door"
    tt.render.sprites[3].offset = vec_2(0, 39)
    tt.sound_events.insert = "BarrackBarbarianTaunt"
    tt.sound_events.change_rally_point = "BarrackBarbarianTaunt"

    tt = RT("soldier_barbarian", "soldier_militia")
    AC(tt, "powers", "ranged")
    anchor_y = 0.3
    image_y = 62
    tt.health.armor = 0
    tt.health.dead_lifetime = 10
    tt.health.hp_max = 310
    tt.health_bar.offset = vec_2(0, ady(48))
    tt.info.portrait = "info_portraits_soldiers_0005"
    tt.info.random_name_count = 20
    tt.info.random_name_format = "SOLDIER_BARBARIAN_RANDOM_%i_NAME"
    tt.motion.max_speed = 90
    tt.powers.dual = CC("power")
    tt.powers.dual.on_power_upgrade = scripts.soldier_barbarian.on_power_upgrade
    tt.powers.twister = CC("power")
    tt.powers.throwing = CC("power")
    tt.render.sprites[1].prefix = "soldier_barbarian"
    tt.render.sprites[1].anchor.y = anchor_y
    tt.soldier.melee_slot_offset = vec_2(5, 0)
    tt.melee.cooldown = 1 + fts(11)
    tt.melee.range = 60
    tt.melee.attacks[1].damage_inc = 12
    tt.melee.attacks[1].damage_max = 24
    tt.melee.attacks[1].damage_min = 16
    tt.melee.attacks[1].power_name = "dual"
    tt.melee.attacks[1].shared_cooldown = true
    tt.melee.attacks[2] = CC("area_attack")
    tt.melee.attacks[2].animation = "twister"
    tt.melee.attacks[2].chance = 0.1
    tt.melee.attacks[2].chance_inc = 0.05
    tt.melee.attacks[2].damage_inc = 15
    tt.melee.attacks[2].damage_max = 30
    tt.melee.attacks[2].damage_min = 10
    tt.melee.attacks[2].damage_radius = 40
    tt.melee.attacks[2].damage_type = DAMAGE_PHYSICAL
    tt.melee.attacks[2].disabled = true
    tt.melee.attacks[2].hit_time = fts(7)
    tt.melee.attacks[2].level = 0
    tt.melee.attacks[2].pop = nil
    tt.melee.attacks[2].power_name = "twister"
    tt.melee.attacks[2].shared_cooldown = true
    tt.melee.attacks[2].vis_bans = bor(F_FLYING)
    tt.melee.attacks[2].vis_flags = bor(F_BLOCK)
    tt.ranged.go_back_during_cooldown = true
    tt.ranged.range_while_blocking = true
    tt.ranged.attacks[1].bullet = "axe_barbarian"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(0, 12)}
    tt.ranged.attacks[1].cooldown = 2.5 + fts(14)
    tt.ranged.attacks[1].disabled = true
    tt.ranged.attacks[1].level = 0
    tt.ranged.attacks[1].max_range = 155
    tt.ranged.attacks[1].min_range = 55
    tt.ranged.attacks[1].power_name = "throwing"
    tt.ranged.attacks[1].range_inc = 13
    tt.ranged.attacks[1].shoot_time = fts(7)

    tt = RT("axe_barbarian", "arrow")
    tt.bullet.damage_min = 24
    tt.bullet.damage_max = 32
    tt.bullet.damage_inc = 10
    tt.bullet.flight_time = fts(23)
    tt.bullet.rotation_speed = 30 * FPS * math.pi / 180
    tt.bullet.miss_decal = "decal_axe"
    tt.bullet.reset_to_target_pos = true
    tt.main_script.insert = scripts.axe_barbarian.insert
    tt.render.sprites[1].name = "barbarian_axe_0001"
    tt.render.sprites[1].animated = false
    tt.bullet.pop = nil
    tt.sound_events.insert = "AxeSound"

    tt = RT("axe_barbarian_rude", "axe_barbarian")
    tt.bullet.damage_type = DAMAGE_RUDE

    tt = RT("tower_elf_holder")
    AC(tt, "tower", "tower_holder", "pos", "render", "ui", "info", "editor", "editor_script")
    tt.tower.type = "holder_elf"
    tt.tower.level = 1
    tt.tower.can_be_mod = false
    tt.info.i18n_key = "SPECIAL_ELF"
    tt.info.fn = scripts.tower_elf_holder.get_info
    tt.info.portrait = "info_portraits_towers_0013"
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].name = "terrain_barrack_%04i"
    tt.render.sprites[1].offset = vec_2(0, 2)
    tt.render.sprites[2] = CC("sprite")
    tt.render.sprites[2].name = "elfTower_layer1_0026"
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].offset = vec_2(0, 20)
    tt.ui.click_rect = r(-40, -10, 80, 90)
    tt.ui.has_nav_mesh = true
    tt.editor.props = {{"tower.terrain_style", PT_NUMBER}, {"tower.default_rally_pos", PT_COORDS},
                       {"tower.holder_id", PT_STRING}, {"ui.nav_mesh_id", PT_STRING}, {"editor.game_mode", PT_NUMBER}}
    tt.editor_script.insert = scripts.editor_tower.insert
    tt.editor_script.remove = scripts.editor_tower.remove

    tt = RT("tower_elf", "tower_barrack_1")
    AC(tt, "powers")
    tt.info.portrait = "info_portraits_towers_0013"
    tt.barrack.max_soldiers = 4
    tt.barrack.rally_range = 170
    tt.barrack.respawn_offset = vec_2(0, 0)
    tt.barrack.soldier_type = "soldier_elf"
    tt.mercenary = true
    tt.editor.props = table.append(tt.editor.props, {{"barrack.rally_pos", PT_COORDS}}, true)
    tt.info.i18n_key = "SPECIAL_ELF"
    tt.info.fn = scripts.tower_elf_holder.get_info
    tt.main_script.insert = scripts.tower_barrack.insert
    tt.main_script.remove = scripts.tower_barrack.remove
    tt.main_script.update = scripts.tower_barrack_mercenaries.update
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].name = "terrain_barrack_%04i"
    tt.render.sprites[1].offset = vec_2(0, 2)
    tt.render.sprites[2] = CC("sprite")
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].name = "elfTower_layer1_0001"
    tt.render.sprites[2].offset = vec_2(0, 20)
    tt.render.sprites[3] = CC("sprite")
    tt.render.sprites[3].loop = false
    tt.render.sprites[3].name = "close"
    tt.render.sprites[3].offset = vec_2(0, 20)
    tt.render.sprites[3].prefix = "tower_elf_door"
    tt.render.door_sid = 3
    tt.sound_events.change_rally_point = "ElfTaunt"
    tt.sound_events.insert = "ElfTaunt"
    tt.sound_events.mute_on_level_insert = true
    tt.tower.level = 1
    tt.tower.price = 190
    tt.tower.terrain_style = nil
    tt.tower.type = "elf"
    tt.ui.click_rect = r(-40, -10, 80, 90)
    tt.powers.bleed = CC("power")
    tt.powers.bleed.price_base = 100
    tt.powers.bleed.price_inc = 100
    tt.powers.bleed.enc_icon = 19
    tt.powers.bleed.name = "BLEEDING"
    tt.powers.cripple = CC("power")
    tt.powers.cripple.price_base = 200
    tt.powers.cripple.price_inc = 125
    tt.powers.cripple.enc_icon = 24
    tt.powers.cripple.name = "CRIPPLE"

    tt = RT("soldier_elf", "soldier_militia")
    AC(tt, "powers", "ranged")
    AC(tt, "ranged")
    image_y = 32
    anchor_y = 0.19
    tt.health.hp_max = 90
    tt.health_bar.offset = vec_2(0, ady(31))
    tt.health.dead_lifetime = 14
    tt.info.portrait = "info_portraits_soldiers_0021"
    tt.info.random_name_count = 10
    tt.info.random_name_format = "SOLDIER_ELVES_RANDOM_%i_NAME"
    tt.melee.attacks[1].damage_max = 50
    tt.melee.attacks[1].damage_min = 25
    tt.melee.attacks[1].cooldown = 1
    tt.melee.attacks[1].hit_time = fts(5)
    tt.melee.attacks[1].track_damage = true
    tt.melee.attacks[1].damage_type = bor(DAMAGE_PHYSICAL, DAMAGE_NO_DODGE)
    tt.melee.attacks[1].power_name = "bleed"
    tt.melee.range = 60
    tt.motion.max_speed = 125
    tt.ranged.attacks[1].power_name = "bleed"
    tt.ranged.attacks[1].bullet = "arrow_elf"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(4, 16)}
    tt.ranged.attacks[1].cooldown = 1 + fts(15)
    tt.ranged.attacks[1].max_range = 200
    tt.ranged.attacks[1].min_range = 50
    tt.ranged.attacks[1].shoot_time = fts(7)
    tt.ranged.attacks[1].shared_cooldown = true
    tt.ranged.attacks[2] = table.deepclone(tt.ranged.attacks[1])
    tt.ranged.attacks[2].chance = 0.2
    tt.ranged.attacks[2].chance_inc = 0.1
    tt.ranged.attacks[2].level = 0
    tt.ranged.attacks[2].bullet = "arrow_elf_cripple"
    tt.ranged.attacks[2].power_name = "cripple"
    tt.ranged.attacks[2].disabled = true
    tt.ranged.range_while_blocking = true
    tt.ranged.go_back_during_cooldown = true
    tt.regen.cooldown = 1
    tt.render.sprites[1].prefix = "soldier_elf"
    -- tt.sound_events.insert = "ElfTaunt"
    tt.unit.marker_offset = vec_2(0, 0)
    tt.unit.mod_offset = vec_2(0, ady(22))
    tt.unit.price = 100
    tt.powers.bleed = CC("power")
    tt.powers.bleed.on_power_upgrade = scripts.soldier_elf.on_power_upgrade
    tt.powers.cripple = CC("power")

    tt = RT("arrow_elf", "arrow")
    tt.bullet.damage_min = 25
    tt.bullet.damage_max = 50
    tt.bullet.flight_time = fts(12)
    tt.bullet.reset_to_target_pos = true
    tt.bullet.damage_type = bor(DAMAGE_PHYSICAL, DAMAGE_NO_DODGE)

    tt = RT("arrow_elf_cripple", "arrow_elf")
    tt.bullet.damage_type = bor(DAMAGE_TRUE, DAMAGE_NO_DODGE)
    tt.bullet.particles_name = "ps_arrow_multishot_hero_alleria"
    tt.render.sprites[1].name = "hero_archer_arrow"
    tt.bullet.reset_to_target_pos = true
    tt.bullet.mod = "mod_elf_cripple"
    tt.bullet.flight_time = fts(8)
    tt.bullet.damage_min = 55
    tt.bullet.damage_max = 55
    tt.bullet.damage_inc = 15

    tt = RT("mod_elf_bleed", "mod_blood")
    tt.dps.damage_max = 5
    tt.dps.damage_min = 5
    tt.dps.damage_every = 1
    tt.dps.damage_inc = 5
    tt.modifier.allows_duplicate = true

    tt = RT("mod_elf_cripple", "mod_slow")
    tt.slow.factor = 0.6
    tt.modifier.duration = 2.5

    tt = RT("tower_barrack_amazonas", "tower_barrack_1")
    AC(tt, "powers")
    tt.tower.type = "mercenaries_amazonas"
    tt.tower.level = 1
    tt.tower.price = 190
    tt.barrack.max_soldiers = 4
    tt.mercenary = true
    tt.info.portrait = "kr2_info_portraits_towers_0015"
    tt.render.sprites[2] = CC("sprite")
    tt.render.sprites[2].name = "idle"
    tt.render.sprites[2].offset = vec_2(0, 35)
    tt.render.sprites[2].prefix = "tower_merc_camp_amazonas"
    tt.barrack.soldier_type = "soldier_amazona"
    tt.barrack.rally_range = 160
    tt.barrack.respawn_offset = vec_2(0, 0)
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].name = "terrain_barrack_%04i"
    tt.render.sprites[1].offset = vec_2(0, 10)
    tt.info.fn = function()
        local tpl = E:get_template("tower_barrack_amazonas")
        return scripts.tower_barrack.get_info(tpl)
    end
    tt.main_script.insert = scripts.tower_barrack.insert
    tt.main_script.remove = scripts.tower_barrack.remove
    tt.main_script.update = scripts.tower_barrack_mercenaries.update
    tt.sound_events.insert = "AmazonTaunt"
    tt.sound_events.mute_on_level_insert = true
    tt.sound_events.change_rally_point = "AmazonTaunt"
    tt.powers.whirlwind = CC("power")
    tt.powers.whirlwind.price_base = 250
    tt.powers.whirlwind.max_level = 1
    tt.powers.whirlwind.enc_icon = 13
    tt.powers.whirlwind.name = "WHIRLWIND"
    tt.powers.valkyrie = CC("power")
    tt.powers.valkyrie.price_base = 175
    tt.powers.valkyrie.max_level = 1
    tt.powers.valkyrie.enc_icon = 19
    tt.powers.valkyrie.name = "VALKYRIE"

    tt = RT("soldier_amazona", "soldier_militia")
    AC(tt, "track_kills", "auras", "powers")
    anchor_y = 0.35
    image_y = 70
    tt.health.armor = 0
    tt.health.dead_lifetime = 12
    tt.health.hp_max = 290
    tt.health.hp_inc = 50
    tt.health.power_name = "valkyrie"
    tt.health_bar.offset = vec_2(0, ady(56))
    tt.info.portrait = "kr2_info_portraits_soldiers_0011"
    tt.info.random_name_count = 10
    tt.info.random_name_format = "SOLDIER_AMAZONAS_RANDOM_%i_NAME"
    tt.melee.attacks[1].damage_max = 36
    tt.melee.attacks[1].damage_min = 14
    tt.melee.attacks[1].hit_time = fts(7)
    tt.melee.attacks[1].shared_cooldown = true
    tt.melee.attacks[1].power_name = "valkyrie"
    tt.melee.attacks[1].damage_inc = 10
    tt.melee.attacks[2] = CC("area_attack")
    tt.melee.attacks[2].animation = "attack_2"
    tt.melee.attacks[2].chance = 0.3
    tt.melee.attacks[2].damage_max = 46
    tt.melee.attacks[2].damage_min = 24
    tt.melee.attacks[2].damage_radius = 55
    tt.melee.attacks[2].damage_type = DAMAGE_PHYSICAL
    tt.melee.attacks[2].hit_time = fts(8)
    tt.melee.attacks[2].damage_bans = bor(F_FLYING, F_FRIEND, F_HERO)
    tt.melee.attacks[2].shared_cooldown = true
    tt.melee.attacks[2].signal = "whirlwind"
    tt.melee.attacks[2].level = 0
    tt.melee.attacks[2].disabled = true
    tt.melee.attacks[2].power_name = "whirlwind"
    tt.melee.cooldown = 1
    tt.melee.range = 64
    tt.motion.max_speed = 90
    tt.regen.cooldown = 0.5
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].prefix = "soldier_amazona"
    -- tt.sound_events.insert = "AmazonTaunt"
    tt.sound_events.change_rally_point = "AmazonTaunt"
    tt.track_kills.mod = "amazona_heal_mod"
    tt.unit.marker_offset = vec_2(0, ady(23))
    tt.unit.mod_offset = vec_2(0, 17)
    tt.unit.price = 100
    tt.vis.bans = bor(F_POISON)
    tt.powers.whirlwind = CC("power")
    tt.powers.valkyrie = CC("power")
    tt.powers.valkyrie.on_power_upgrade = function(this, power_name, power)
        this.track_kills.mod = "amazona_gain_mod"
    end

    tt = RT("amazona_heal_mod", "modifier")
    AC(tt, "render", "heal_on_kill")
    tt.main_script.insert = scripts.mod_heal_on_kill.insert
    tt.main_script.update = scripts.mod_heal_on_kill.update
    tt.heal_on_kill.hp = 60

    tt = RT("amazona_gain_mod", "modifier")
    tt.gain = {
        damage = 2,
        hp = 3,
        speed = 1,
        damage_limit = 60,
        hp_limit = 150,
        speed_limit = 50,
        heal = 60,
        cooldown = 0.005,
        cooldown_limit = 0.2,
        size = 0.008,
        size_limit = 0.4
    }
    tt.main_script.insert = scripts.mod_gain_on_kill.insert
    tt.main_script.update = scripts.amazona_gain_mod.update

    local tower_templar = RT("tower_templar", "tower_barrack_1")
    AC(tower_templar, "powers")
    tower_templar.info.portrait = "kr2_info_portraits_towers_0007"
    tower_templar.info.enc_icon = 19
    tower_templar.tower.type = "templar"
    tower_templar.tower.price = 185
    tower_templar.powers.holygrail = CC("power")
    tower_templar.powers.holygrail.price_base = 180
    tower_templar.powers.holygrail.price_inc = 135
    tower_templar.powers.holygrail.name = "HOLY"
    tower_templar.powers.holygrail.enc_icon = 4
    tower_templar.powers.extralife = CC("power")
    tower_templar.powers.extralife.price_base = 150
    tower_templar.powers.extralife.price_inc = 150
    tower_templar.powers.extralife.name = "TOUGHNESS"
    tower_templar.powers.extralife.enc_icon = 6
    tower_templar.powers.blood = CC("power")
    tower_templar.powers.blood.price_base = 200
    tower_templar.powers.blood.price_inc = 150
    tower_templar.powers.blood.name = "ARTERIAL"
    tower_templar.powers.blood.enc_icon = 5
    tower_templar.barrack.soldier_type = "soldier_templar"
    tower_templar.barrack.rally_range = 160
    tower_templar.render.sprites[1].name = "terrain_barrack_%04i"
    tower_templar.render.sprites[1].offset = vec_2(0, 8)
    tower_templar.render.sprites[2].name = "tower_templars_layer1_0001"
    tower_templar.render.sprites[2].offset = vec_2(0, 34)
    tower_templar.render.sprites[3].prefix = "towertemplar_door"
    tower_templar.render.sprites[3].offset = vec_2(0, 34)
    tower_templar.render.sprites[4] = CC("sprite")
    tower_templar.render.sprites[4].prefix = "towertemplar_fire"
    tower_templar.render.sprites[4].offset = vec_2(-17, 19)
    tower_templar.render.sprites[5] = CC("sprite")
    tower_templar.render.sprites[5].prefix = "towertemplar_fire"
    tower_templar.render.sprites[5].offset = vec_2(18, 19)
    tower_templar.render.sprites[5].ts = 0.08
    tower_templar.sound_events.insert = "TemplarTauntReady"
    tower_templar.sound_events.change_rally_point = "TemplarTaunt"

    tt = RT("soldier_templar", "soldier_militia")
    AC(tt, "revive", "powers")
    anchor_y = 0.19
    image_y = 42
    tt.health.armor = 0.5
    tt.health.dead_lifetime = 15
    tt.health.hp_inc = 50
    tt.health.hp_max = 250
    tt.health.power_name = "extralife"
    tt.health_bar.offset = vec_2(0, ady(40))
    tt.idle_flip.animations = {"idle", "idle2"}
    tt.info.portrait = "kr2_info_portraits_soldiers_0001"
    tt.info.random_name_count = 20
    tt.info.random_name_format = "SOLDIER_TEMPLAR_RANDOM_%i_NAME"
    tt.melee.attacks[1].damage_max = 40
    tt.melee.attacks[1].damage_min = 30
    tt.melee.attacks[1].shared_cooldown = true
    tt.melee.attacks[1].side_effect = function(this, store, attack, target)
        this.revive.protect = this.revive.protect + 0.01
        if target then
            target.health.hp = target.health.hp - this.health.hp * 0.02 * this.powers.extralife.level
        end
    end
    tt.melee.attacks[2] = CC("melee_attack")
    tt.melee.attacks[2].animation = "blood"
    tt.melee.attacks[2].chance = 0.25
    tt.melee.attacks[2].damage_max = 40
    tt.melee.attacks[2].damage_min = 30
    tt.melee.attacks[2].damage_inc = 30
    tt.melee.attacks[2].disabled = true
    tt.melee.attacks[2].damage_type = bor(DAMAGE_RUDE, DAMAGE_NO_DODGE, DAMAGE_IGNORE_SHIELD)
    tt.melee.attacks[2].hit_time = fts(20)
    tt.melee.attacks[2].mod = "mod_blood_templar"
    tt.melee.attacks[2].pop = nil
    tt.melee.attacks[2].power_name = "blood"
    tt.melee.attacks[2].shared_cooldown = true
    tt.melee.attacks[2].sound_hit = "TemplarArterial"
    tt.melee.attacks[2].vis_bans = bor(F_FLYING, F_CLIFF)
    tt.melee.attacks[2].vis_flags = bor(F_BLOCK, F_BLOOD)
    tt.melee.attacks[2].side_effect = function(this, store, attack, target)
        this.revive.protect = this.revive.protect + 0.01
        if target then
            target.health.damage_factor = target.health.damage_factor * 1.033
            target.health.hp = target.health.hp - this.health.hp * 0.03 * this.powers.extralife.level
        end
    end
    tt.melee.arrived_slot_animation = "attack_wait"
    tt.melee.cooldown = 2 + fts(13)
    tt.melee.range = 64
    tt.motion.max_speed = 75
    tt.powers.blood = CC("power")
    tt.powers.extralife = CC("power")
    tt.powers.holygrail = CC("power")
    tt.render.sprites[1].prefix = "soldiertemplar"
    tt.render.sprites[1].anchor.y = anchor_y
    tt.revive.animation = "holygrail"
    tt.revive.chance = 0.1
    tt.revive.chance_inc = 0.1
    tt.revive.health_recover = 0.15
    tt.revive.health_recover_inc = 0.15
    tt.revive.protect = 0.25
    tt.revive.hit_time = fts(10)
    tt.revive.power_name = "holygrail"
    tt.revive.sound = "TemplarHolygrail"
    tt.revive.resist = {
        bans = bor(F_STUN, F_POISON, F_BURN, F_BLOOD),
        duration = 8,
        cost = 0.05,
        side_effect = scripts.holygrail.side_effect
    }
    tt.soldier.melee_slot_offset = vec_2(5, 0)
    tt.unit.marker_offset = vec_2(0, ady(7))
    tt.unit.mod_offset = vec_2(0, ady(23))

    tt = RT("mod_holygrail", "mod_soldier_cooldown")
    tt.cooldown_factor = 0.7
    tt.modifier.duration = 8

    tt = RT("mod_blood_templar", "mod_blood")
    tt.modifier.level = 1
    tt.modifier.duration = 3
    tt.dps.damage_min = 10
    tt.dps.damage_max = 10
    tt.dps.damage_inc = 10
    tt.dps.damage_every = 1

    local tower_assassin = RT("tower_assassin", "tower_barrack_1")
    AC(tower_assassin, "powers")
    tower_assassin.info.portrait = "kr2_info_portraits_towers_0008"
    tower_assassin.info.enc_icon = 20
    tower_assassin.tower.type = "assassin"
    tower_assassin.tower.price = 185
    tower_assassin.powers.sneak = CC("power")
    tower_assassin.powers.sneak.price_base = 225
    tower_assassin.powers.sneak.price_inc = 150
    tower_assassin.powers.sneak.enc_icon = 3
    tower_assassin.powers.pickpocket = CC("power")
    tower_assassin.powers.pickpocket.price_base = 100
    tower_assassin.powers.pickpocket.price_inc = 75
    tower_assassin.powers.pickpocket.max_level = 3
    tower_assassin.powers.pickpocket.name = "PICK"
    tower_assassin.powers.pickpocket.enc_icon = 1
    tower_assassin.powers.counter = CC("power")
    tower_assassin.powers.counter.price_base = 125
    tower_assassin.powers.counter.price_inc = 125
    tower_assassin.powers.counter.enc_icon = 2
    tower_assassin.barrack.soldier_type = "soldier_assassin"
    tower_assassin.barrack.rally_range = 165
    tower_assassin.render.sprites[1].name = "terrain_barrack_%04i"
    tower_assassin.render.sprites[1].offset = vec_2(0, 11)
    tower_assassin.render.sprites[2].name = "tower_assasins_layer1_0005"
    tower_assassin.render.sprites[2].offset = vec_2(0, 30)
    tower_assassin.render.sprites[3].prefix = "towerassassin_door"
    tower_assassin.render.sprites[3].offset = vec_2(0, 30)
    tower_assassin.sound_events.insert = "AssassinTauntReady"
    tower_assassin.sound_events.change_rally_point = "AssassinTaunt"

    tt = RT("soldier_assassin", "soldier_militia")
    AC(tt, "powers", "dodge", "cloak", "pickpocket")
    anchor_y = 0.19
    image_y = 42
    tt.cloak.alpha = 154
    tt.cloak.bans = F_RANGED
    tt.dodge.animation = "dodge"
    tt.dodge.chance = 0.4
    tt.dodge.chance_inc = 0.1
    tt.dodge.counter_attack = CC("melee_attack")
    tt.dodge.counter_attack.animation = "counter"
    tt.dodge.counter_attack.cooldown = 0
    tt.dodge.counter_attack.damage_inc = 10
    tt.dodge.counter_attack.damage_max = 14
    tt.dodge.counter_attack.damage_min = 10
    tt.dodge.counter_attack.hit_time = fts(8)
    tt.dodge.counter_attack.power_name = "counter"
    tt.dodge.ranged = true
    tt.dodge.power_name = "counter"
    tt.health.armor = 0
    tt.health.dead_lifetime = 10
    tt.health.hp_max = 200
    tt.health.instakill_resistance = 0.5
    tt.health_bar.offset = vec_2(0, 32.86)
    tt.info.portrait = "kr2_info_portraits_soldiers_0002"
    tt.info.random_name_count = 20
    tt.info.random_name_format = "SOLDIER_ASSASSIN_RANDOM_%i_NAME"
    tt.melee.attacks[1].cooldown = 0.6 + fts(13)
    tt.melee.attacks[1].damage_max = 14
    tt.melee.attacks[1].damage_min = 10
    tt.melee.attacks[1].forced_cooldown = true
    tt.melee.attacks[2] = CC("melee_attack")
    tt.melee.attacks[2].animation = "sneak"
    tt.melee.attacks[2].chance = 0.05
    tt.melee.attacks[2].chance_inc = 0.05
    tt.melee.attacks[2].cooldown = 0.6 + fts(24)
    tt.melee.attacks[2].damage_inc = 14
    tt.melee.attacks[2].damage_max = 34
    tt.melee.attacks[2].damage_min = 14
    tt.melee.attacks[2].disabled = true
    tt.melee.attacks[2].hit_time = fts(15)
    tt.melee.attacks[2].pop = nil
    tt.melee.attacks[2].power_name = "sneak"
    tt.melee.attacks[2].forced_cooldown = true
    tt.melee.attacks[2].sound_hit = "AssassinSneakAttack"
    tt.melee.attacks[2].vis_bans = bor(F_FLYING, F_CLIFF)
    tt.melee.attacks[2].vis_flags = F_BLOCK
    tt.melee.attacks[2].never_interrupt = true
    tt.melee.attacks[3] = CC("melee_attack")
    tt.melee.attacks[3].animation = "sneak"
    tt.melee.attacks[3].chance = 0.02
    tt.melee.attacks[3].chance_inc = 0.01
    tt.melee.attacks[3].cooldown = 0.6 + fts(24)
    tt.melee.attacks[3].disabled = true
    tt.melee.attacks[3].hit_time = fts(15)
    tt.melee.attacks[3].instakill = true
    tt.melee.attacks[3].side_effect = function(this, store, attack, target)
        scripts.heal(this, this.health.hp_max)
    end
    tt.melee.attacks[3].pop = {"pop_instakill"}
    tt.melee.attacks[3].power_name = "sneak"
    tt.melee.attacks[3].forced_cooldown = true
    tt.melee.attacks[3].sound_hit = "AssassinSneakAttack"
    tt.melee.attacks[3].vis_bans = bor(F_FLYING, F_CLIFF, F_BOSS)
    tt.melee.attacks[3].vis_flags = F_BLOCK
    tt.melee.attacks[3].never_interrupt = true
    tt.melee.forced_cooldown = tt.melee.attacks[1].cooldown
    tt.melee.range = 64
    tt.motion.max_speed = 90
    tt.pickpocket.chance = 0.15
    tt.pickpocket.chance_inc = 0.15
    tt.pickpocket.fx = "fx_coin_jump"
    tt.pickpocket.power_name = "pickpocket"
    tt.pickpocket.sound = "AssassinGold"
    tt.pickpocket.steal_max = 3
    tt.pickpocket.steal_min = 1
    tt.powers.counter = CC("power")
    tt.powers.pickpocket = CC("power")
    tt.powers.sneak = CC("power")
    tt.render.sprites[1].prefix = "soldierassassin"
    tt.render.sprites[1].anchor.y = anchor_y
    tt.soldier.melee_slot_offset = vec_2(5, 0)
    tt.unit.marker_offset = vec_2(0, ady(8))
    tt.unit.mod_offset = vec_2(0, ady(23))

    tt = RT("tower_barrack_dwarf", "tower_barrack_1")
    AC(tt, "powers")
    tt.barrack.rally_range = 180
    tt.barrack.soldier_type = "soldier_dwarf"
    tt.barrack.max_soldiers = 4
    tt.info.portrait = "kr2_info_portraits_towers_0018"
    tt.powers.armor = CC("power")
    tt.powers.armor.max_level = 2
    tt.powers.armor.price_base = 125
    tt.powers.armor.price_inc = 125
    tt.powers.armor.enc_icon = 20
    tt.powers.beer = CC("power")
    tt.powers.beer.price_base = 160
    tt.powers.beer.price_inc = 140
    tt.powers.beer.enc_icon = 21
    tt.powers.hammer = CC("power")
    tt.powers.hammer.price_base = 100
    tt.powers.hammer.price_inc = 100
    tt.powers.hammer.enc_icon = 19
    tt.render.sprites[1].name = "terrain_barrack_%04i"
    tt.render.sprites[1].offset = vec_2(0, 10)
    tt.render.sprites[2].name = "DwarfHall_0001"
    tt.render.sprites[2].offset = vec_2(0, 30)
    tt.render.sprites[2].hidden = true
    tt.render.sprites[3].prefix = "towerbarrackdwarf_door"
    tt.render.sprites[3].offset = vec_2(0, 30)
    tt.sound_events.insert = "DwarfTaunt"
    tt.sound_events.change_rally_point = "DwarfTaunt"
    tt.tower.price = 185
    tt.tower.type = "barrack_dwarf"

    tt = RT("soldier_dwarf", "soldier_militia")
    image_y = 42
    anchor_y = 0.21428571428571427
    AC(tt, "powers")
    tt.beer = {}
    tt.beer.animation = "beer"
    tt.beer.cooldown = 12
    tt.beer.hp_trigger_factor = 0.35
    tt.beer.mod = "mod_dwarf_beer"
    tt.beer.ts = 0
    tt.health.armor = 0.2
    tt.health.armor_inc = 0.25
    tt.health.armor_power_name = "armor"
    tt.health.dead_lifetime = 12
    tt.health.hp_max = 220
    tt.health_bar.offset = vec_2(0, ady(41))
    tt.info.portrait = "kr2_info_portraits_soldiers_0012"
    tt.info.random_name_count = 10
    tt.info.random_name_format = "SOLDIER_DWARF_RANDOM_%i_NAME"
    tt.main_script.update = scripts.soldier_dwarf.update
    tt.melee.attacks[1].damage_inc = 4
    tt.melee.attacks[1].cooldown_inc = -0.1
    tt.melee.attacks[1].damage_max = 18
    tt.melee.attacks[1].damage_min = 12
    tt.melee.attacks[1].power_name = "hammer"
    tt.melee.attacks[1].cooldown = 1
    tt.melee.attacks[1].side_effect = function(this, store, attack, target)
        this.beer.ts = this.beer.ts - 0.4
    end
    tt.melee.range = 64
    tt.motion.max_speed = 2.5 * FPS
    tt.powers.armor = CC("power")
    tt.powers.beer = CC("power")
    tt.powers.hammer = CC("power")
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].prefix = "soldierdwarf"
    tt.unit.marker_offset = vec_2(0, ady(9))

    tt = RT("mod_dwarf_beer", "modifier")
    AC(tt, "hps", "render")
    tt.hps.heal_min = 20
    tt.hps.heal_max = 20
    tt.hps.heal_every = 1
    tt.modifier.duration = 1
    tt.modifier.duration_inc = 2
    tt.modifier.use_mod_offset = false
    tt.render.sprites[1].name = "dwarf_beer_aura"
    tt.render.sprites[1].loop = true
    tt.render.sprites[1].z = Z_DECALS
    tt.render.sprites[2] = CC("sprite")
    tt.render.sprites[2].name = "dwarf_beer_bubbles"
    tt.render.sprites[2].loop = true
    tt.render.sprites[2].offset.y = 10
    tt.render.sprites[2].z = Z_EFFECTS
    tt.main_script.insert = scripts.mod_dwarf_beer.insert
    tt.main_script.update = scripts.mod_hps.update
    tt.main_script.remove = scripts.mod_dwarf_beer.remove

    tt = RT("tower_barrack_mercenaries", "tower_barrack_1")
    AC(tt, "powers")
    tt.tower.type = "mercenaries_desert"
    tt.tower.level = 1
    tt.tower.price = 185
    tt.barrack.max_soldiers = 4
    tt.mercenary = true
    tt.info.portrait = "kr2_info_portraits_towers_0013"
    tt.info.fn = function()
        local tpl = E:get_template("tower_barrack_mercenaries")
        return scripts.tower_barrack.get_info(tpl)
    end
    tt.main_script.insert = scripts.tower_barrack.insert
    tt.main_script.remove = scripts.tower_barrack.remove
    tt.main_script.update = scripts.tower_barrack_mercenaries.update
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].name = "terrain_barrack_%04i"
    tt.render.sprites[1].offset = vec_2(0, 10)
    tt.render.sprites[2] = CC("sprite")
    tt.render.sprites[2].name = "idle"
    tt.render.sprites[2].offset = vec_2(0, 35)
    tt.render.sprites[2].prefix = "tower_merc_camp_desert"
    tt.render.sprites[3] = CC("sprite")
    tt.render.sprites[3].name = "tower_merc_camp_desert_fire"
    tt.render.sprites[3].offset = vec_2(-23, 15)
    tt.render.sprites[4] = CC("sprite")
    tt.render.sprites[4].name = "tower_merc_camp_desert_fire"
    tt.render.sprites[4].offset = vec_2(23, 15)
    tt.render.sprites[4].ts = 0.08
    tt.sound_events.insert = "GenieTaunt"
    tt.sound_events.mute_on_level_insert = true
    tt.barrack.soldier_type = "soldier_djinn"
    tt.barrack.rally_range = 150
    tt.barrack.respawn_offset = vec_2(0, 0)
    tt.powers.djspell = CC("power")
    tt.powers.djspell.price_base = 300
    tt.powers.djspell.price_inc = 200
    tt.powers.djshock = CC("power")
    tt.powers.djshock.price_base = 150
    tt.powers.djshock.price_inc = 100

    tt = RT("soldier_djinn", "soldier_militia")
    anchor_y = 0.14
    image_y = 54
    AC(tt, "timed_attacks", "powers")
    tt.health.armor = 0
    tt.health.magic_armor = 0.3
    tt.health.dead_lifetime = 12
    tt.health.hp_max = 300
    tt.health_bar.offset = vec_2(0, ady(58))
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.info.portrait = "kr2_info_portraits_soldiers_0007"
    tt.info.random_name_count = 10
    tt.info.random_name_format = "SOLDIER_DJINN_RANDOM_%i_NAME"
    tt.melee.attacks[1].damage_max = 40
    tt.melee.attacks[1].damage_min = 20
    tt.melee.attacks[1].damage_type = DAMAGE_MAGICAL
    tt.melee.range = 75
    tt.motion.max_speed = 2.6 * FPS
    tt.regen.cooldown = 0.5
    tt.render.sprites[1].prefix = "soldierdjinn"
    tt.render.sprites[1].anchor.y = anchor_y
    tt.soldier.melee_slot_offset = vec_2(10, 0)
    tt.powers.djspell = CC("power")
    tt.powers.djshock = CC("power")
    tt.timed_attacks.list[1] = CC("spell_attack")
    tt.timed_attacks.list[1].spell = "spell_djinn"
    tt.timed_attacks.list[1].max_range = 160
    tt.timed_attacks.list[1].cooldown = 16
    tt.timed_attacks.list[1].vis_flags = F_POLYMORPH
    tt.timed_attacks.list[1].vis_bans = bor(F_BOSS, F_FLYING)
    tt.timed_attacks.list[1].cast_time = fts(9)
    tt.timed_attacks.list[1].power_name = "djspell"
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].level = 0
    tt.timed_attacks.list[2] = CC("spell_attack")
    tt.timed_attacks.list[2].spell = "shock_djinn"
    tt.timed_attacks.list[2].max_range = 160
    tt.timed_attacks.list[2].cooldown = 10
    tt.timed_attacks.list[2].vis_flags = bor(F_STUN, F_MOD)
    tt.timed_attacks.list[2].vis_bans = bor(F_BOSS, F_FLYING)
    tt.timed_attacks.list[2].cast_time = fts(9)
    tt.timed_attacks.list[2].power_name = "djshock"
    tt.timed_attacks.list[2].disabled = true
    tt.timed_attacks.list[2].level = 0
    tt.unit.hide_after_death = true
    tt.unit.marker_offset = vec_2(0, ady(4))
    tt.unit.mod_offset = vec_2(0, 30)
    tt.unit.price = 150
    tt.vis.bans = bor(tt.vis.bans, F_POISON, F_CANNIBALIZE, F_SKELETON, F_BLOOD, F_LYCAN)
    -- tt.sound_events.insert = "GenieTaunt"
    tt.sound_events.change_rally_point = "GenieTaunt"

    tt = RT("spell_djinn", "spell")
    tt.main_script.insert = scripts.spell_djinn.insert
    tt.fx_options = {"fx_djinn_frog", "fx_djinn_chest", "fx_djinn_harp"}
    tt.spell.damage_base = 250
    tt.spell.damage_inc = 250
    tt.invalid_rate = 0.2

    tt = RT("fx_djinn_frog", "fx")
    tt.render.sprites[1].name = "fx_djinn_frog"
    tt.render.sprites[1].anchor.y = 0.16
    tt.render.sprites[1].z = Z_OBJECTS

    tt = RT("fx_djinn_chest", "decal_timed")
    tt.render.sprites[1].name = "soldier_djinn_polyshapes_0001"
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].anchor.y = 0.16
    tt.timed.duration = 4

    tt = RT("fx_djinn_harp", "decal_timed")
    tt.render.sprites[1].name = "soldier_djinn_polyshapes_0002"
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].anchor.y = 0.16
    tt.timed.duration = 4

    tt = RT("shock_djinn", "spell")
    tt.main_script.insert = scripts.shock_djinn.insert
    tt.spell.damage_base = 50
    tt.spell.damage_inc = 25
    tt.mod = "mod_djinn_shock"

    tt = RT("mod_djinn_shock", "mod_stun")
    tt.modifier.vis_flags = bor(F_MOD, F_STUN)
    tt.modifier.vis_bans = bor(F_BOSS)
    tt.duration_inc = 1
    tt.duration_base = 1

    tt = RT("tower_barrack_pirates", "tower")
    AC(tt, "barrack", "powers")
    tt.tower.type = "mercenaries_pirates"
    tt.tower.level = 1
    tt.tower.price = 195
    tt.barrack.max_soldiers = 4
    tt.mercenary = true
    tt.info.fn = function()
        local tpl = E:get_template("tower_barrack_pirates")
        return scripts.tower_barrack.get_info(tpl)
    end
    tt.info.portrait = "kr2_info_portraits_towers_0014"
    tt.main_script.update = scripts.tower_barrack_mercenaries.update
    tt.main_script.remove = scripts.tower_barrack.remove
    tt.powers.bigbomb = CC("power")
    tt.powers.bigbomb.price_base = 225
    tt.powers.bigbomb.price_inc = 125
    tt.powers.bigbomb.enc_icon = 18
    tt.powers.quickup = CC("power")
    tt.powers.quickup.price_base = 110
    tt.powers.quickup.price_inc = 110
    tt.powers.quickup.max_level = 2
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].name = "terrain_barrack_%04i"
    tt.render.sprites[1].offset = vec_2(0, 10)
    tt.render.sprites[2] = CC("sprite")
    tt.render.sprites[2].prefix = "tower_merc_camp_pirates"
    tt.render.sprites[2].name = "idle"
    tt.render.sprites[2].offset = vec_2(0, 35)
    tt.barrack.soldier_type = "soldier_pirate_flamer"
    tt.barrack.rally_range = 150
    tt.barrack.respawn_offset = vec_2(0, 0)
    tt.sound_events.insert = "PiratesTaunt"

    tt = RT("soldier_pirate_flamer", "soldier_militia")
    AC(tt, "ranged", "powers")
    anchor_y = 0.16
    image_y = 36
    tt.health.armor = 0
    tt.health.dead_lifetime = 10
    tt.health.hp_max = 100
    tt.health_bar.offset = vec_2(0, ady(32))
    tt.info.portrait = "kr2_info_portraits_soldiers_0009"
    tt.info.random_name_count = 10
    tt.info.random_name_format = "SOLDIER_PIRATES_RANDOM_%i_NAME"
    tt.melee.attacks[1].damage_max = 30
    tt.melee.attacks[1].damage_min = 15
    tt.melee.range = 64
    tt.motion.max_speed = 2.7 * FPS
    tt.regen.cooldown = 1
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].prefix = "soldier_pirate_flamer"
    tt.unit.marker_offset = vec_2(0, ady(5))
    tt.unit.mod_offset = vec_2(0, 16)
    tt.unit.price = 150
    tt.ranged.attacks[1].bullet = "bomb_molotov"
    tt.ranged.attacks[1].shoot_time = fts(5)
    tt.ranged.attacks[1].cooldown = 1 + fts(15)
    tt.ranged.attacks[1].max_range = 165
    tt.ranged.attacks[1].min_range = 25
    tt.ranged.attacks[1].animation = "ranged_attack"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(0, 15)}
    tt.ranged.attacks[1].shot_sound = "AxeSound"
    tt.ranged.attacks[1].vis_bans = F_FLYING
    tt.ranged.attacks[1].node_prediction = fts(17)
    tt.ranged.attacks[1].ignore_hit_offset = true
    tt.ranged.attacks[1].power_name = "quickup"
    tt.ranged.attacks[1].cooldown_inc = -0.1
    tt.ranged.attacks[2] = table.clone(tt.ranged.attacks[1])
    tt.ranged.attacks[2].bullet = "bomb_molotov_big"
    tt.ranged.attacks[2].cooldown = 7
    tt.ranged.attacks[2].disabled = true
    tt.ranged.attacks[2].power_name = "bigbomb"
    tt.ranged.attacks[2].node_prediction = fts(28)
    -- tt.sound_events.insert = "PiratesTaunt"
    tt.sound_events.change_rally_point = "PiratesTaunt"
    tt.powers.bigbomb = CC("power")
    tt.powers.quickup = CC("power")

    tt = RT("bomb_molotov", "bomb")
    tt.render.sprites[1].name = "proy_molotov"
    tt.bullet.flight_time = fts(18)
    tt.bullet.damage_min = 9
    tt.bullet.damage_max = 27
    tt.bullet.damage_radius = 48
    tt.bullet.hit_fx = "fx_explosion_molotov"
    tt.sound_events.insert = "AxeSound"

    tt = RT("fx_explosion_molotov", "fx")
    tt.render.sprites[1].name = "explosion_molotov"
    tt.render.sprites[1].anchor.y = 0.18

    tt = RT("bomb_molotov_big", "bomb_molotov")
    tt.render.sprites[1].scale = vec_2(1.5, 1.5)
    tt.bullet.rotation_speed = 30 * FPS * math.pi / 180
    tt.bullet.damage_min = 10
    tt.bullet.damage_max = 30
    tt.bullet.damage_inc = 11
    tt.bullet.damage_radius = 42
    tt.bullet.damage_radius_inc = 10
    tt.bullet.flight_time = fts(30)
    tt.bullet.mod = "mod_molotov_big"
    tt.bullet.hit_fx = "fx_explosion_molotov_big"

    tt = RT("fx_explosion_molotov_big", "fx_explosion_molotov")
    tt.render.sprites[1].scale = vec_2(1.2, 1.2)

    tt = RT("mod_molotov_big", "mod_lava")
    tt.modifier.duration = 2
    tt.dps.damage_min = 6
    tt.dps.damage_max = 6
    tt.dps.damage_inc = 2
    tt.dps.damage_every = 0.5
    tt.modifier.vis_flags = bor(F_MOD, F_BURN)
    tt.render.sprites[1].prefix = "fx_burn"
    tt.render.sprites[1].name = "small"
    tt.render.sprites[1].size_names = {"small", "big", "big"}

    tt = RT("tower_blade", "tower_barrack_1")
    AC(tt, "powers")
    tt.info.enc_icon = 20
    tt.info.portrait = "kr3_info_portraits_towers_0005"
    tt.barrack.soldier_type = "soldier_blade"
    tt.barrack.rally_range = 160
    tt.powers.perfect_parry = CC("power")
    tt.powers.perfect_parry.price_base = 200
    tt.powers.perfect_parry.price_inc = 200
    tt.powers.perfect_parry.enc_icon = 21
    tt.powers.blade_dance = CC("power")
    tt.powers.blade_dance.price_base = 200
    tt.powers.blade_dance.price_inc = 225
    tt.powers.blade_dance.enc_icon = 12
    tt.powers.swirling = CC("power")
    tt.powers.swirling.price_base = 250
    tt.powers.swirling.price_inc = 150
    tt.powers.swirling.max_level = 1
    tt.powers.swirling.enc_icon = 16
    tt.powers.swirling.name = "SWIRLING_EDGE"
    tt.render.sprites[2].name = "barracks_towers_layer1_0076"
    tt.render.sprites[3].prefix = "tower_blade_door"
    tt.sound_events.change_rally_point = "ElvesBarrackBladesingerTaunt"
    tt.sound_events.insert = "ElvesBarrackBladesingerTaunt"
    tt.tower.price = 185
    tt.tower.type = "blade"

    tt = RT("tower_forest", "tower_barrack_1")
    AC(tt, "powers")
    tt.barrack.rally_range = 165
    tt.info.enc_icon = 19
    tt.info.portrait = "kr3_info_portraits_towers_0006"
    tt.info.i18n_key = "TOWER_FOREST_KEEPERS"
    tt.barrack.max_soldiers = 2
    tt.barrack.soldier_type = "soldier_forest"
    tt.barrack.rally_angle_offset = math.pi / 3
    tt.powers.circle = CC("power")
    tt.powers.circle.price_base = 200
    tt.powers.circle.price_inc = 185
    tt.powers.circle.enc_icon = 1
    tt.powers.eerie = CC("power")
    tt.powers.eerie.price_base = 200
    tt.powers.eerie.price_inc = 200
    tt.powers.eerie.max_level = 2
    tt.powers.eerie.enc_icon = 5
    tt.powers.oak = CC("power")
    tt.powers.oak.price_base = 200
    tt.powers.oak.price_inc = 250
    tt.powers.oak.enc_icon = 10
    tt.render.sprites[2].name = "barracks_towers_layer1_0101"
    tt.render.sprites[3].prefix = "tower_forest_door"
    tt.render.sprites[3].hidden = true
    tt.sound_events.change_rally_point = "ElvesBarrackForestKeeperTaunt"
    tt.sound_events.insert = "ElvesBarrackForestKeeperTaunt"
    tt.tower.price = 185
    tt.tower.type = "forest"

    tt = RT("soldier_blade", "soldier_barrack_1")
    AC(tt, "powers", "dodge", "timed_attacks")
    image_y = 68
    anchor_y = 15 / image_y
    tt.dodge.animation = "dodge"
    tt.dodge.chance = 0
    tt.dodge.chance_inc = 0.1
    tt.dodge.counter_attack = CC("area_attack")
    tt.dodge.counter_attack.animation = "perfect_parry"
    tt.dodge.counter_attack.duration = 2
    tt.dodge.counter_attack.damage_every = fts(5)
    tt.dodge.counter_attack.damage_max = 3
    tt.dodge.counter_attack.damage_min = 3
    tt.dodge.counter_attack.damage_radius = 50
    tt.dodge.counter_attack.damage_type = DAMAGE_TRUE
    tt.dodge.counter_attack.hit_time = fts(5)
    tt.dodge.counter_attack.sound = "TowerBladesingerPerfectParry"
    tt.dodge.power_name = "perfect_parry"
    tt.dodge.ranged = true
    tt.health.armor = 0.5
    tt.health.dead_lifetime = 15
    tt.health.hp_max = 200
    tt.health.on_damage = scripts.soldier_blade.on_damage
    tt.info.portrait = "kr3_info_portraits_soldiers_0001"
    tt.main_script.insert = scripts.soldier_blade.insert
    tt.main_script.update = scripts.soldier_blade.update
    tt.melee.attacks[1].animation = "attack1"
    tt.melee.attacks[1].cooldown = 1
    tt.melee.attacks[1].damage_max = 14
    tt.melee.attacks[1].damage_min = 10
    tt.melee.attacks[1].damage_inc = 5
    tt.melee.attacks[1].cooldown_inc = -0.2
    tt.melee.attacks[1].pop = {"pop_bladesinger"}
    tt.melee.attacks[1].forced_cooldown = true
    tt.melee.attacks[1].power_name = "swirling"
    tt.melee.attacks[2] = table.deepclone(tt.melee.attacks[1])
    tt.melee.attacks[2].animation = "attack2"
    tt.melee.attacks[2].chance = 0.33
    tt.melee.attacks[3] = table.deepclone(tt.melee.attacks[1])
    tt.melee.attacks[3].animation = "attack3"
    tt.melee.attacks[3].chance = 0.5
    tt.melee.forced_cooldown = tt.melee.attacks[1].cooldown
    tt.melee.range = 60
    tt.motion.max_speed = 80
    tt.powers.perfect_parry = CC("power")
    tt.powers.blade_dance = CC("power")
    tt.powers.blade_dance.damage_max = {35, 47, 56}
    tt.powers.blade_dance.damage_min = {25, 35, 40}
    tt.powers.blade_dance.hits = {2, 3, 4}
    tt.powers.swirling = CC("power")
    tt.render.sprites[1].prefix = "soldier_blade"
    tt.render.sprites[1].anchor.y = anchor_y
    tt.soldier.melee_slot_offset = vec_2(5, 0)
    tt.timed_attacks.list[1] = CC("custom_attack")
    tt.timed_attacks.list[1].cooldown = 9
    tt.timed_attacks.list[1].damage_max = nil
    tt.timed_attacks.list[1].damage_min = nil
    tt.timed_attacks.list[1].damage_type = DAMAGE_TRUE
    tt.timed_attacks.list[1].max_range = 125
    tt.timed_attacks.list[1].hits = nil
    tt.timed_attacks.list[1].min_count = 2
    tt.timed_attacks.list[1].vis_flags = bor(F_RANGED, F_STUN)
    tt.timed_attacks.list[1].vis_bans = bor(F_FLYING, F_BOSS, F_WATER)
    tt.timed_attacks.list[1].disabled = true
    tt.timed_attacks.list[1].hit_time = fts(5)
    tt.timed_attacks.list[1].sound = "TowerBladesingerBladedance"
    tt.unit.marker_offset = vec_2(0, 0)
    tt.unit.mod_offset = vec_2(0, 14)

    tt = RT("soldier_forest", "soldier_barrack_1")
    AC(tt, "powers", "timed_attacks", "ranged")
    image_y = 114
    anchor_y = 31 / image_y
    tt.health.armor = 0
    tt.health.dead_lifetime = 12
    tt.health.hp_max = 300
    tt.health_bar.offset = vec_2(0, 54)
    tt.info.portrait = "kr3_info_portraits_soldiers_0002"
    tt.info.random_name_format = "ELVES_SOLDIER_FOREST_KEEPER_%i_NAME"
    tt.info.random_name_count = 9
    tt.main_script.insert = scripts.soldier_forest.insert
    tt.main_script.update = scripts.soldier_forest.update
    tt.melee.attacks[1].animation = "attack"
    tt.melee.attacks[1].cooldown = 1.3
    tt.melee.attacks[1].damage_max = 36
    tt.melee.attacks[1].damage_min = 24
    tt.melee.attacks[1].pop = {"pop_forest_keeper"}
    tt.melee.attacks[1].forced_cooldown = true
    tt.melee.forced_cooldown = tt.melee.attacks[1].cooldown
    tt.melee.range = 49.5
    tt.motion.max_speed = 65
    tt.powers.circle = CC("power")
    tt.powers.eerie = CC("power")
    tt.powers.oak = CC("power")
    tt.ranged.attacks[1].animation = "ranged_attack"
    tt.ranged.attacks[1].bullet = "spear_forest"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(0, 35)}
    tt.ranged.attacks[1].cooldown = 2.5 + fts(18)
    tt.ranged.attacks[1].max_range = 165
    tt.ranged.attacks[1].min_range = 22.5
    tt.ranged.attacks[1].shoot_time = fts(8)
    tt.ranged.attacks[2] = table.deepclone(tt.ranged.attacks[1])
    tt.ranged.attacks[2].animation = "oak_attack"
    tt.ranged.attacks[2].bullet = "spear_forest_oak"
    tt.ranged.attacks[2].disabled = true
    tt.ranged.attacks[2].shoot_time = fts(14)
    tt.render.sprites[1].prefix = "soldier_forest"
    tt.render.sprites[1].anchor.y = anchor_y
    tt.soldier.melee_slot_offset = vec_2(5, 0)
    tt.timed_attacks.list[1] = CC("custom_attack")
    tt.timed_attacks.list[1].animation = "circle"
    tt.timed_attacks.list[1].cast_time = fts(15)
    tt.timed_attacks.list[1].cooldown = 10
    tt.timed_attacks.list[1].max_range = 150
    tt.timed_attacks.list[1].mod = "mod_forest_circle"
    tt.timed_attacks.list[1].sound = "TowerForestKeeperCircleOfHealing"
    tt.timed_attacks.list[1].trigger_hp_factor = 0.8
    tt.timed_attacks.list[1].vis_bans = bor(F_ENEMY)
    tt.timed_attacks.list[1].vis_flags = bor(F_MOD)
    tt.timed_attacks.list[2] = CC("aura_attack")
    tt.timed_attacks.list[2].animation = "eerie"
    tt.timed_attacks.list[2].cast_time = fts(20)
    tt.timed_attacks.list[2].cooldown = 16
    tt.timed_attacks.list[2].max_range = 110
    tt.timed_attacks.list[2].max_range_inc = 15
    tt.timed_attacks.list[2].bullet = "aura_forest_eerie"
    tt.timed_attacks.list[2].vis_bans = bor(F_FLYING)
    tt.timed_attacks.list[2].vis_flags = bor(F_RANGED)
    tt.ui.click_rect = r(-10, -2, 20, 35)
    tt.unit.marker_offset = vec_2(0, 0)
    tt.unit.mod_offset = vec_2(0, 25)
    tt.unit.hit_offset = vec_2(0, 25)

    tt = RT("spear_forest", "arrow")
    tt.bullet.damage_max = 69
    tt.bullet.damage_min = 45
    tt.bullet.miss_decal = "forestKeeper_proy_0002-f"
    tt.bullet.miss_decal_anchor = vec_2(1, 0.5)
    tt.bullet.flight_time = fts(14)
    tt.bullet.hide_radius = 1
    tt.bullet.reset_to_target_pos = true
    tt.render.sprites[1].name = "forestKeeper_proy_0001-f"
    tt.render.sprites[1].anchor.x = 0.8260869565217391
    tt.sound_events.insert = "TowerForestKeeperNormalSpear"
    tt = RT("spear_forest_oak", "spear_forest")
    tt.bullet.damage_max = 55
    tt.bullet.damage_min = 55
    tt.bullet.damage_inc = 35
    tt.bullet.damage_type = DAMAGE_TRUE
    tt.bullet.miss_decal = "forestKeeper_proySpecial_0002-f"
    tt.bullet.hit_fx = "fx_spear_forest_oak_hit"
    tt.render.sprites[1].name = "forestKeeper_proySpecial_0001-f"
    tt.sound_events.insert = "TowerForestKeeperAncientSpear"

    tt = RT("aura_forest_eerie", "aura")
    tt.aura.mods = {"mod_forest_eerie_slow", "mod_forest_eerie_dps"}
    tt.aura.radius = 60
    tt.aura.duration = 1.5
    tt.aura.duration_inc = 2
    tt.aura.cycle_time = fts(5)
    tt.aura.vis_flags = bor(F_MOD)
    tt.aura.vis_bans = bor(F_FLYING, F_FRIEND)
    tt.main_script.insert = scripts.aura_forest_eerie.insert
    tt.main_script.update = scripts.aura_apply_mod.update
    tt.roots_count = 9
    tt.roots_count_inc = 3
    tt.sound_events.insert = "TowerForestKeeperEerieGarden"

    tt = RT("mod_forest_circle", "modifier")
    AC(tt, "hps", "render")
    tt.render.sprites[1].name = "decal_mod_forest_circle"
    tt.render.sprites[1].z = Z_DECALS
    tt.render.sprites[2] = CC("sprite")
    tt.render.sprites[2].name = "forestKeeper_soldierBuff"
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].sort_y_offset = -1
    tt.render.sprites[2].anchor.y = 0.21428571428571427
    tt.modifier.duration = 4
    tt.modifier.use_mod_offset = false
    tt.modifier.ban_types = {MOD_TYPE_POISON}
    tt.modifier.remove_banned = true
    tt.hps.heal_min = 0
    tt.hps.heal_max = 0
    tt.hps.heal_inc = 4
    tt.hps.heal_every = 0.2
    tt.main_script.insert = scripts.mod_hps.insert
    tt.main_script.update = scripts.mod_hps.update

    tt = RT("mod_forest_eerie_slow", "mod_slow")
    tt.modifier.duration = 0.5
    tt.slow.factor = 0.5

    tt = RT("mod_forest_eerie_dps", "modifier")
    AC(tt, "dps")
    tt.dps.damage_max = 2
    tt.dps.damage_min = 2
    tt.dps.damage_inc = 1
    tt.dps.damage_every = fts(5)
    tt.modifier.duration = 0.5
    tt.main_script.insert = scripts.mod_dps.insert
    tt.main_script.update = scripts.mod_dps.update

    tt = RT("tower_drow", "tower_barrack_1")
    AC(tt, "powers")
    tt.barrack.soldier_type = "soldier_drow"
    tt.info.i18n_key = "ELVES_TOWER_SPECIAL_DROW"
    tt.info.portrait = "kr3_info_portraits_towers_0016"
    tt.powers.life_drain = CC("power")
    tt.powers.life_drain.price_base = 225
    tt.powers.life_drain.price_inc = 225
    tt.powers.double_dagger = CC("power")
    tt.powers.double_dagger.price_base = 175
    tt.powers.double_dagger.price_inc = 175
    tt.powers.double_dagger.max_level = 1
    tt.powers.blade_mail = CC("power")
    tt.powers.blade_mail.price_base = 125
    tt.powers.blade_mail.price_inc = 125
    tt.render.sprites[1].name = "terrain_barrack_%04i"
    tt.render.sprites[2].name = "mercenaryDraw_tower_layer1_0001"
    tt.render.sprites[2].offset = vec_2(0, 29)
    tt.render.sprites[3].prefix = "tower_drow_door"
    tt.render.sprites[3].offset = vec_2(0, 29)
    tt.sound_events.change_rally_point = "ElvesDrowTaunt"
    tt.sound_events.insert = "ElvesDrowTaunt"
    tt.sound_events.mute_on_level_insert = true
    tt.tower.price = 190
    tt.barrack.rally_range = 160
    tt.tower.type = "drow"

    tt = RT("soldier_drow", "soldier_barrack_1")
    AC(tt, "powers", "ranged", "track_damage")
    tt.health.armor = 0.6
    tt.health.dead_lifetime = 15
    tt.health.hp_max = 180
    tt.health.spiked_armor = 0
    tt.info.portrait = "kr3_info_portraits_soldiers_0007"
    tt.info.random_name_format = "ELVES_SOLDIER_DROW_%i_NAME"
    tt.info.random_name_count = 15
    tt.main_script.insert = scripts.soldier_drow.insert
    tt.main_script.update = scripts.soldier_drow.update
    tt.melee.attacks[1].animation = "attack"
    tt.melee.attacks[1].cooldown = 1
    tt.melee.attacks[1].damage_max = 14
    tt.melee.attacks[1].damage_min = 10
    tt.melee.attacks[1].hit_time = fts(12)
    tt.melee.attacks[1].forced_cooldown = true
    tt.melee.attacks[2] = CC("melee_attack")
    tt.melee.attacks[2].disabled = true
    tt.melee.attacks[2].animation = "healAttack"
    tt.melee.attacks[2].track_damage = true
    tt.melee.attacks[2].damage_max = 0
    tt.melee.attacks[2].damage_min = 0
    tt.melee.attacks[2].damage_inc = 50
    tt.melee.attacks[2].cooldown = 5.7
    tt.melee.attacks[2].hit_time = fts(12)
    tt.melee.attacks[2].power_name = "life_drain"
    tt.melee.forced_cooldown = tt.melee.attacks[1].cooldown
    tt.melee.range = 55
    tt.motion.max_speed = 75
    tt.powers.life_drain = CC("power")
    tt.powers.double_dagger = CC("power")
    tt.powers.blade_mail = CC("power")
    tt.powers.blade_mail.spiked_armor_inc = 0.25
    tt.ranged.range_while_blocking = true
    tt.ranged.go_back_during_cooldown = true
    tt.ranged.attacks[1].bullet = "dagger_drow"
    tt.ranged.attacks[1].animations = {"shoot_start", "shoot_loop", "shoot_end"}
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(14, 12)}
    tt.ranged.attacks[1].cooldown = 1 + fts(22)
    tt.ranged.attacks[1].loops = 1
    tt.ranged.attacks[1].max_range = 150
    tt.ranged.attacks[1].min_range = 40
    tt.ranged.attacks[1].shoot_times = {0}
    tt.ranged.attacks[1].power_name = "double_dagger"
    tt.render.sprites[1].prefix = "soldier_drow"
    tt.render.sprites[1].anchor.y = 0.2037037037037037
    tt.render.sprites[2] = CC("sprite")
    tt.render.sprites[2].hidden = true
    tt.render.sprites[2].name = "soldier_drow_blade_mail_decal"
    tt.render.sprites[2].z = Z_DECALS
    tt.render.sprites[2].ignore_start = true
    tt.track_damage.mod = "mod_life_drain_drow"
    tt.unit.mod_offset = vec_2(0, 15)
    tt.vis.flags = bor(tt.vis.flags, F_DARK_ELF)

    tt = RT("dagger_drow", "bullet")
    tt.bullet.damage_max = 32
    tt.bullet.damage_min = 22
    tt.bullet.hide_radius = 6
    tt.bullet.hit_distance = 22
    tt.bullet.hit_fx = "fx_dagger_drow_hit"
    tt.bullet.particles_name = "ps_dagger_drow"
    tt.bullet.predict_target_pos = true
    tt.bullet.damage_type = DAMAGE_STAB
    tt.flight_time_range = {fts(9), fts(16)}
    tt.main_script.insert = scripts.dagger_drow.insert
    tt.main_script.update = scripts.arrow.update
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].name = "mercenaryDraw_proy"

    tt = RT("mod_life_drain_drow", "modifier")
    AC(tt, "render")
    tt.heal_factor = 0.8
    tt.heal_bans = bor(F_POISON)
    tt.heal_base = 30
    tt.main_script.insert = scripts.mod_heal_on_damage.insert
    tt.main_script.update = scripts.mod_heal_on_damage.update
    tt.modifier.use_mod_offset = false
    tt.render.sprites[1].name = "soldier_drow_heal"
    tt.render.sprites[1].anchor.y = 0.2037037037037037
    tt.render.sprites[1].hidden = true
    tt.render.sprites[1].loop = false
    tt.render.sprites[1].hide_after_runs = 1

    tt = RT("tower_ewok", "tower_barrack_1")
    AC(tt, "powers")
    tt.info.portrait = "kr3_info_portraits_towers_0013"
    tt.barrack.max_soldiers = 4
    tt.barrack.rally_range = 175
    tt.barrack.respawn_offset = vec_2(0, 0)
    tt.barrack.soldier_type = "soldier_ewok"
    tt.editor.props = table.append(tt.editor.props, {{"barrack.rally_pos", PT_COORDS}}, true)
    tt.info.i18n_key = "ELVES_EWOK_TOWER"
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].name = "terrain_barrack_%04i"
    tt.render.sprites[1].offset = vec_2(0, 10)
    tt.render.sprites[2] = CC("sprite")
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].name = "ewok_hut_0002"
    tt.render.sprites[2].offset = vec_2(0, 32)
    tt.render.sprites[3] = CC("sprite")
    tt.render.sprites[3].loop = false
    tt.render.sprites[3].name = "close"
    tt.render.sprites[3].offset = vec_2(0, 32)
    tt.render.sprites[3].prefix = "tower_ewok_door"
    tt.render.door_sid = 3
    tt.sound_events.change_rally_point = "ElvesEwokTaunt"
    tt.sound_events.insert = "ElvesEwokTaunt"
    tt.sound_events.mute_on_level_insert = true
    tt.tower.level = 1
    tt.tower.price = 190
    tt.tower.terrain_style = nil
    tt.tower.type = "ewok"
    tt.ui.click_rect = r(-40, -10, 80, 90)
    tt.powers.armor = CC("power")
    tt.powers.armor.max_level = 3
    tt.powers.armor.price_base = 100
    tt.powers.armor.price_inc = 100
    tt.powers.tear = CC("power")
    tt.powers.tear.max_level = 3
    tt.powers.tear.price_base = 200
    tt.powers.tear.price_inc = 100
    tt.powers.shield = CC("power")
    tt.powers.shield.max_level = 2
    tt.powers.shield.price_base = 150
    tt.powers.shield.price_inc = 150

    tt = RT("soldier_ewok", "soldier_militia")
    AC(tt, "dodge", "ranged", "powers")
    image_y = 36
    anchor_y = 7 / image_y
    tt.powers.armor = CC("power")
    tt.powers.shield = CC("power")
    tt.powers.tear = CC("power")
    tt.powers.shield.on_power_upgrade = function(this, power_name, power)
        this.dodge.duration = this.dodge.duration + 1
        this.dodge.heal = this.dodge.heal + 25
        this.dodge.cooldown = this.dodge.cooldown - 1
    end
    tt.dodge.animation_end = "shield_end"
    tt.dodge.animation_hit = "shield_hit"
    tt.dodge.animation_start = "shield_start"

    function tt.dodge.can_dodge(store, this)
        this.dodge.last_hit_ts = store.tick_ts
        return this.health.hp <= this.health.hp_max * 0.5
    end

    tt.dodge.chance = 1
    tt.dodge.cooldown = 20
    tt.dodge.duration = 4
    tt.dodge.ranged = true
    tt.dodge.time_before_hit = 0
    tt.dodge.heal = 0
    tt.health.armor = 0
    tt.health.armor_inc = 0.2
    tt.health.armor_power_name = "armor"
    tt.health.dead_lifetime = 10
    tt.health.hp_max = 100
    tt.health_bar.offset = vec_2(0, 29)
    tt.health_bar.type = HEALTH_BAR_SIZE_SMALL
    tt.idle_flip.chance = 0.4
    tt.idle_flip.cooldown = 5
    tt.info.portrait = "kr3_info_portraits_soldiers_0006"
    tt.info.random_name_count = 6
    tt.info.random_name_format = "ELVES_SOLDIER_EWOK_%i_NAME"
    tt.main_script.insert = scripts.soldier_barrack.insert
    tt.main_script.remove = scripts.soldier_barrack.remove
    tt.main_script.update = scripts.soldier_ewok.update
    tt.melee.attacks[1].cooldown = 1
    tt.melee.attacks[1].damage_max = 7
    tt.melee.attacks[1].damage_min = 3
    tt.melee.attacks[1].hit_time = fts(10)
    tt.melee.attacks[1].pop = {"pop_ewoks"}
    tt.melee.attacks[1].pop_chance = 0.1
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].vis_bans = bor(F_CLIFF)
    tt.melee.attacks[1].vis_flags = F_BLOCK
    tt.melee.range = 50
    tt.motion.max_speed = 75
    tt.ranged.attacks[1].bullet = "bullet_soldier_ewok"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(0, 10)}
    tt.ranged.attacks[1].cooldown = 1.3
    tt.ranged.attacks[1].max_range = 150
    tt.ranged.attacks[1].min_range = 25
    tt.ranged.attacks[1].shoot_time = fts(11)
    tt.ranged.attacks[1].power_name = "tear"
    tt.powers.tear.on_power_upgrade = function(this, power_name, power)
        this.ranged.attacks[1].mod = "mod_ewok_tear"
    end
    tt.regen.cooldown = 0.5
    tt.render.sprites[1] = CC("sprite")
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].angles = {}
    tt.render.sprites[1].angles.walk = {"running"}
    tt.render.sprites[1].prefix = "soldier_ewok"
    tt.soldier.melee_slot_offset = vec_2(5, 0)
    -- tt.sound_events.insert = "ElvesEwokTaunt"
    tt.ui.click_rect = r(-10, -2, 20, 25)
    tt.unit.hit_offset = vec_2(0, 12)
    tt.unit.marker_offset = vec_2(0, 0)
    tt.unit.mod_offset = vec_2(0, 10)

    tt = RT("bullet_soldier_ewok", "arrow")
    tt.bullet.damage_max = 24
    tt.bullet.damage_min = 17
    tt.bullet.damage_inc = 10
    tt.bullet.damage_type = DAMAGE_STAB
    tt.bullet.align_with_trajectory = true
    tt.bullet.reset_to_target_pos = true
    tt.bullet.miss_decal = nil
    tt.render.sprites[1].name = "bullet_soldier_ewok"
    tt.render.sprites[1].animated = true

    tt = RT("mod_ewok_tear", "mod_damage")
    tt.damage_min = 0.01
    tt.damage_max = 0.01
    tt.damage_type = DAMAGE_ARMOR
    tt.damage_inc = 0.01

    tt = RT("tower_baby_ashbite", "tower")
    AC(tt, "barrack", "powers")
    tt.tower.hide_dust = true
    tt.tower.type = "baby_ashbite"
    tt.tower.level = 1
    tt.tower.price = 350
    tt.info.fn = scripts.tower_baby_ashbite.get_info
    tt.info.portrait = "kr3_info_portraits_towers_0019"
    tt.info.i18n_key = "ELVES_BABY_ASHBITE_TOWER"
    tt.info.damage_icon = "fireball"
    tt.render.sprites[1].name = "babyAshbite_tower_layer1_0001"
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].offset = vec_2(0, 26)
    tt.render.sprites[1].hidden = true
    tt.render.sprites[1].hover_off_hidden = true
    tt.render.sprites[2] = CC("sprite")
    tt.render.sprites[2].name = "babyAshbite_tower_layer1_0001"
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].offset = vec_2(0, 26)
    tt.render.sprites[3] = CC("sprite")
    tt.render.sprites[3].name = "babyAshbite_tower_layer2_0005"
    tt.render.sprites[3].animated = false
    tt.render.sprites[3].offset = vec_2(0, 26)
    tt.barrack.soldier_type = "soldier_baby_ashbite"
    tt.barrack.rally_range = 350
    tt.barrack.rally_anywhere = true
    tt.barrack.respawn_offset = vec_2(-4, 26)
    tt.barrack.max_soldiers = 1
    tt.main_script.insert = scripts.tower_barrack.insert
    tt.main_script.update = scripts.tower_baby_ashbite.update
    tt.main_script.remove = scripts.tower_barrack.remove
    tt.sound_events.insert = "ElvesAshbiteDeath"
    tt.sound_events.change_rally_point = "ElvesAshbiteConfirm"
    tt.powers.blazing_breath = CC("power")
    tt.powers.blazing_breath.price_base = 275
    tt.powers.blazing_breath.price_inc = 225
    tt.powers.blazing_breath.enc_icon = 8
    tt.powers.blazing_breath.max_level = 3
    tt.powers.fiery_mist = CC("power")
    tt.powers.fiery_mist.price_base = 275
    tt.powers.fiery_mist.price_inc = 0
    tt.powers.fiery_mist.enc_icon = 9
    tt.powers.fiery_mist.max_level = 1

    tt = RT("soldier_baby_ashbite", "soldier")
    AC(tt, "ranged", "powers")
    tt.health.armor = 0.5
    tt.health.dead_lifetime = 10
    tt.health.hp_max = 450
    tt.health.ignore_delete_after = true
    tt.health_bar.offset = vec_2(0, 120)
    tt.health_bar.type = HEALTH_BAR_SIZE_SMALL
    tt.idle_flip.chance = 0.4
    tt.idle_flip.cooldown = 1
    tt.info.fn = scripts.soldier_barrack.get_info
    tt.info.portrait = "kr3_info_portraits_towers_0014"
    tt.info.i18n_key = "ELVES_BABY_ASHBITE"
    tt.info.damage_icon = "fireball"
    tt.main_script.insert = scripts.soldier_baby_ashbite.insert
    tt.main_script.update = scripts.soldier_baby_ashbite.update
    tt.motion.max_speed = 90
    tt.regen.cooldown = 1
    tt.render.sprites[1] = CC("sprite")
    tt.render.sprites[1].anchor.y = 0.0625
    tt.render.sprites[1].angles = {}
    tt.render.sprites[1].angles.walk = {"idle"}
    tt.render.sprites[1].prefix = "babyAshbite"
    -- tt.render.sprites[1].sync_idx = 8
    tt.render.sprites[2] = CC("sprite")
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].name = "babyAshbite_0099"
    tt.render.sprites[2].anchor.y = 0.0625
    tt.soldier.melee_slot_offset = vec_2(0, 0)
    tt.ui.click_rect = r(-40, 70, 80, 30)
    tt.unit.hit_offset = vec_2(0, 84)
    tt.unit.hide_after_death = false
    tt.unit.marker_offset = vec_2(0, 0)
    tt.unit.mod_offset = vec_2(0, ady(25))
    tt.vis.bans = bor(tt.vis.bans, F_EAT, F_NET, F_POISON)
    tt.vis.flags = bor(tt.vis.flags, F_HERO, F_FLYING)
    tt.powers.blazing_breath = CC("power")
    tt.powers.fiery_mist = CC("power")
    tt.ranged.attacks[1] = CC("bullet_attack")
    tt.ranged.attacks[1].bullet = "fireball_baby_ashbite"
    tt.ranged.attacks[1].bullet_start_offset = {vec_2(28, 70)}
    tt.ranged.attacks[1].cooldown = 1.3 + fts(28)
    tt.ranged.attacks[1].min_range = 0
    tt.ranged.attacks[1].max_range = 100
    tt.ranged.attacks[1].shoot_time = fts(12)
    -- tt.ranged.attacks[1].sync_animation = true
    tt.ranged.attacks[1].ignore_hit_offset = true
    tt.ranged.attacks[1].animation = "shoot"
    tt.ranged.attacks[1].sound_shoot = "ElvesAshbiteSpit"
    tt.ranged.attacks[1].node_prediction = nil
    tt.ranged.attacks[2] = CC("bullet_attack")
    tt.ranged.attacks[2].level = 0
    tt.ranged.attacks[2].power_name = "blazing_breath"
    tt.ranged.attacks[2].disabled = true
    tt.ranged.attacks[2].bullet = "breath_baby_ashbite"
    tt.ranged.attacks[2].bullet_start_offset = {vec_2(24, 66)}
    tt.ranged.attacks[2].cooldown = 8
    tt.ranged.attacks[2].min_range = 0
    tt.ranged.attacks[2].max_range = 150
    tt.ranged.attacks[2].shoot_time = fts(9)
    -- tt.ranged.attacks[2].sync_animation = true
    tt.ranged.attacks[2].animation = "special"
    tt.ranged.attacks[2].sound = "ElvesAshbiteFlameThrower"
    tt.ranged.attacks[2].vis_bans = F_FLYING
    tt.ranged.attacks[3] = CC("bullet_attack")
    tt.ranged.attacks[3].level = 0
    tt.ranged.attacks[3].power_name = "fiery_mist"
    tt.ranged.attacks[3].disabled = true
    tt.ranged.attacks[3].bullet = "fierymist_baby_ashbite"
    tt.ranged.attacks[3].bullet_start_offset = {vec_2(24, 66)}
    tt.ranged.attacks[3].cooldown = 10
    tt.ranged.attacks[3].min_range = 0
    tt.ranged.attacks[3].max_range = 150
    tt.ranged.attacks[3].shoot_time = fts(9)
    -- tt.ranged.attacks[3].sync_animation = true
    tt.ranged.attacks[3].animation = "special"
    tt.ranged.attacks[3].vis_bans = F_FLYING
    tt.ranged.attacks[3].sound = "ElvesAshbiteSmoke"

    tt = RT("fireball_baby_ashbite", "bullet")
    tt.render.sprites[1].name = "fireball_baby_ashbite"
    tt.render.sprites[1].z = Z_BULLETS
    tt.bullet.damage_min = 83
    tt.bullet.damage_max = 125
    tt.bullet.damage_type = DAMAGE_TRUE
    tt.bullet.damage_radius = 30
    tt.bullet.min_speed = 240
    tt.bullet.max_speed = 240
    tt.bullet.node_prediction = true
    tt.bullet.g = nil
    tt.bullet.hit_fx = "fx_fireball_baby_ashbite_hit"
    tt.bullet.hit_fx_air = "fx_fireball_baby_ashbite_hit_air"
    tt.bullet.vis_flags = F_RANGED
    tt.main_script.update = scripts.fireball.update
    tt.sound_events.hit = "ElvesAshbiteFireball"

    tt = RT("fx_fireball_baby_ashbite_hit", "fx")
    tt.render.sprites[1].name = "fx_fireball_baby_ashbite_hit"
    tt.render.sprites[1].anchor.y = 0.24
    tt = RT("fx_fireball_baby_ashbite_hit_air", "fx")
    tt.render.sprites[1].name = "fx_fireball_baby_ashbite_hit_air"
    tt.render.sprites[1].anchor.y = 0.24

    tt = RT("breath_baby_ashbite", "bullet")
    tt.render = nil
    tt.bullet.damage_type = DAMAGE_NONE
    tt.bullet.min_speed = 240
    tt.bullet.max_speed = 240
    tt.bullet.g = nil
    tt.bullet.vis_flags = F_RANGED
    tt.bullet.emit_decal = "decal_emit_breath_baby_ashbite"
    tt.bullet.node_prediction = true
    tt.bullet.hit_fx = "fx_breath_baby_ashbite_hit"
    tt.bullet.hit_decal = "aura_breath_baby_ashbite"
    tt.main_script.update = scripts.fireball.update

    tt = RT("decal_emit_breath_baby_ashbite", "decal_scripted")
    tt.duration = fts(18)
    tt.render.sprites[1].name = "babyAshbite_0158"
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].anchor = vec_2(0.6909090909090909, 0.5416666666666666)
    tt.render.sprites[1].z = Z_EFFECTS
    tt.emit_ps = "ps_emit_breath_baby_ashbite"
    tt.main_script.update = scripts.decal_emit_breath_baby_ashbite.update
    tt.flight_time = nil
    tt = RT("fx_breath_baby_ashbite_hit", "fx")
    tt.render.sprites[1].name = "baby_ashbite_breath_fire"
    tt.render.sprites[1].anchor.y = 0.35714285714285715

    tt = RT("aura_breath_baby_ashbite", "aura")
    AC(tt, "tween", "render")
    tt.main_script.update = scripts.aura_apply_damage.update
    tt.aura.duration = fts(30)
    tt.aura.damage_inc = 16.666666666666668
    tt.aura.damage_min = 8.333333333333334
    tt.aura.damage_max = 8.333333333333334
    tt.aura.damage_type = DAMAGE_TRUE
    tt.aura.radius = 60
    tt.aura.cycle_time = fts(5)
    tt.aura.vis_bans = bor(F_FRIEND)
    tt.render.sprites[1].name = "baby_ashbite_breath_fire_decal"
    tt.render.sprites[1].anchor.y = 0.38095238095238093
    tt.render.sprites[1].z = Z_DECALS
    tt.render.sprites[1].loop = false
    tt.render.sprites[2] = CC("sprite")
    tt.render.sprites[2].name = "babyAshbite_specialFire_decal"
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].z = Z_DECALS
    tt.tween.remove = false
    tt.tween.props[1].sprite_id = 2
    tt.tween.props[1].keys = {{0, 255}, {fts(20), 0}}

    tt = RT("fierymist_baby_ashbite", "breath_baby_ashbite")
    tt.bullet.emit_decal = "decal_emit_fiery_mist_baby_ashbite"
    tt.bullet.hit_decal = "aura_fiery_mist_baby_ashbite"
    tt.bullet.hit_fx = nil

    tt = RT("decal_emit_fiery_mist_baby_ashbite", "decal_emit_breath_baby_ashbite")
    tt.duration = fts(18)
    tt.render.sprites[1].hidden = true
    tt.emit_ps = "ps_emit_fiery_mist_baby_ashbite"

    tt = RT("aura_fiery_mist_baby_ashbite", "aura")
    tt.main_script.update = scripts.aura_fiery_mist_baby_ashbite.update
    tt.fx = "decal_fiery_mist_baby_ashbite"
    tt.aura.duration = 2.5
    tt.aura.mod = "mod_slow_baby_ashbite"
    tt.aura.cycle_time = 0.25
    tt.aura.damage_inc = 25 * tt.aura.cycle_time / tt.aura.duration
    tt.aura.damage_min = 75 * tt.aura.cycle_time / tt.aura.duration
    tt.aura.damage_max = 75 * tt.aura.cycle_time / tt.aura.duration
    tt.aura.damage_type = DAMAGE_TRUE
    tt.aura.radius = 50
    tt.aura.vis_bans = bor(F_FRIEND)

    tt = RT("mod_slow_baby_ashbite", "mod_slow")
    tt.slow.factor = 0.3
    tt.slow.factor_inc = 0.1

    tt = RT("decal_fiery_mist_baby_ashbite", "decal_tween")
    tt.render.sprites[1].name = "baby_ashbite_fierymist_decal"
    tt.render.sprites[1].loop = true
    tt.render.sprites[1].anchor.y = 0.25
    tt.tween.props[1].keys = {{0, 0}, {fts(6), 255}, {"this.duration-0.2", 255}, {"this.duration", 0}}

    --[[
        五代
    --]]
    local balance = require("kr1.data.balance")
    local b

    -- 熊猫_START

    b = balance.towers.pandas

    tt = RT("ps_bullet_tower_panda_air")
    AC(tt, "pos", "particle_system")
    tt.particle_system.name = "tower_pandas_projectile_air_flying"
    tt.particle_system.animated = true
    tt.particle_system.loop = true
    tt.particle_system.emission_rate = 24
    tt.particle_system.track_rotation = false
    tt.particle_system.particle_lifetime = {fts(8), fts(8)}
    tt.particle_system.z = Z_BULLET_PARTICLES
    tt.particle_system.alphas = {255, 0}

    tt = RT("ps_bullet_tower_panda_fire")
    AC(tt, "pos", "particle_system")
    tt.particle_system.name = "tower_pandas_trail_fire_trail"
    tt.particle_system.animated = true
    tt.particle_system.loop = false
    tt.particle_system.emission_rate = 24
    tt.particle_system.track_rotation = true
    tt.particle_system.particle_lifetime = {fts(15), fts(15)}
    tt.particle_system.z = Z_BULLET_PARTICLES

    tt = RT("fx_tower_pandas_bullet_air_hit", "fx")
    tt.render.sprites[1].name = "tower_pandas_projectile_air_hit_run"
    tt.render.sprites[1].scale = vv(1.2)
    tt.render.sprites[1].fps = 15

    tt = RT("fx_tower_pandas_bullet_fire_hit", "fx")
    tt.render.sprites[1].name = "tower_pandas_projectile_fire_hit_run"
    tt.render.sprites[1].scale = vv(1.2)
    tt.render.sprites[1].fps = 15

    tt = RT("fx_tower_pandas_bullet_fire_ray", "fx")
    tt.render.sprites[1].name = "tower_pandas_projectile_ray_hit_run"
    tt.render.sprites[1].scale = vv(1.2)
    tt.render.sprites[1].fps = 15

    tt = RT("fx_tower_pandas_melee_air_hit", "fx")
    tt.render.sprites[1].name = "tower_pandas_projectile_air_hit_run"
    tt.render.sprites[1].scale = vv(1)
    tt.render.sprites[1].fps = 15
    tt.render.sprites[1].z = Z_OBJECTS
    tt.render.sprites[1].sort_y_offset = -16

    tt = RT("fx_tower_pandas_melee_fire_hit", "fx")
    tt.render.sprites[1].name = "tower_pandas_projectile_fire_hit_run"
    tt.render.sprites[1].scale = vv(1)
    tt.render.sprites[1].fps = 15
    tt.render.sprites[1].z = Z_OBJECTS
    tt.render.sprites[1].sort_y_offset = -16

    tt = RT("fx_tower_pandas_melee_fire_ray", "fx")
    tt.render.sprites[1].name = "tower_pandas_projectile_ray_hit_run"
    tt.render.sprites[1].scale = vv(1)
    tt.render.sprites[1].fps = 15
    tt.render.sprites[1].z = Z_OBJECTS
    tt.render.sprites[1].sort_y_offset = -16

    tt = RT("fx_panda_smoke_level_up", "fx")
    tt.render.sprites[1].name = "tower_pandas_level_up_fx_run"
    tt.render.sprites[1].z = Z_OBJECTS
    tt.render.sprites[1].sort_y_offset = -5

    tt = RT("fx_tower_panda_skill_red_tp_enemy_fire", "fx")
    tt.render.sprites[1].name = "la_red_lvl4_tp_fire_enemy_run"
    tt.render.sprites[1].anchor = v(0.52, 0.5)
    tt.render.sprites[1].scale = vv(2)
    tt.render.sprites[1].size_scales = {vv(2), vv(2), vv(4)}
    tt.render.sprites[1].z = Z_OBJECTS
    tt.render.sprites[1].sort_y_offset = -10

    tt = RT("fx_tower_panda_disappear_wood", "fx_fade")
    tt.render.sprites[1].name = "tower_pandas_disappear_wood"
    tt.render.sprites[1].z = Z_OBJECTS
    tt.tween.props[1].keys = {{1.2, 255}, {1.5, 0}}

    tt = RT("decal_tower_panda_skill_red_tp_enemy_fire", "fx")
    tt.render.sprites[1].name = "tower_pandas_red_lvl4_tp_decal_enemy_run"
    tt.render.sprites[1].scale = vv(2)
    tt.render.sprites[1].size_scales = {vv(2), vv(2), vv(2.5)}
    tt.render.sprites[1].z = Z_DECALS

    tt = RT("decal_tower_panda_skill_red_tp_soldier_fire", "fx")
    tt.render.sprites[1].name = "tower_pandas_red_lvl4_tp_decal_run"
    tt.render.sprites[1].scale = vv(2)
    tt.render.sprites[1].z = Z_DECALS

    tt = RT("tower_pandas_lvl4", "tower")
    AC(tt, "attacks", "barrack", "user_selection", "powers")
    tt.tower.type = "pandas"
    tt.tower.level = 1
    tt.tower.price = b.price[4]
    tt.tower.menu_offset = v(0, 35)
    tt.powers.thunder = CC("power")
    tt.powers.thunder.price_base = 150
    tt.powers.thunder.price_inc = 150
    tt.powers.thunder.enc_icon = 40
    tt.powers.thunder.name = "thunder"
    tt.powers.thunder.key = "THUNDER"
    tt.powers.thunder.max_level = 2
    tt.powers.hat = CC("power")
    tt.powers.hat.price_base = 140
    tt.powers.hat.price_inc = 140
    tt.powers.hat.enc_icon = 39
    tt.powers.hat.name = "hat"
    tt.powers.hat.max_level = 2
    tt.powers.hat.key = "HAT"
    tt.powers.teleport = CC("power")
    tt.powers.teleport.price_base = 160
    tt.powers.teleport.price_inc = 160
    tt.powers.teleport.enc_icon = 41
    tt.powers.teleport.name = "fiery"
    tt.powers.teleport.key = "FIERY"
    tt.powers.teleport.max_level = 2
    tt.info.i18n_key = "TOWER_PANDAS_4"
    tt.info.portrait = "kr5_portraits_towers_0031"
    tt.info.enc_icon = 84
    tt.info.tower_portrait = "towerselect_portraits_big_0001"
    tt.info.room_portrait = "quickmenu_main_icons_main_icons_0025_0001"
    tt.info.fn = scripts.tower_pandas.get_info
    tt.barrack.soldier_type = "soldier_tower_pandas_blue_lvl4"
    tt.barrack.soldier_types = {"soldier_tower_pandas_blue_lvl4", "soldier_tower_pandas_green_lvl4",
                                "soldier_tower_pandas_red_lvl4"}
    tt.barrack.solder_upgrade_map = {
        soldier_tower_pandas_green_lvl3 = "soldier_tower_pandas_green_lvl4",
        soldier_tower_pandas_red_lvl3 = "soldier_tower_pandas_red_lvl4",
        soldier_tower_pandas_blue_lvl3 = "soldier_tower_pandas_blue_lvl4"
    }
    tt.barrack.rally_range = b.rally_range
    tt.barrack.rally_radius = 30
    tt.main_script.insert = scripts.tower_barrack.insert
    tt.main_script.update = scripts.tower_pandas.update
    tt.main_script.remove = scripts.tower_pandas.remove
    tt.set_panda_bullet_arrived = scripts.tower_pandas.set_panda_bullet_arrived
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].name = "terrain_barrack_%04i"
    tt.render.sprites[1].offset = v(0, 15)
    tt.render.sprites[2] = CC("sprite")
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].name = "tower_pandas_tower_lvl_04"
    tt.render.sprites[2].offset = v(0, 15)
    tt.render.sprites[2].sort_y_offset = 5
    tt.render.sprites[3] = CC("sprite")
    tt.render.sprites[3].prefix = "tower_pandas_panda_blue_lvl4"
    tt.render.sprites[3].name = "idle_torre"
    tt.render.sprites[3].angles = {}
    tt.render.sprites[3].angles.idle = {"idle_torre"}
    tt.render.sprites[3].angles.shoot = {"spell"}
    tt.render.sprites[3].offset = v(0, 35 + tt.render.sprites[2].offset.y)
    tt.render.sprites[4] = CC("sprite")
    tt.render.sprites[4].prefix = "tower_pandas_panda_red_lvl4"
    tt.render.sprites[4].name = "idle_torre"
    tt.render.sprites[4].angles = {}
    tt.render.sprites[4].angles.idle = {"idle_torre"}
    tt.render.sprites[4].angles.shoot = {"spell"}
    tt.render.sprites[4].offset = v(26, 24 + tt.render.sprites[2].offset.y)
    tt.render.sprites[5] = CC("sprite")
    tt.render.sprites[5].prefix = "tower_pandas_panda_green_lvl4"
    tt.render.sprites[5].name = "idle_torre"
    tt.render.sprites[5].angles = {}
    tt.render.sprites[5].angles.idle = {"idle_torre"}
    tt.render.sprites[5].angles.shoot = {"spell"}
    tt.render.sprites[5].offset = v(-24, 24 + tt.render.sprites[2].offset.y)
    tt.attacks.range = b.ranged_attack.range[4]
    tt.attacks.attack_delay_on_spawn = fts(5)
    tt.attacks.list[1] = CC("bullet_attack")
    tt.attacks.list[1].cooldown = b.ranged_attack.cooldown
    tt.attacks.list[1].bullet = "bullet_tower_pandas_air_lvl4"
    tt.attacks.list[1].bullet_list = {{
        b = "bullet_tower_pandas_ray_lvl4",
        offset = v(0, 50),
        shoot_time = fts(8)
    }, {
        b = "bullet_tower_pandas_fire_lvl4",
        offset = v(0, 15),
        shoot_time = fts(10)
    }, {
        b = "bullet_tower_pandas_air_lvl4",
        offset = v(0, 5),
        shoot_time = fts(15)
    }}
    tt.attacks.list[1].bullet_start_offset = {v(-2, 6 + tt.render.sprites[3].offset.y),
                                              v(27, 6 + tt.render.sprites[4].offset.y),
                                              v(-27, 3 + tt.render.sprites[5].offset.y)}
    tt.attacks.list[1].vis_flags = bor(F_RANGED)
    tt.attacks.list[1].vis_bans = bor(F_NIGHTMARE)
    tt.attacks.list[2] = CC("custom_attack")
    tt.attacks.list[2].soldiers = {"soldier_tower_pandas_blue_lvl4", "soldier_tower_pandas_red_lvl4",
                                   "soldier_tower_pandas_green_lvl4"}
    tt.attacks.list[2].soldiers_spawn_bullets = {"bullet_tower_pandas_spawn_soldier_blue_lvl4",
                                                 "bullet_tower_pandas_spawn_soldier_red_lvl4",
                                                 "bullet_tower_pandas_spawn_soldier_green_lvl4"}
    tt.attacks.list[2].cooldown = b.soldier.cooldown
    tt.attacks.list[2].retreat_duration = b.soldier.retreat_duration
    tt.sound_events.insert = i18n:cjk("TowerPandasTaunt", "TowerPandasTauntZH", nil, nil)
    tt.sound_events.change_rally_point = i18n:cjk("TowerPandasTaunt", "TowerPandasTauntZH", nil, nil)
    tt.sound_events.tower_room_select = i18n:cjk("TowerPandasTauntSelect", "TowerPandasTauntZHSelect", nil, nil)
    tt.ui.click_rect = r(-42, 0, 84, 70)
    tt.ui.click_rect_heights_by_soldier = {
        70,
        65,
        [3] = 58,
        none = 53
    }
    tt.user_selection.allowed = true
    tt.user_selection.actions = {
        tw_free_action = {
            allowed = false
        }
    }

    tt = RT("soldier_tower_pandas_green_lvl4", "soldier_militia")
    AC(tt, "nav_grid", "powers", "ranged") 
    tt.powers.hat = CC("power")
    tt.powers.hat.cooldown = b.soldier.hat.cooldown
    tt.powers.hat.range = b.soldier.hat.range
    tt.melee.range = b.soldier.melee_attack.range
    tt.melee.attacks[1].cooldown = b.soldier.melee_attack.cooldown
    tt.melee.attacks[1].loops = 1
    tt.melee.attacks[1].hit_times = {fts(7), fts(13), fts(23)}
    tt.melee.attacks[1].hit_time = nil
    tt.melee.attacks[1].animations = {nil, "attack"}
    tt.melee.attacks[1].damage_min = b.soldier.melee_attack.damage_min[4] / #tt.melee.attacks[1].hit_times
    tt.melee.attacks[1].damage_max = b.soldier.melee_attack.damage_max[4] / #tt.melee.attacks[1].hit_times
    tt.melee.attacks[1].hit_fx = "fx_tower_pandas_melee_air_hit"
    tt.melee.attacks[1].hit_offset = v(30, 12)
    tt.melee.attacks[1].sound_hit = "TowerPandasMelee"
    tt.ranged.attacks[1].level = 1
    tt.ranged.attacks[1].bullet = "bullet_tower_pandas_air_soldier_special_lvl"
    tt.ranged.attacks[1].min_range = 0
    tt.ranged.attacks[1].shoot_time = fts(15)
    tt.ranged.attacks[1].vis_flags = bor(F_RANGED)
    tt.ranged.attacks[1].vis_bans = bor(F_NIGHTMARE)
    tt.ranged.attacks[1].animation = "skill"
    tt.ranged.attacks[1].disabled = true
    tt.ranged.attacks[1].bullet_start_offset = {v(40, 20)}
    tt.ranged.attacks[1].sound = "TowerPandasRangedHat"
    tt.ranged.attacks[1].sound_args = {
        delay = fts(12)
    }
    tt.sound_events.death = "TowerPandasDeath"
    tt.sound_events.death_args = {
        delay = fts(12)
    }
    tt.info.portrait = "kr5_info_portraits_soldiers_0031"
    tt.info.random_name_format = nil
    tt.info.i18n_key = "SOLDIER_TOWER_PANDAS_FEMALE"
    tt.nav_rally.delay_min = 0
    tt.nav_rally.delay_max = 0
    tt.death_go_back_delay = fts(25)
    tt.unit.fade_time_after_death = 1
    tt.main_script.insert = scripts.soldier_tower_pandas.insert
    tt.main_script.update = scripts.soldier_tower_pandas.update
    tt.render.sprites[1].prefix = "tower_pandas_panda_green_lvl4"
    tt.render.sprites[1].scale = vv(1.1)
    tt.render.sprites[1].angles.walk = {"walk"}
    tt.render.sprites[1].angles.attack = {"attack"}
    tt.render.sprites[1].anchor = v(0.5, 0.5)
    tt.render.sprites[1].name = "idle"
    tt.unit.head_offset = v(0, 12)
    tt.unit.hit_offset = v(0, 12)
    tt.unit.marker_offset = v(0, 0)
    tt.unit.mod_offset = v(0, 13)
    tt.unit.level = 4
    tt.unit.fade_time_after_death = nil
    tt.unit.hide_after_death = true
    tt.soldier.melee_slot_spread = v(-13, -13)
    tt.soldier.melee_slot_offset = v(10, 0)
    tt.vis.bans = bor(tt.vis.bans, F_SKELETON, F_EAT)
    tt.health.hp_max = b.soldier.hp[4]
    tt.health.armor = b.soldier.armor[4]
    tt.health_bar.offset = v(0, 44)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.health.dead_lifetime = 3
    -- tt.regen.health = b.soldier.regen_hp[4]
    tt.motion.max_speed = b.soldier.speed * 1.1
    tt.ui.click_rect = r(-13, 0, 25, 30)
    tt.ui.click_rect_offset_y = 0
    tt.max_dist_walk = 160
    tt.ignore_linirea_true_might_revive = true
    tt.death_go_back_delay = fts(15)

    tt = RT("soldier_tower_pandas_blue_lvl4", "soldier_tower_pandas_green_lvl4")
    AC(tt, "attacks")
    tt.info.portrait = "kr5_info_portraits_soldiers_0030"
    tt.info.i18n_key = "SOLDIER_TOWER_PANDAS_MALE"
    tt.unit.level = 4
    tt.render.sprites[1].prefix = "tower_pandas_panda_blue_lvl4"
    tt.motion.max_speed = b.soldier.speed * 0.9
    tt.unit.fade_time_after_death = nil
    tt.unit.hide_after_death = true
    tt.death_go_back_delay = fts(22)
    tt.health_bar.offset = v(0, 44)
    tt.melee.attacks[1].hit_fx = "fx_tower_pandas_melee_fire_ray"
    tt.attacks.list[1] = CC("custom_attack")
    tt.attacks.list[1].cooldown = nil
    tt.attacks.list[1].shoot_times = {fts(15), fts(19), fts(23)}
    tt.attacks.list[1].animation = "skill"
    tt.attacks.list[1].vis_flags = F_RANGED
    tt.attacks.list[1].vis_bans = bor(F_NIGHTMARE)
    tt.attacks.list[1].range = nil
    tt.attacks.list[1].damage_min = 0
    tt.attacks.list[1].damage_max = 0
    tt.attacks.list[1].damage_type = b.soldier.thunder.damage_type
    tt.attacks.list[1].damage_area = b.soldier.thunder.damage_area
    tt.attacks.list[1].min_targets = b.soldier.thunder.min_targets
    tt.attacks.list[1].mod = "mod_soldier_tower_pandas_blue_stun"
    tt.ranged = nil
    tt.powers = {}
    tt.powers.thunder = CC("power")
    tt.powers.thunder.cooldown = b.soldier.thunder.cooldown
    tt.powers.thunder.range = b.soldier.thunder.range
    tt.powers.thunder.damage_min = b.soldier.thunder.damage_min
    tt.powers.thunder.damage_max = b.soldier.thunder.damage_max
    tt.ui.click_rect = r(-17, 0, 34, 30)
    tt.sound_events.death = "TowerPandasDeath"
    tt.sound_events.death_args = {
        delay = fts(12)
    }
    tt.sound_events.thunder = "TowerPandasSkillBolt"
    tt.sound_events.thunder_args = {
        delay = fts(12)
    }
    tt.nav_rally.delay_min = 0.12
    tt.nav_rally.delay_max = 0.2

    tt = RT("soldier_tower_pandas_red_lvl4", "soldier_tower_pandas_green_lvl4")
    AC(tt, "attacks")
    tt.info.portrait = "kr5_info_portraits_soldiers_0029"
    tt.info.i18n_key = "SOLDIER_TOWER_PANDAS_MALE"
    tt.unit.level = 4
    tt.render.sprites[1].prefix = "tower_pandas_panda_red_lvl4"
    tt.unit.fade_time_after_death = nil
    tt.unit.hide_after_death = true
    tt.death_go_back_delay = fts(12)
    tt.health_bar.offset = v(0, 44)
    tt.melee.attacks[1].hit_fx = "fx_tower_pandas_melee_fire_hit"
    tt.powers = {}
    tt.powers.teleport = CC("power")
    tt.powers.teleport.cooldown = b.soldier.teleport.cooldown
    tt.powers.teleport.range = b.soldier.teleport.range
    tt.powers.teleport.nodes_offset_min = b.soldier.teleport.nodes_offset_min
    tt.powers.teleport.nodes_offset_max = b.soldier.teleport.nodes_offset_max
    tt.powers.teleport.damage_min = b.soldier.teleport.damage_min
    tt.powers.teleport.damage_max = b.soldier.teleport.damage_max
    tt.attacks.list[1] = CC("custom_attack")
    tt.attacks.list[1].cooldown = nil
    tt.attacks.list[1].shoot_time = fts(17)
    tt.attacks.list[1].animation = "skill"
    tt.attacks.list[1].vis_flags = bor(F_MOD, F_TELEPORT)
    tt.attacks.list[1].vis_bans = bor(F_BOSS)
    tt.attacks.list[1].range = nil
    tt.attacks.list[1].damage_min = 0
    tt.attacks.list[1].damage_max = 0
    tt.attacks.list[1].damage_type = b.soldier.teleport.damage_type
    tt.attacks.list[1].max_targets = b.soldier.teleport.max_targets
    tt.attacks.list[1].nodes_offset_min = 0
    tt.attacks.list[1].nodes_offset_max = 0
    tt.attacks.list[1].mod = "mod_soldier_tower_pandas_red_teleport"
    tt.attacks.list[1].decal = "decal_tower_panda_skill_red_tp_soldier_fire"
    tt.attacks.list[1].max_times_applied = b.soldier.teleport.max_times_applied
    tt.ranged = nil
    tt.ui.click_rect = r(-17, 0, 34, 30)
    tt.sound_events.death = "TowerPandasDeath"
    tt.sound_events.death_args = {
        delay = fts(6)
    }
    tt.sound_events.teleport = "TowerPandasSkillFire"
    tt.sound_events.teleport_args = {
        delay = fts(12)
    }
    tt.nav_rally.delay_min = 0.05
    tt.nav_rally.delay_max = 0.07

    tt = RT("mod_soldier_tower_pandas_blue_stun", "mod_stun")
    tt.modifier.duration = b.soldier.thunder.stun_duration
    tt.modifier.vis_flags = bor(F_MOD, F_STUN)
    tt.modifier.vis_bans = bor(F_BOSS)

    tt = RT("fx_lightining_soldier_tower_pandas_blue", "decal_scripted")
    tt.main_script.update = scripts.multi_sprite_fx.update
    tt.render.sprites[1].name = "tower_pandas_lighting_sky_run"
    tt.render.sprites[1].scale = vv(2)
    tt.render.sprites[1].z = Z_OBJECTS
    tt.render.sprites[2] = CC("sprite")
    tt.render.sprites[2].name = "tower_pandas_target_ray_run"
    tt.render.sprites[2].animated = true
    tt.render.sprites[2].hidden = true
    tt.render.sprites[2].z = Z_OBJECTS
    tt.render.sprites[2].delay_start = fts(6)

    tt = RT("mod_soldier_tower_pandas_red_teleport", "mod_teleport")
    tt.modifier.vis_flags = bor(F_MOD, F_TELEPORT)
    tt.modifier.vis_bans = bor(F_BOSS)
    tt.nodes_offset_min = 0
    tt.nodes_offset_max = 0
    tt.nodes_offset_inc = 0
    tt.dest_valid_node = true
    tt.delay_start = fts(2)
    tt.hold_time = 0.34
    tt.delay_end = fts(4)
    tt.modifier.use_mod_offset = false
    tt.fx_start = "fx_tower_panda_skill_red_tp_enemy_fire"
    tt.fx_end = "fx_tower_panda_skill_red_tp_enemy_fire"
    tt.max_times_applied = b.soldier.teleport.max_times_applied

    tt = E:register_t("bullet_tower_pandas_spawn_soldier_blue_lvl4", "bullet")
    tt.render.sprites[1].prefix = "tower_pandas_panda_blue_lvl4"
    tt.render.sprites[1].name = "scape_loop"
    tt.render.sprites[1].animated = true
    tt.render.sprites[1].loop = true
    tt.render.sprites[1].r = 0
    tt.main_script.insert = scripts.bullet_tower_pandas_spawn_soldier.insert
    tt.main_script.update = scripts.bullet_tower_pandas_spawn_soldier.update
    tt.bullet.flight_time = fts(26)
    tt.bullet.g = -1 / (fts(1) * fts(1)) * 1
    tt.bullet.rotation_speed = 0
    tt.bullet.hit_fx = nil
    tt.bullet.hit_decal = nil
    tt.bullet.hit_fx_water = nil
    tt.bullet.hide_radius = nil
    tt.sound_events.insert = nil
    tt.sound_events.hit = nil
    tt.sound_events.hit_water = nil

    tt = RT("bullet_tower_pandas_spawn_soldier_red_lvl4", "bullet_tower_pandas_spawn_soldier_blue_lvl4")
    tt.render.sprites[1].prefix = "tower_pandas_panda_red_lvl4"

    tt = RT("bullet_tower_pandas_spawn_soldier_green_lvl4", "bullet_tower_pandas_spawn_soldier_blue_lvl4")
    tt.render.sprites[1].prefix = "tower_pandas_panda_green_lvl4"

    tt = RT("bullet_tower_pandas_air_lvl4", "bolt")
    tt.render.sprites[1].prefix = "tower_pandas_projectile_air"
    tt.render.sprites[1].name = "Run"
    tt.render.sprites[1].animated = true
    tt.bullet.damage_min = b.ranged_attack.damage_min[4]
    tt.bullet.damage_max = b.ranged_attack.damage_max[4]
    tt.bullet.damage_type = b.ranged_attack.damage_type
    tt.bullet.hit_blood_fx = nil
    tt.bullet.acceleration_factor = 0.1
    tt.bullet.min_speed = 360
    tt.bullet.max_speed = 480
    tt.bullet.ignore_rotation = true
    tt.bullet.align_with_trajectory = false
    tt.bullet.hit_fx = "fx_tower_pandas_bullet_air_hit"
    tt.bullet.particles_name = "ps_bullet_tower_panda_air"
    tt.sound_events.insert = "TowerPandasRangedHat"

    tt = RT("bullet_tower_pandas_air_soldier_special_lvl1", "bullet_tower_pandas_air_lvl4")
    tt.main_script.update = scripts.bullet_tower_pandas_air.update
    tt.bullet.damage_min = b.soldier.hat.damage_levels[1].max
    tt.bullet.damage_max = b.soldier.hat.damage_levels[1].max
    tt.max_bounces = b.soldier.hat.max_bounces
    tt.bounce_range = b.soldier.hat.bounce_range
    tt.bounce_damage_mult = b.soldier.hat.bounce_damage_mult
    tt.bounce_speed_mult = b.soldier.hat.bounce_speed_mult

    tt = E:register_t("bullet_tower_pandas_air_soldier_special_lvl2", "bullet_tower_pandas_air_soldier_special_lvl1")
    tt.bullet.damage_min = b.soldier.hat.damage_levels[2].min
    tt.bullet.damage_max = b.soldier.hat.damage_levels[2].max

    tt = RT("bullet_tower_pandas_fire_lvl4", "bolt")
    tt.render.sprites[1].prefix = "tower_pandas_projectile_fire"
    tt.render.sprites[1].name = "run"
    tt.render.sprites[1].animated = true
    tt.bullet.damage_min = b.ranged_attack.damage_min[4]
    tt.bullet.damage_max = b.ranged_attack.damage_max[4]
    tt.bullet.damage_type = b.ranged_attack.damage_type
    tt.bullet.hit_blood_fx = nil
    tt.bullet.acceleration_factor = 0.1
    tt.bullet.min_speed = 90
    tt.bullet.max_speed = 600
    tt.bullet.hide_radius = 1
    tt.bullet.align_with_trajectory = true
    tt.bullet.hit_fx = "fx_tower_pandas_bullet_fire_hit"
    tt.bullet.particles_name = "ps_bullet_tower_panda_fire"
    tt.sound_events.insert = "TowerPandasRangedFire"

    tt = E:register_t("bullet_tower_pandas_ray_lvl4", "bullet")
    tt.bullet.level = 4
    tt.bullet.damage_min = b.ranged_attack.damage_min[4]
    tt.bullet.damage_max = b.ranged_attack.damage_max[4]
    tt.bullet.damage_type = b.ranged_attack.damage_type
    tt.bullet.hit_time = fts(3)
    tt.bullet.hit_fx = "fx_tower_pandas_bullet_fire_ray"
    tt.image_width = 104
    tt.main_script.update = scripts.tower_pandas_ray.update
    tt.render.sprites[1].anchor = v(0.5, 0.5)
    tt.render.sprites[1].name = "tower_pandas_projectile_ray_run"
    tt.render.sprites[1].loop = false
    tt.track_target = false
    tt.ray_duration = fts(11)
    tt.sound_events.insert = "TowerPandasRangedBolt"

    -- 熊猫_END

    -- 牢大 BEGIN
    tt = E:register_t("tower_rocket_gunners_lvl4", "tower")
    b = balance.towers.rocket_gunners
    E:add_comps(tt, "barrack", "powers")
    tt.tower.type = "rocket_gunners"
    tt.tower.kind = TOWER_KIND_ARCHER
    tt.tower.team = TEAM_DARK_ARMY
    tt.tower.level = 1
    tt.tower.price = b.price[4]
    tt.tower_upgrade_persistent_data.max_current_mode = 1
    tt.tower_upgrade_persistent_data.current_mode = 0
    tt.tower_upgrade_persistent_data.is_taking_off = {true, true}
    tt.info.i18n_key = "TOWER_ROCKET_GUNNERS_4"
    tt.info.portrait = "kr5_portraits_towers_0009"
    tt.info.room_portrait = "quickmenu_main_icons_main_icons_0009_0001"
    tt.info.enc_icon = 2
    tt.tower.menu_offset = vec_2(0, 15)
    tt.info.tower_portrait = "towerselect_portraits_big_0009"
    tt.barrack.soldier_type = "soldier_tower_rocket_gunners_lvl4"
    tt.barrack.rally_range = b.rally_range[4]
    tt.barrack.respawn_offset = vec_2(0, 34)
    tt.barrack.max_soldiers = b.max_soldiers
    tt.barrack.has_door = false
    tt.barrack.range_upgradable = true
    tt.barrack.rally_anywhere = true
    tt.sound_events.insert = "TowerPaladinCovenantTaunt"
    tt.sound_events.change_rally_point = "TowerPaladinCovenantTaunt"
    -- tt.info.fn = scripts.tower_rocket_gunners.get_info
    tt.info.fn = scripts.tower_barrack.get_info
    tt.main_script.insert = scripts.tower_barrack.insert
    tt.main_script.update = scripts.tower_rocket_gunners.update
    tt.main_script.remove = scripts.tower_barrack.remove
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].name = "terrain_barrack_%04i"
    tt.render.sprites[1].offset = vec_2(0, 15)
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].animated = true
    tt.render.sprites[2].prefix = "rocket_gunners_tower_lvl4_tower"
    tt.render.sprites[2].name = "idle"
    tt.render.sprites[2].offset = vec_2(0, 18)
    tt.render.sprites[2].sort_y_offset = 30
    tt.render.sprites[2].scale = vec_2(0.95, 0.95)
    tt.ui.click_rect = r(-35, -2, 70, 60)
    tt.spawn_time = 34
    tt.spawn_delay = 10
    tt.sound_events.insert = "TowerRocketGunnersTaunt"
    tt.sound_events.change_rally_point = "TowerRocketGunnersTaunt"
    tt.sound_events.tower_room_select = "TowerRocketGunnersTauntSelect"
    tt.spawn_sound = "TowerRocketGunnersSpawn"
    tt.powers.phosphoric = E:clone_c("power")
    tt.powers.phosphoric.price_base = b.soldier.phosphoric.price[1]
    tt.powers.phosphoric.price_inc = b.soldier.phosphoric.price[2]
    tt.powers.phosphoric.enc_icon = 16
    tt.powers.sting_missiles = E:clone_c("power")
    tt.powers.sting_missiles.price_base = b.soldier.sting_missiles.price[1]
    tt.powers.sting_missiles.price_inc = b.soldier.sting_missiles.price[2]
    tt.powers.sting_missiles.enc_icon = 15
    tt.powers.sting_missiles.cooldown = b.sting_missiles.cooldown

    tt = E:register_t("soldier_tower_rocket_gunners_lvl4", "soldier_militia")
    E:add_comps(tt, "nav_grid", "powers", "ranged", "tween")
    b = balance.towers.rocket_gunners
    tt.info.portrait = "kr5_info_portraits_soldiers_0007"
    tt.info.random_name_format = "SOLDIER_TOWER_ROCKET_GUNNERS_%i_NAME"
    tt.info.random_name_count = 10
    tt.main_script.update = scripts.soldier_tower_rocket_gunners.update
    tt.render.sprites[1].prefix = "rocket_gunners_tower_lvl4_gunner"
    tt.render.sprites[1].anchor = vec_2(0.5, 0.5)
    tt.render.sprites[1].name = "take_off"
    tt.render.sprites[1].angles.walk = {"idle_air"}
    tt.render.sprites[1].angles.attack_floor = {"attack_floor", "attack_floor_back", "attack_floor"}
    tt.render.sprites[1].angles.phosphoric_coating_air = {"phosphoric_coating_air", "phosphoric_coating_air_back",
                                                      "phosphoric_coating_air"}
    tt.render.sprites[1].angles.phosphoric_coating_floor = {"phosphoric_coating_floor", "phosphoric_coating_floor_back",
                                                            "phosphoric_coating_floor"}
    tt.render.sprites[1].angles.attack_air = {"attack_air", "attack_air_back", "attack_air"}
    tt.render.sprites[1].angles.idle_air = {"idle_air", "idle_air_back", "idle_air"}
    tt.render.sprites[1].angles.idle_floor = {"idle_floor", "idle_floor_back", "idle_floor"}
    tt.render.sprites[1].angles_flip_vertical = {
        idle_air = true,
        phosphoric_coating_air = true,
        attack_air = true,
        phosphoric_coating_floor = true,
        idle_floor = true,
        attack_floor = true
    }
    tt.render.sprites[1].scale = vec_2(1.1, 1.1)
    tt.flight_height = 65
    tt.unit.hit_offset = vec_2(0, tt.flight_height + 12)
    tt.unit.marker_offset = vec_2(0, 0)
    tt.unit.mod_offset = vec_2(0, tt.flight_height + 13)
    tt.unit.level = 1
    tt.unit.death_animation = "death_air"
    tt.unit.show_blood_pool = false
    tt.unit.hide_after_death = true
    tt.soldier.melee_slot_spread = vec_2(-10, -10)
    tt.soldier.melee_slot_offset = vec_2(10, 0)
    tt.vis.bans = 0
    tt.vis_bans_before_take_off = F_ALL
    tt.vis_bans_after_take_off = 0
    tt.health.hp_max = b.soldier.hp[4]
    tt.health.armor = b.soldier.armor[4]
    tt.health_bar.y_offset = 30
    tt.health.dead_lifetime = b.soldier.dead_lifetime
    tt.motion.max_speed = b.soldier.speed_flight
    tt.speed_flight = b.soldier.speed_flight
    tt.speed_ground = b.soldier.speed_ground
    tt.melee.range = b.soldier.melee_attack.range
    tt.melee.attacks[1].cooldown = b.soldier.melee_attack.cooldown
    tt.melee.attacks[1].damage_min = b.soldier.melee_attack.damage_min[4]
    tt.melee.attacks[1].damage_max = b.soldier.melee_attack.damage_max[4]
    tt.melee.attacks[1].hit_time = fts(10)
    tt.melee.attacks[1].animation = "attack_floor"
    tt.melee.attacks[1].hit_fx = "fx_bullet_soldier_tower_rocket_gunners_hit"
    tt.melee.attacks[1].hit_decal = "fx_bullet_soldier_tower_rocket_gunners_floor"
    tt.melee.attacks[1].hit_offset = vec_2(34, 10)
    tt.melee.attacks[2] = table.deepclone(tt.melee.attacks[1])
    tt.melee.attacks[2].animation = "phosphoric_coating_floor"
    tt.melee.attacks[2].disabled = true
    tt.melee.attacks[2].hit_fx = "fx_bullet_soldier_tower_rocket_gunners_phosphoric_hit"
    tt.melee.attacks[2].hit_decal = "fx_bullet_soldier_tower_rocket_gunners_phosphoric_floor"
    tt.melee.attacks[2].damage_radius = b.soldier.phosphoric.damage_radius
    tt.melee.attacks[2].damage_area_max = b.soldier.phosphoric.damage_area_max
    tt.melee.attacks[2].damage_area_min = b.soldier.phosphoric.damage_area_min
    tt.melee.attacks[2].damage_type = b.soldier.phosphoric.damage_type
    tt.melee.arrived_slot_animation = "idle_floor"
    tt.ranged.attacks[1].animation = "attack_air"
    tt.ranged.attacks[1].bullet = "bullet_soldier_tower_rocket_gunners"
    tt.ranged.attacks[1].cooldown = b.soldier.ranged_attack.cooldown
    tt.ranged.attacks[1].max_range = b.soldier.ranged_attack.max_range[4]
    tt.ranged.attacks[1].min_range = b.soldier.ranged_attack.min_range[4]
    tt.ranged.attacks[1].shoot_time = fts(6)
    tt.ranged.attacks[1].vis_bans = bor(F_NIGHTMARE)
    tt.ranged.attacks[2] = table.deepclone(tt.ranged.attacks[1])
    tt.ranged.attacks[2].animation = "phosphoric_coating_air"
    tt.ranged.attacks[2].bullet = "bullet_soldier_tower_rocket_gunners_phosphoric"
    tt.ranged.attacks[2].disabled = true
    tt.ranged.attacks[2].bullet_start_offset = {vec_2(0, 0), vec_2(0, 0), vec_2(0, 0)}
    tt.ranged.attacks[2].bullet_start_offset_relative = vec_2(15, 14)
    tt.ranged.attacks[2].shoot_time = fts(7)
    tt.ranged.attacks[3] = E:clone_c("bullet_attack")
    tt.ranged.attacks[3].animation = "sting_missiles_air"
    tt.ranged.attacks[3].bullet = "bullet_soldier_tower_rocket_gunners_sting_missiles"
    tt.ranged.attacks[3].disabled = true
    tt.ranged.attacks[3].bullet_start_offset = nil
    tt.ranged.attacks[3].bullet_start_offset_relative = vec_2(0, 45)
    tt.ranged.attacks[3].cooldown = 0
    tt.ranged.attacks[3].max_range = b.soldier.sting_missiles.max_range[1]
    tt.ranged.attacks[3].min_range = b.soldier.sting_missiles.min_range[1]
    tt.ranged.attacks[3].shoot_time = fts(12)
    tt.ranged.attacks[3].vis_flags = bor(F_INSTAKILL, F_RANGED)
    tt.ranged.attacks[3].vis_bans = bor(F_BOSS, F_MINIBOSS, F_NIGHTMARE)
    tt.ranged.attacks[3].mark_mod = "mod_soldier_tower_rocket_gunners_sting_missiles_mark"
    tt.powers.phosphoric = E:clone_c("power")
    tt.powers.phosphoric.damage_factor = b.soldier.phosphoric.damage_factor
    tt.powers.phosphoric.armor_reduction = b.soldier.phosphoric.armor_reduction
    tt.powers.sting_missiles = E:clone_c("power")
    tt.powers.sting_missiles.max_range = b.soldier.sting_missiles.max_range
    tt.powers.sting_missiles.min_range = b.soldier.sting_missiles.min_range
    tt.powers.sting_missiles.kill_hp_factor = b.soldier.sting_missiles.kill_hp_factor
    tt.ui.click_rect = r(-13, 7, 25, 27)
    tt.ui.click_rect_offset_y = 0
    tt.drag_line_origin_offset = vec_2(0, tt.flight_height)
    tt.nav_rally.delay_max = nil
    tt.spawn_fx = "fx_tower_rocket_gunners_take_off"
    tt.shadow_decal_t = "decal_soldier_tower_rocket_gunners_shadow"
    tt.land_fx = "fx_soldier_tower_rocket_gunners_land"
    tt.distance_to_land_fx = 10
    tt.current_mode = 0
    tt.arrive_epsilon = 0.5
    tt.fly_strenght = 5
    tt.fly_frequency = 13
    tt.spawn_sort_y_offset = -9
    tt.tween.disabled = true
    tt.tween.remove = false
    tt.tween.props[1].name = "offset"
    tt.tween.props[1].interp = "sine"
    tt.tween.props[1].keys = {{fts(0), vec_2(0, tt.flight_height)},
                              {fts(tt.fly_frequency), vec_2(0, tt.flight_height - tt.fly_strenght)},
                              {fts(tt.fly_frequency * 2), vec_2(0, tt.flight_height)}}
    tt.tween.props[1].loop = true
    tt.tween.props[1].disabled = true
    tt.tween.props[1].remove = false
    tt.sound_take_off = "TowerRocketGunnersTakeoff"

    tt = E:register_t("bullet_soldier_tower_rocket_gunners", "bullet")
    b = balance.towers.rocket_gunners.soldier.ranged_attack
    tt.bullet.hit_fx = "fx_bullet_soldier_tower_rocket_gunners_hit"
    tt.bullet.floor_fx = "fx_bullet_soldier_tower_rocket_gunners_floor"
    tt.bullet.flight_time = fts(2)
    tt.bullet.damage_type = DAMAGE_SHOT
    tt.bullet.damage_max = b.damage_max[4]
    tt.bullet.damage_min = b.damage_min[4]
    tt.bullet.level = 1
    tt.main_script.update = scripts.bullet_soldier_tower_rocket_gunners.update
    tt.render = nil
    tt.sound_events.insert = "TowerRocketGunnersBasicAttack"

    tt = E:register_t("bullet_soldier_tower_rocket_gunners_phosphoric", "bullet")
    b = balance.towers.rocket_gunners.soldier
    tt.bullet.hit_fx = "fx_bullet_soldier_tower_rocket_gunners_phosphoric_hit"
    tt.bullet.floor_fx = "fx_bullet_soldier_tower_rocket_gunners_phosphoric_floor"
    tt.bullet.flight_time = fts(2)
    tt.bullet.hit_time = fts(2)
    tt.bullet.damage_type = b.phosphoric.damage_type
    tt.bullet.level = 1
    tt.main_script.update = scripts.bullet_soldier_tower_rocket_gunners_phosphoric.update
    tt.bullet.damage_max = b.ranged_attack.damage_max[4]
    tt.bullet.damage_min = b.ranged_attack.damage_min[4]
    tt.render.sprites[1].anchor = vec_2(0.2, 0.5)
    tt.render.sprites[1].name = "rocket_gunners_tower_phosphoric_coating_trace_idle"
    tt.render.sprites[1].loop = false
    tt.image_width = 70
    tt.track_target = true
    tt.ray_duration = fts(2)
    tt.sound_events.insert = "TowerRocketGunnersPhosphoricCoating"

    tt = E:register_t("bullet_soldier_tower_rocket_gunners_sting_missiles", "bullet")
    b = balance.towers.rocket_gunners.soldier
    E:add_comps(tt, "force_motion")
    tt.bullet.flight_time = fts(31)
    tt.bullet.hit_fx = "fx_bullet_soldier_tower_rocket_gunners_sting_missiles_hit"
    tt.bullet.hit_fx_air = "fx_bullet_soldier_tower_rocket_gunners_sting_missiles_hit_air"
    tt.bullet.particles_name = "ps_tower_rocket_gunners_sting_missiles_trail"
    tt.bullet.hit_decal = "decal_bullet_soldier_tower_rocket_gunners_sting_missiles"
    tt.bullet.hit_decal_fx = "fx_bullet_soldier_tower_rocket_gunners_sting_missiles_smoke"
    tt.bullet.align_with_trajectory = true
    tt.bullet.ignore_hit_offset = true
    tt.render.sprites[1].animated = true
    tt.render.sprites[1].name = "rocket_gunners_tower_sting_missiles_projectile_idle"
    tt.main_script.update = scripts.bullet_soldier_tower_rocket_gunners_sting_missiles.update
    tt.initial_impulse = 3000
    tt.initial_impulse_duration = 0.3
    tt.initial_impulse_angle = 0
    tt.force_motion.a_step = 5
    tt.force_motion.max_a = 1800
    tt.force_motion.max_v = 450
    tt.mod = "mod_soldier_tower_rocket_gunners_sting_missiles_target"
    tt.sound_events.insert = "TowerRocketGunnersStingMissileCast"
    tt.sound_events.hit = "TowerRocketGunnersStingMissileExplosion"

    tt = E:register_t("mod_soldier_tower_rocket_gunners_sting_missiles_target", "modifier")
    E:add_comps(tt, "render")
    tt.main_script.update = scripts.mod_soldier_tower_rocket_gunners_sting_missiles_target.update
    tt.modifier.use_mod_offset = true
    tt.modifier.duration = 1e+99
    tt.render.sprites[1].prefix = "rocket_gunners_tower_reticle"
    tt.render.sprites[1].draw_order = DO_MOD_FX

    tt = E:register_t("mod_soldier_tower_rocket_gunners_sting_missiles_mark", "modifier")
    E:add_comps(tt, "mark_flags")
    tt.mark_flags.vis_bans = F_CUSTOM
    tt.main_script.queue = scripts.mod_mark_flags.queue
    tt.main_script.dequeue = scripts.mod_mark_flags.dequeue
    tt.main_script.update = scripts.mod_mark_flags.update

    -- 牢大 END
end

return barrack_towers
