local i18n = require("i18n")
require("constants")
local anchor_x = 0
local anchor_y = 0
local image_x = 0
local image_y = nil
local tt = nil
local scripts = require("game_scripts")
require("templates")
local function adx(v)
    return v - anchor_x * image_x
end
local function ady(v)
    return v - anchor_y * image_y
end
require("game_templates_utils")

local function mage_towers()
    tt = RT("tower_arcane_wizard", "tower_mage_1")
    AC(tt, "attacks", "powers")
    image_y = 90
    tt.tower.type = "arcane_wizard"
    tt.tower.level = 1
    tt.tower.price = 300
    tt.tower.size = TOWER_SIZE_LARGE
    tt.tower.menu_offset = vec_2(0, 14)
    tt.info.enc_icon = 15
    tt.info.i18n_key = "TOWER_ARCANE"
    tt.info.fn = scripts.tower_arcane_wizard.get_info
    tt.info.portrait = IS_PHONE_OR_TABLET and "portraits_towers_0005" or "info_portraits_towers_0008"
    tt.powers.disintegrate = CC("power")
    tt.powers.disintegrate.price_base = 350
    tt.powers.disintegrate.price_inc = 225
    tt.powers.disintegrate.cooldown_base = 22
    tt.powers.disintegrate.cooldown_inc = -2
    tt.powers.disintegrate.enc_icon = 15
    tt.powers.disintegrate.name = "DESINTEGRATE"
    tt.powers.disintegrate.upper_damage = {1000, 1100, 1200}
    tt.powers.disintegrate.attack_idx = 2
    tt.powers.teleport = CC("power")
    tt.powers.teleport.price_base = 250
    tt.powers.teleport.price_inc = 100
    tt.powers.teleport.max_count_base = 3
    tt.powers.teleport.max_count_inc = 1
    tt.powers.teleport.enc_icon = 16
    tt.powers.teleport.attack_idx = 3
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].name = "terrain_mage_%04i"
    tt.render.sprites[1].offset = vec_2(0, 15)
    tt.render.sprites[2] = CC("sprite")
    tt.render.sprites[2].prefix = "tower_arcane_wizard"
    tt.render.sprites[2].name = "idle"
    tt.render.sprites[2].offset = vec_2(0, 40)
    tt.render.sprites[3] = CC("sprite")
    tt.render.sprites[3].prefix = "tower_arcane_wizard_shooter"
    tt.render.sprites[3].name = "idleDown"
    tt.render.sprites[3].angles = {
        idle = {"idleUp", "idleDown"},
        shoot = {"shootingUp", "shootingDown"},
        teleport = {"teleportUp", "teleportDown"}
    }
    tt.render.sprites[3].offset = vec_2(0, 58)
    tt.render.sprites[4] = CC("sprite")
    tt.render.sprites[4].name = "fx_tower_arcane_wizard_teleport"
    tt.render.sprites[4].loop = false
    tt.render.sprites[4].ts = -10
    tt.render.sprites[4].offset = vec_2(-1, 90)
    tt.main_script.update = scripts.tower_arcane_wizard.update
    tt.sound_events.insert = "MageArcaneTaunt"
    tt.attacks.range = 200
    tt.attacks.min_cooldown = 1.5
    tt.attacks.list[1] = CC("bullet_attack")
    tt.attacks.list[1].animation = "shoot"
    tt.attacks.list[1].bullet = "ray_arcane"
    tt.attacks.list[1].cooldown = 2
    tt.attacks.list[1].node_prediction = fts(5)
    tt.attacks.list[1].shoot_time = fts(20)
    tt.attacks.list[1].bullet_start_offset = vec_2(0, 76)
    tt.attacks.list[2] = table.deepclone(tt.attacks.list[1])
    tt.attacks.list[2].bullet = "ray_arcane_disintegrate"
    tt.attacks.list[2].cooldown = 20
    tt.attacks.list[2].vis_flags = bor(F_DISINTEGRATED)
    tt.attacks.list[2].vis_bans = 0
    tt.attacks.list[3] = CC("aura_attack")
    tt.attacks.list[3].animation = "teleport"
    tt.attacks.list[3].shoot_time = fts(4)
    tt.attacks.list[3].cooldown = 10
    tt.attacks.list[3].aura = "aura_teleport_arcane"
    tt.attacks.list[3].min_nodes = 15
    tt.attacks.list[3].node_prediction = fts(4)
    tt.attacks.list[3].vis_flags = bor(F_RANGED, F_MOD, F_TELEPORT)
    tt.attacks.list[3].vis_bans = bor(F_BOSS, F_FREEZE)

    tt = RT("mod_ray_arcane", "modifier")
    AC(tt, "render", "dps")
    tt.dps.damage_min = 76
    tt.dps.damage_max = 140
    tt.dps.damage_type = bor(DAMAGE_MAGICAL, DAMAGE_ONE_SHIELD_HIT)
    tt.dps.damage_every = fts(2)
    tt.dps.pop = {"pop_zap_arcane"}
    tt.dps.pop_conds = DR_KILL
    tt.main_script.update = scripts.mod_ray_arcane.update
    tt.modifier.duration = fts(10)
    tt.modifier.allows_duplicates = true
    tt.render.sprites[1].name = "mod_ray_arcane"
    tt.render.sprites[1].loop = true
    tt.render.sprites[1].z = Z_BULLETS

    tt = RT("mod_ray_arcane_disintegrate", "modifier")
    AC(tt, "render")
    tt.main_script.update = scripts.mod_ray_arcane_disintegrate.update
    tt.modifier.pop = {"pop_zap_arcane"}
    tt.modifier.pop_conds = DR_KILL
    tt.modifier.damage_type = bor(DAMAGE_DISINTEGRATE, DAMAGE_INSTAKILL, DAMAGE_NO_SPAWNS)
    tt.modifier.damage = 1
    tt.modifier.duration = fts(10)
    tt.render.sprites[1].name = "mod_ray_arcane"
    tt.render.sprites[1].loop = false
    tt.render.sprites[1].z = Z_BULLETS

    tt = RT("mod_teleport_arcane", "mod_teleport")
    tt.delay_end = fts(6)
    tt.delay_start = fts(1)
    tt.fx_end = "fx_teleport_arcane"
    tt.fx_start = "fx_teleport_arcane"
    tt.max_times_applied = 3
    tt.modifier.use_mod_offset = true
    tt.modifier.vis_bans = bor(F_BOSS, F_FREEZE)
    tt.modifier.vis_flags = bor(F_MOD, F_TELEPORT)
    tt.nodes_offset_min = -26
    tt.nodes_offset_max = -17
    tt.nodes_offset_inc = -5

    tt = RT("tower_sorcerer", "tower_mage_1")
    AC(tt, "attacks", "powers", "barrack")
    image_y = 74
    tt.tower.type = "sorcerer"
    tt.tower.level = 1
    tt.tower.price = 275
    tt.tower.size = TOWER_SIZE_LARGE
    tt.tower.menu_offset = vec_2(0, 14)
    tt.info.enc_icon = 19
    tt.info.i18n_key = "TOWER_SORCERER"
    tt.info.portrait = IS_PHONE_OR_TABLET and "portraits_towers_0006" or "info_portraits_towers_0011"
    tt.barrack.soldier_type = "soldier_elemental"
    tt.barrack.rally_range = 200
    tt.powers.polymorph = CC("power")
    tt.powers.polymorph.price_base = 300
    tt.powers.polymorph.price_inc = 100
    tt.powers.polymorph.cooldown_base = 22
    tt.powers.polymorph.cooldown_inc = -2
    tt.powers.polymorph.enc_icon = 1
    tt.powers.polymorph.name = "POLIMORPH"
    tt.powers.polymorph.attack_idx = 2
    tt.powers.elemental = CC("power")
    tt.powers.elemental.price_base = 350
    tt.powers.elemental.price_inc = 150
    tt.powers.elemental.enc_icon = 2
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].name = "terrain_mage_%04i"
    tt.render.sprites[1].offset = vec_2(0, 15)
    tt.render.sprites[2] = CC("sprite")
    tt.render.sprites[2].prefix = "tower_sorcerer"
    tt.render.sprites[2].name = "idle"
    tt.render.sprites[2].offset = vec_2(0, 34)
    tt.render.sprites[3] = CC("sprite")
    tt.render.sprites[3].prefix = "tower_sorcerer_shooter"
    tt.render.sprites[3].name = "idleDown"
    tt.render.sprites[3].angles = {
        idle = {"idleUp", "idleDown"},
        shoot = {"shootingUp", "shootingDown"},
        polymorph = {"polymorphUp", "polymorphDown"}
    }
    tt.render.sprites[3].offset = vec_2(1, 64)
    tt.render.sprites[4] = CC("sprite")
    tt.render.sprites[4].name = "fx_tower_sorcerer_polymorph"
    tt.render.sprites[4].loop = false
    tt.render.sprites[4].ts = -10
    tt.render.sprites[4].offset = vec_2(0, 80)
    tt.render.sprites[4].hidden = true
    tt.render.sprites[4].hide_after_runs = 1
    tt.main_script.insert = scripts.tower_barrack.insert
    tt.main_script.update = scripts.tower_sorcerer.update
    tt.main_script.remove = scripts.tower_barrack.remove
    tt.sound_events.insert = "MageSorcererTaunt"
    tt.sound_events.change_rally_point = "RockElementalRally"
    tt.attacks.range = 210
    tt.attacks.min_cooldown = 1.2
    tt.attacks.list[1] = CC("bullet_attack")
    tt.attacks.list[1].animation = "shoot"
    tt.attacks.list[1].bullet = "bolt_sorcerer"
    tt.attacks.list[1].bullet_start_offset = {vec_2(8, 68), vec_2(-6, 68)}
    tt.attacks.list[1].cooldown = 1.2
    tt.attacks.list[1].shoot_time = fts(11)
    tt.attacks.list[2] = CC("bullet_attack")
    tt.attacks.list[2].bullet_start_offset = {vec_2(0, 78), vec_2(0, 78)}
    tt.attacks.list[2].animation = "polymorph"
    tt.attacks.list[2].bullet = "ray_sorcerer_polymorph"
    tt.attacks.list[2].cooldown = 20
    tt.attacks.list[2].shoot_time = fts(9)
    tt.attacks.list[2].vis_bans = bor(F_BOSS)
    tt.attacks.list[2].vis_flags = bor(F_MOD, F_RANGED, F_POLYMORPH)

    tt = RT("bolt_sorcerer", "bolt")
    tt.bullet.damage_max = 60
    tt.bullet.damage_min = 25
    tt.bullet.hit_fx = "fx_bolt_sorcerer_hit"
    tt.bullet.max_speed = 600
    tt.bullet.mods = {"mod_sorcerer_curse_dps", "mod_sorcerer_curse_armor"}
    tt.bullet.particles_name = "ps_bolt_sorcerer"
    tt.bullet.pop = {"pop_zap_sorcerer"}
    tt.render.sprites[1].anchor = vec_2(0.5, 0.5)
    tt.render.sprites[1].prefix = "bolt_sorcerer"
    tt.sound_events.insert = "BoltSorcererSound"

    tt = RT("mod_sorcerer_curse_armor", "modifier")
    AC(tt, "armor_buff")
    tt.modifier.duration = 9
    tt.modifier.vis_flags = F_MOD
    tt.armor_buff.magic = false
    tt.armor_buff.factor = -0.4
    tt.armor_buff.cycle_time = 1e+99
    tt.main_script.insert = scripts.mod_armor_buff.insert
    tt.main_script.remove = scripts.mod_armor_buff.remove
    tt.main_script.update = scripts.mod_armor_buff.update

    tt = RT("mod_sorcerer_curse_dps", "modifier")
    AC(tt, "render", "dps")
    tt.modifier.duration = 9
    tt.modifier.vis_flags = F_MOD
    tt.dps.damage_min = 12
    tt.dps.damage_max = 12
    tt.dps.damage_every = 1.25
    tt.dps.damage_type = DAMAGE_TRUE
    tt.main_script.insert = scripts.mod_dps.insert
    tt.main_script.update = scripts.mod_dps.update
    tt.render.sprites[1].name = "small"
    tt.render.sprites[1].prefix = "mod_sorcerer_curse"
    tt.render.sprites[1].size_names = {"small", "medium", "large"}
    tt.render.sprites[1].size_scales = {vec_1(1), vec_1(1), vec_1(1.5)}
    tt.render.sprites[1].sort_y_offset = -3

    tt = RT("mod_polymorph_sorcerer", "mod_polymorph")
    tt.modifier.use_mod_offset = true
    tt.modifier.remove_banned = true
    tt.modifier.ban_types = {MOD_TYPE_FAST}
    tt.polymorph.custom_entity_names.default = "enemy_sheep_ground"
    tt.polymorph.custom_entity_names.enemy_demon_imp = "enemy_sheep_fly"
    tt.polymorph.custom_entity_names.enemy_gargoyle = "enemy_sheep_fly"
    tt.polymorph.custom_entity_names.enemy_rocketeer = "enemy_sheep_fly"
    tt.polymorph.custom_entity_names.enemy_witch = "enemy_sheep_fly"
    tt.polymorph.hit_fx_sizes = {"fx_mod_polymorph_sorcerer_small", "fx_mod_polymorph_sorcerer_big",
                                 "fx_mod_polymorph_sorcerer_big"}
    tt.polymorph.pop = {"pop_puff"}
    tt.polymorph.transfer_gold_factor = 1
    tt.polymorph.transfer_health_factor = 0.5
    tt.polymorph.transfer_lives_cost_factor = 1
    tt.polymorph.transfer_speed_factor = 1.5

    local tower_archmage = E:register_t("tower_archmage", "tower")
    E:add_comps(tower_archmage, "attacks", "powers")
    tower_archmage.tower.type = "archmage"
    tower_archmage.tower.level = 1
    tower_archmage.tower.price = 300
    tower_archmage.info.fn = scripts.tower_mage.get_info
    tower_archmage.info.portrait = (IS_PHONE and "portraits_towers_" or "kr2_info_portraits_towers_") .. "0006"
    tower_archmage.info.enc_icon = 16
    tower_archmage.powers.twister = E:clone_c("power")
    tower_archmage.powers.twister.price_base = 300
    tower_archmage.powers.twister.price_inc = 225
    tower_archmage.powers.twister.enc_icon = 32
    tower_archmage.powers.twister.attack_idx = 2
    tower_archmage.powers.blast = E:clone_c("power")
    tower_archmage.powers.blast.price_base = 200
    tower_archmage.powers.blast.price_inc = 200
    tower_archmage.powers.blast.name = "CRITICAL"
    tower_archmage.powers.blast.enc_icon = 33
    tower_archmage.main_script.insert = scripts.tower_archmage.insert
    tower_archmage.main_script.remove = scripts.tower_archmage.remove
    tower_archmage.main_script.update = scripts.tower_archmage.update
    tower_archmage.render.sprites[1].animated = false
    tower_archmage.render.sprites[1].name = "terrain_specials_%04i"
    tower_archmage.render.sprites[1].offset = vec_2(0, 9)
    tower_archmage.render.sprites[2] = E:clone_c("sprite")
    tower_archmage.render.sprites[2].animated = false
    tower_archmage.render.sprites[2].name = "ArchMageTower"
    tower_archmage.render.sprites[2].offset = vec_2(0, 31)
    tower_archmage.render.sprites[3] = E:clone_c("sprite")
    tower_archmage.render.sprites[3].prefix = "shooterarchmage"
    tower_archmage.render.sprites[3].name = "idleDown"
    tower_archmage.render.sprites[3].angles = {}
    tower_archmage.render.sprites[3].angles.idle = {"idleUp", "idleDown"}
    tower_archmage.render.sprites[3].angles.shoot = {"shootingUp", "shootingDown"}
    tower_archmage.render.sprites[3].angles.twister = {"twisterUp", "twisterDown"}
    tower_archmage.render.sprites[3].angles.multiple = {"multipleUp", "multipleDown"}
    tower_archmage.render.sprites[3].offset = vec_2(2, 61)
    tower_archmage.attacks.range = 200
    tower_archmage.attacks.list[1] = E:clone_c("bullet_attack")
    tower_archmage.attacks.list[1].animation = "shoot"
    tower_archmage.attacks.list[1].bullet_start_offset = {vec_2(13, 72), vec_2(-9, 70)}
    tower_archmage.attacks.list[1].bullet = "bolt_archmage"
    tower_archmage.attacks.list[1].cooldown = 1.1
    tower_archmage.attacks.list[1].shoot_time = fts(19)
    tower_archmage.attacks.list[1].max_stored_bullets = 5
    tower_archmage.attacks.list[1].storage_offsets = {
    vec_2(3, 81), vec_2(-8.5, 58), vec_2(13.5, 56), vec_2(-20, 69.5), vec_2(24, 68.5)}
    tower_archmage.attacks.list[1].payload_chance = 0.4
    tower_archmage.attacks.list[1].payload_bullet = "bolt_blast"
    tower_archmage.attacks.list[1].repetition_rate = 0.27
    tower_archmage.attacks.list[2] = E:clone_c("bullet_attack")
    tower_archmage.attacks.list[2].vis_flags = bor(F_RANGED, F_TWISTER)
    tower_archmage.attacks.list[2].vis_bans = bor(F_FLYING, F_CLIFF, F_BOSS)
    tower_archmage.attacks.list[2].animation = "twister"
    tower_archmage.attacks.list[2].bullet = "twister"
    tower_archmage.attacks.list[2].cooldown = 20
    tower_archmage.attacks.list[2].shoot_time = fts(17)
    tower_archmage.attacks.list[2].nodes_limit = 30
    tower_archmage.sound_events.insert = "ArchmageTauntReady"

    local fx_bolt_archmage_hit = E:register_t("fx_bolt_archmage_hit", "fx")
    fx_bolt_archmage_hit.render.sprites[1].name = "bolt_archmage_hit"
    tt = E:register_t("bolt_archmage", "bolt")
    tt.render.sprites[1].prefix = "bolt_archmage"
    tt.bullet.mod = "mod_archmage_shatter"
    tt.bullet.damage_min = 40
    tt.bullet.damage_max = 80
    tt.bullet.hit_fx = "fx_bolt_archmage_hit"
    tt.bullet.pop = {"pop_zapow"}
    tt.bullet.store = nil
    tt.bullet.store_sort_y_offset = -65
    tt.bullet.acceleration_factor = 0.3
    tt.bullet.particles_name = "ps_bolt_archmage_trail"
    tt.sound_events.travel = "ArchmageBoltTravel"
    tt.sound_events.summon = "ArchmageBoltSummon"

    tt = E:register_t("bolt_blast", "bullet")
    tt.main_script.insert = scripts.bolt_blast.insert
    tt.main_script.update = scripts.bolt_blast.update
    tt.render.sprites[1].prefix = "bolt_blast"
    tt.render.sprites[1].name = "hit"
    tt.bullet.damage_type = DAMAGE_MAGICAL_EXPLOSION
    tt.bullet.damage_min = 0
    tt.bullet.damage_max = 0
    tt.bullet.damage_inc = 26
    tt.bullet.damage_radius = 40
    tt.bullet.damage_radius_inc = 4
    tt.bullet.damage_flags = F_AREA
    tt.sound_events.insert = "ArchmageCriticalExplosion"

    local twister = E:register_t("twister", "aura")
    E:add_comps(twister, "nav_path", "motion", "render")
    twister.main_script.insert = scripts.twister.insert
    twister.main_script.update = scripts.twister.update
    twister.after_mod = "mod_twister"
    twister.damage_type = DAMAGE_TRUE
    twister.pickup_range = 25.6
    twister.max_times_applied = 3
    twister.motion.max_speed = 46.08
    twister.damage_min = 20
    twister.damage_max = 20
    twister.damage_inc = 20
    twister.damage_type = DAMAGE_TRUE
    twister.enemies_max = 4
    twister.enemies_inc = 1
    twister.nodes = 15
    twister.nodes_inc = 5
    twister.nodes_limit = 15
    twister.picked_enemies = {}
    twister.render.sprites[1].prefix = "twister"
    twister.render.sprites[1].anchor.y = 0.14
    twister.aura.vis_flags = bor(F_RANGED, F_TWISTER)
    twister.aura.vis_bans = bor(F_CLIFF, F_BOSS, F_WATER)

    local mod_twister = E:register_t("mod_twister", "mod_slow")
    mod_twister.modifier.duration = 1

    local ps_bolt_archmage_trail = E:register_t("ps_bolt_archmage_trail")
    E:add_comps(ps_bolt_archmage_trail, "pos", "particle_system")
    ps_bolt_archmage_trail.particle_system.name = "proy_archbolt_particle"
    ps_bolt_archmage_trail.particle_system.animated = false
    ps_bolt_archmage_trail.particle_system.particle_lifetime = {0.2, 0.2}
    ps_bolt_archmage_trail.particle_system.alphas = {255, 12}
    ps_bolt_archmage_trail.particle_system.scales_y = {0.8, 0.05}
    ps_bolt_archmage_trail.particle_system.emission_rate = 30

    local archmage_shatter = RT("mod_archmage_shatter", "mod_damage")
    archmage_shatter.damage_min = 0.035
    archmage_shatter.damage_max = 0.035
    archmage_shatter.damage_type = bor(DAMAGE_MAGICAL_ARMOR, DAMAGE_NO_SHIELD_HIT)

    local tower_necromancer = E:register_t("tower_necromancer", "tower")
    E:add_comps(tower_necromancer, "barrack", "attacks", "powers", "auras", "tween")
    tower_necromancer.tower.type = "necromancer"
    tower_necromancer.tower.level = 1
    tower_necromancer.tower.price = 275
    tower_necromancer.info.fn = scripts.tower_mage.get_info
    tower_necromancer.info.portrait = (IS_PHONE and "portraits_towers_" or "kr2_info_portraits_towers_") .. "0005"
    tower_necromancer.info.enc_icon = 15
    tower_necromancer.powers.pestilence = E:clone_c("power")
    tower_necromancer.powers.pestilence.price_base = 200
    tower_necromancer.powers.pestilence.price_inc = 200
    tower_necromancer.powers.pestilence.enc_icon = 35
    tower_necromancer.powers.pestilence.attack_idx = 2
    tower_necromancer.powers.rider = E:clone_c("power")
    tower_necromancer.powers.rider.price_base = 275
    tower_necromancer.powers.rider.price_inc = 150
    tower_necromancer.powers.rider.enc_icon = 34
    tower_necromancer.main_script.insert = scripts.tower_necromancer.insert
    tower_necromancer.main_script.update = scripts.tower_necromancer.update
    tower_necromancer.main_script.remove = scripts.tower_barrack.remove
    tower_necromancer.barrack.soldier_type = "soldier_death_rider"
    tower_necromancer.barrack.rally_range = 180
    tower_necromancer.attacks.range = 200
    tower_necromancer.attacks.list[1] = E:clone_c("bullet_attack")
    tower_necromancer.attacks.list[1].bullet = "bolt_necromancer_tower"
    tower_necromancer.attacks.list[1].cooldown = 1
    tower_necromancer.attacks.list[1].shoot_time = fts(3)
    tower_necromancer.attacks.list[1].bullet_start_offset = {vec_2(9, 71), vec_2(-9, 71)}
    tower_necromancer.attacks.list[2] = E:clone_c("bullet_attack")
    tower_necromancer.attacks.list[2].bullet = "pestilence"
    tower_necromancer.attacks.list[2].cooldown = 12
    tower_necromancer.attacks.list[2].shoot_time = fts(6)
    tower_necromancer.attacks.list[2].vis_bans = bor(F_FLYING, F_CLIFF, F_BOSS)
    tower_necromancer.attacks.list[2].vis_flags = bor(F_RANGED, F_POISON)
    tower_necromancer.auras.list[1] = E:clone_c("aura_attack")
    tower_necromancer.auras.list[1].name = "necromancer_aura"
    tower_necromancer.auras.list[1].cooldown = 0
    tower_necromancer.render.sprites[1].name = "terrain_specials_%04i"
    tower_necromancer.render.sprites[1].animated = false
    tower_necromancer.render.sprites[1].offset = vec_2(0, 7)
    tower_necromancer.render.sprites[2] = E:clone_c("sprite")
    tower_necromancer.render.sprites[2].name = "NecromancerTower"
    tower_necromancer.render.sprites[2].animated = false
    tower_necromancer.render.sprites[2].offset = vec_2(0, 30)
    tower_necromancer.render.sprites[3] = E:clone_c("sprite")
    tower_necromancer.render.sprites[3].prefix = "shooternecromancer"
    tower_necromancer.render.sprites[3].angles = {}
    tower_necromancer.render.sprites[3].angles.idle = {"idleUp", "idleDown"}
    tower_necromancer.render.sprites[3].angles.shoot_start = {"shootStartUp", "shootStartDown"}
    tower_necromancer.render.sprites[3].angles.shoot_loop = {"shootLoopUp", "shootLoopDown"}
    tower_necromancer.render.sprites[3].angles.shoot_end = {"shootEndUp", "shootEndDown"}
    tower_necromancer.render.sprites[3].angles.pestilence = {"pestilenceUp", "pestilenceDown"}
    tower_necromancer.render.sprites[3].offset = vec_2(0, 60)
    tower_necromancer.render.sprites[4] = E:clone_c("sprite")
    tower_necromancer.render.sprites[4].animated = false
    tower_necromancer.render.sprites[4].name = "NecromancerTowerGlow"
    tower_necromancer.render.sprites[4].offset = vec_2(0, 34)
    tower_necromancer.render.sprites[4].hidden = true
    tower_necromancer.render.sprites[5] = E:clone_c("sprite")
    tower_necromancer.render.sprites[5].name = "towernecromancer_fx"
    tower_necromancer.render.sprites[5].offset = vec_2(0, 52)
    tower_necromancer.render.sprites[5].hidden = true
    tower_necromancer.tween.remove = false
    tower_necromancer.tween.reverse = false
    tower_necromancer.tween.props[1].name = "alpha"
    tower_necromancer.tween.props[1].keys = {{0, 0}, {1, 255}}
    tower_necromancer.tween.props[1].sprite_id = 4
    tower_necromancer.skeletons_count = 0
    tower_necromancer.sound_events.insert = "NecromancerTauntReady"
    tower_necromancer.sound_events.change_rally_point = "DeathKnightTaunt"

    tt = E:register_t("bolt_necromancer_tower", "bolt")
    tt.render.sprites[1].prefix = "bolt_necromancer"
    tt.bullet.damage_min = 20
    tt.bullet.damage_max = 70
    tt.bullet.hit_fx = "fx_bolt_necromancer_hit"
    tt.bullet.particles_name = "ps_bolt_necromancer_trail"
    tt.bullet.pop = {"pop_sishh"}
    tt.sound_events.insert = "NecromancerBolt"

    local pestilence = E:register_t("pestilence", "aura")
    pestilence.aura.mod = "mod_pestilence"
    pestilence.aura.duration = 3
    pestilence.aura.duration_inc = 1
    pestilence.aura.cycle_time = fts(10)
    pestilence.aura.radius = 46.6
    pestilence.aura.vis_bans = bor(F_FRIEND, F_FLYING)
    pestilence.aura.vis_flags = bor(F_MOD, F_POISON)
    pestilence.main_script.insert = scripts.pestilence.insert
    pestilence.main_script.update = scripts.aura_apply_mod.update
    pestilence.sound_events.insert = "NecromancerPestilence"

    local ps_bolt_necromancer_trail = E:register_t("ps_bolt_necromancer_trail")
    E:add_comps(ps_bolt_necromancer_trail, "pos", "particle_system")
    ps_bolt_necromancer_trail.particle_system.name = "proy_Necromancer_particle"
    ps_bolt_necromancer_trail.particle_system.animated = false
    ps_bolt_necromancer_trail.particle_system.particle_lifetime = {0.4, 2}
    ps_bolt_necromancer_trail.particle_system.alphas = {255, 0}
    ps_bolt_necromancer_trail.particle_system.scales_x = {1, 3.5}
    ps_bolt_necromancer_trail.particle_system.scales_y = {1, 3.5}
    ps_bolt_necromancer_trail.particle_system.scale_var = {0.45, 0.9}
    ps_bolt_necromancer_trail.particle_system.scale_same_aspect = false
    ps_bolt_necromancer_trail.particle_system.emit_spread = math.pi
    ps_bolt_necromancer_trail.particle_system.emission_rate = 30

    tt = E:register_t("soldier_skeleton", "soldier_militia")
    E:add_comps(tt, "count_group")
    anchor_y = 0.18
    image_y = 38
    tt.count_group.name = "skeletons"
    tt.health.dead_lifetime = 3
    tt.health.hp_max = 40
    tt.health_bar.offset = vec_2(0, ady(38))
    tt.info.fn = scripts.soldier_mercenary.get_info
    tt.info.portrait = IS_PHONE and "portraits_sc_0007" or "kr2_info_portraits_soldiers_0007"
    tt.info.random_name_format = nil
    tt.melee.attacks[1].cooldown = 1
    tt.melee.attacks[1].damage_max = 6
    tt.melee.attacks[1].damage_min = 1
    tt.melee.range = 51.2
    tt.motion.max_speed = 60
    tt.regen = nil
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].name = "raise"
    tt.render.sprites[1].prefix = "soldier_skeleton"
    tt.sound_events.insert = "NecromancerSummon"
    tt.vis.bans = bor(F_POLYMORPH, F_CANNIBALIZE, F_POISON, F_LYCAN, F_SKELETON)
    tt.unit.blood_color = BLOOD_GRAY
    tt.unit.marker_offset = vec_2(0, ady(7))
    tt.unit.mod_offset = vec_2(0, ady(18))

    tt = E:register_t("soldier_skeleton_knight", "soldier_skeleton")
    E:add_comps(tt, "count_group")
    anchor_y = 0.18
    image_y = 50
    tt.count_group.name = "skeletons"
    tt.health.armor = 0.3
    tt.health.hp_max = 80
    tt.health_bar.offset = vec_2(0, ady(47))
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.info.portrait = IS_PHONE and "portraits_sc_0008" or "kr2_info_portraits_soldiers_0008"
    tt.info.random_name_format = nil
    tt.melee.attacks[1].cooldown = 1
    tt.melee.attacks[1].damage_max = 10
    tt.melee.attacks[1].damage_min = 2
    tt.melee.range = 38.4
    tt.motion.max_speed = 60
    tt.render.sprites[1].anchor.y = 0.18
    tt.render.sprites[1].prefix = "soldier_skeleton_knight"
    tt.sound_events.insert = "NecromancerSummon"

    tt = E:register_t("soldier_death_rider", "soldier")
    E:add_comps(tt, "melee", "auras")
    tt.auras.list[1] = E:clone_c("aura_attack")
    tt.auras.list[1].cooldown = 0
    tt.auras.list[1].name = "death_rider_aura"
    tt.health.armor = 0.3
    tt.health.armor_inc = 0.1
    tt.health.dead_lifetime = 12
    tt.health.hp_inc = 50
    tt.health.hp_max = 200
    tt.health_bar.offset = vec_2(0, 47.76)
    tt.health_bar.type = HEALTH_BAR_SIZE_MEDIUM
    tt.info.fn = scripts.soldier_barrack.get_info
    tt.info.portrait = IS_PHONE and "portraits_sc_0006" or "kr2_info_portraits_soldiers_0006"
    tt.main_script.insert = scripts.soldier_barrack.insert
    tt.main_script.update = scripts.soldier_barrack.update
    tt.melee.attacks[1].cooldown = 1
    tt.melee.attacks[1].damage_inc = 5
    tt.melee.attacks[1].damage_max = 10
    tt.melee.attacks[1].damage_min = 0
    tt.melee.attacks[1].hit_time = fts(9)
    tt.melee.attacks[1].sound = "MeleeSword"
    tt.melee.attacks[1].vis_bans = bor(F_FLYING, F_CLIFF)
    tt.melee.attacks[1].vis_flags = F_BLOCK
    tt.melee.range = 76.8
    tt.motion.max_speed = 75
    tt.regen.cooldown = 1
    tt.render.sprites[1] = E:clone_c("sprite")
    tt.render.sprites[1].anchor.y = 0.18
    tt.render.sprites[1].angles = {}
    tt.render.sprites[1].angles.walk = {"running"}
    tt.render.sprites[1].name = "raise"
    tt.render.sprites[1].prefix = "soldier_death_rider"
    tt.soldier.melee_slot_offset = vec_2(15, 0)
    tt.unit.blood_color = BLOOD_GRAY
    tt.unit.hit_offset = vec_2(0, 14)
    tt.unit.marker_offset = vec_2(0, ady(10))
    tt.unit.size = UNIT_SIZE_MEDIUM
    tt.vis.bans = bor(F_POLYMORPH, F_POISON, F_LYCAN, F_CANNIBALIZE, F_SKELETON)

    tt = E:register_t("necromancer_aura", "aura")
    tt.main_script.update = scripts.necromancer_aura.update
    tt.aura.cycle_time = 0.5
    tt.aura.duration = -1
    tt.min_health_for_knight = 600
    tt.count_group_name = "skeletons"
    tt.count_group_type = COUNT_GROUP_CONCURRENT
    tt.count_group_max = 30
    tt.max_skeletons_tower = 8

    local death_rider_aura = E:register_t("death_rider_aura", "aura")
    E:add_comps(death_rider_aura, "render")
    death_rider_aura.aura.mod = "mod_death_rider"
    death_rider_aura.aura.cycle_time = 1
    death_rider_aura.aura.duration = -1
    death_rider_aura.aura.radius = 128
    death_rider_aura.aura.track_source = true
    death_rider_aura.aura.allowed_templates = {"soldier_skeleton", "soldier_skeleton_knight", "soldier_sand_warrior",
                                               "soldier_dracolich_golem, soldier_frankenstein"}
    death_rider_aura.aura.vis_bans = F_ENEMY
    death_rider_aura.aura.vis_flags = F_MOD
    death_rider_aura.main_script.insert = scripts.aura_apply_mod.insert
    death_rider_aura.main_script.update = scripts.aura_apply_mod.update
    death_rider_aura.render.sprites[1].name = "soldier_death_rider_aura"
    death_rider_aura.render.sprites[1].loop = true
    death_rider_aura.render.sprites[1].z = Z_DECALS

    local mod_death_rider = E:register_t("mod_death_rider", "modifier")
    E:add_comps(mod_death_rider, "render")
    mod_death_rider.inflicted_damage_factor = 1.1
    mod_death_rider.inflicted_damage_factor_inc = 0.2
    mod_death_rider.extra_armor = 0.2
    mod_death_rider.extra_armor_inc = 0.05
    mod_death_rider.modifier.duration = 1
    mod_death_rider.modifier.use_mod_offset = false
    mod_death_rider.render.sprites[1].name = "NecromancerSkeletonAura"
    mod_death_rider.render.sprites[1].animated = false
    mod_death_rider.render.sprites[1].z = Z_DECALS
    mod_death_rider.main_script.insert = scripts.mod_death_rider.insert
    mod_death_rider.main_script.remove = scripts.mod_death_rider.remove
    mod_death_rider.main_script.update = scripts.mod_track_target.update

    tt = RT("tower_sunray", "tower_mage_1")
    AC(tt, "powers", "user_selection", "attacks")
    tt.tower.level = 1
    tt.tower.type = "sunray"
    tt.tower.price = 265
    tt.tower.terrain_style = nil
    tt.tower.size = TOWER_SIZE_LARGE
    tt.info.portrait = IS_PHONE_OR_TABLET and "portraits_towers_0015" or "info_portraits_towers_0015"
    tt.info.fn = scripts.tower_sunray.get_info
    tt.info.i18n_key = "SPECIAL_SUNRAY"
    tt.ui.click_rect = r(-41.25, -17.5, 82.5, 97.5)
    tt.powers.ray = E:clone_c("power")
    tt.powers.ray.level = 1
    tt.powers.ray.max_level = 4
    tt.powers.ray.price_base = 0
    tt.powers.ray.price_inc = 100
    tt.powers.ray.changed = true
    tt.powers.manual = E:clone_c("power")
    tt.powers.manual.max_level = 1
    tt.powers.manual.price_base = 0
    tt.powers.manual.level = 1
    tt.powers.auto = E:clone_c("power")
    tt.powers.auto.max_level = 1
    tt.powers.auto.price_base = 0
    tt.main_script.update = scripts.tower_sunray.update
    tt.render.sprites[1].name = "sunrayTower_layer1_0068"
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].offset = IS_CONSOLE and vec_2(-4.55, 30) or vec_2(-4.2, 48.2)
    tt.render.sprites[1].hidden = true
    tt.render.sprites[1].hover_off_hidden = true
    tt.render.sprites[2] = CC("sprite")
    tt.render.sprites[2].name = "sunrayTower_layer1_0001"
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].offset = vec_2(-4.2, 30)

    for i = 3, 6 do
        tt.render.sprites[i] = CC("sprite")
        tt.render.sprites[i].name = "disabled"
        tt.render.sprites[i].offset = vec_2(-4.2, 30)
        tt.render.sprites[i].prefix = "tower_sunray_layer" .. i - 1
        tt.render.sprites[i].group = "tower"
    end

    for i = 7, 10 do
        tt.render.sprites[i] = CC("sprite")
        tt.render.sprites[i].name = "idle"
        tt.render.sprites[i].animated = true
        tt.render.sprites[i].hidden = true
        tt.render.sprites[i].anchor.y = 0.0819
        tt.render.sprites[i].prefix = "tower_sunray_shooter_" .. (i % 2 == 0 and "down" or "up")
    end

    tt.render.sprites[7].offset = vec_2(23.1, 5.5)
    tt.render.sprites[8].offset = vec_2(-17.5, 27.9)
    tt.render.sprites[9].offset = vec_2(-20.3, 4.8)
    tt.render.sprites[10].offset = vec_2(21, 27.9)
    tt.sound_events.mute_on_level_insert = true
    tt.user_selection.can_select_point_fn = scripts.tower_sunray.can_select_point
    tt.user_selection.custom_pointer_name = "sunray_tower"
    tt.attacks.list[1] = E:clone_c("bullet_attack")
    tt.attacks.list[1].bullet = "ray_sunray"
    tt.attacks.list[1].cooldown = 13
    tt.attacks.list[1].cooldown_base = 14
    tt.attacks.list[1].cooldown_inc = -1
    tt.attacks.list[1].bullet_start_offset = vec_2(0, 66.5)
    tt.attacks.list[1].range = 425
    tt.attacks.list[1].shoot_time = fts(3)
    tt.attacks.range = 425

    tt = E:register_t("bolt_elves", "bullet")
    E:add_comps(tt, "force_motion")
    tt.bullet.damage_type = DAMAGE_MAGICAL
    tt.bullet.hit_fx = "fx_bolt_elves_hit"
    tt.bullet.max_speed = 300
    tt.bullet.min_speed = 30
    tt.bullet.pop = {"pop_zap"}
    tt.bullet.pop_conds = DR_KILL
    tt.bullet.pop_mage_el_empowerment = {"pop_crit_mages"}
    tt.initial_impulse = 15000
    tt.initial_impulse_duration = 0.15
    tt.initial_impulse_angle = math.pi / 3
    tt.force_motion.a_step = 5
    tt.force_motion.max_a = 3000
    tt.force_motion.max_v = 300
    tt.main_script.insert = scripts.bolt_elves.insert
    tt.main_script.update = scripts.bolt_elves.update
    tt.render.sprites[1].prefix = "bolt_elves"
    tt.render.sprites[1].name = "travel"
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].name = "decal_flying_shadow"
    tt.render.sprites[2].offset.y = -20
    tt.render.sprites[2].animated = false
    tt.sound_events.insert = "TowerWizardBasicBolt"

    tt = E:register_t("tower_high_elven", "tower")
    E:add_comps(tt, "attacks", "powers", "tween")
    tt.info.enc_icon = 15
    tt.info.fn = scripts.tower_high_elven.get_info
    tt.info.i18n_key = "TOWER_MAGE_HIGH_ELVEN"
    tt.info.portrait = (IS_PHONE and "portraits_towers" or "kr3_info_portraits_towers") .. "_0008"
    tt.main_script.update = scripts.tower_high_elven.update
    tt.main_script.remove = scripts.tower_high_elven.remove
    tt.main_script.insert = scripts.tower_high_elven.insert
    tt.tower.type = "high_elven"
    tt.tower.level = 1
    tt.tower.price = 275
    tt.tower.size = TOWER_SIZE_LARGE
    tt.attacks.range = 210
    tt.attacks.list[1] = E:clone_c("bullet_attack")
    tt.attacks.list[1].animation = "shoot"
    tt.attacks.list[1].bullet = "bolt_high_elven_strong"
    tt.attacks.list[1].bullets = {"bolt_high_elven_strong", "bolt_high_elven_weak", "bolt_high_elven_weak",
                                  "bolt_high_elven_weak", "bolt_high_elven_weak"}
    tt.attacks.list[1].bullet_start_offset = vec_2(0, 75)
    tt.attacks.list[1].cooldown = 1.5
    tt.attacks.list[1].shoot_time = fts(30)
    tt.attacks.list[2] = E:clone_c("spell_attack")
    tt.attacks.list[2].animation = "timelapse"
    tt.attacks.list[2].spell = "mod_timelapse"
    tt.attacks.list[2].cooldown = 16
    tt.attacks.list[2].shoot_time = fts(5)
    tt.attacks.list[2].vis_flags = bor(F_RANGED)
    tt.attacks.list[2].vis_bans = bor(F_BOSS)
    tt.attacks.list[2].sound = "TowerHighMageTimecast"
    tt.attacks.list[3] = E:clone_c("custom_attack")
    tt.powers.timelapse = E:clone_c("power")
    tt.powers.timelapse.attack_idx = 2
    tt.powers.timelapse.price_base = 225
    tt.powers.timelapse.price_inc = 125
    tt.powers.timelapse.target_count = {2, 3, 4}
    tt.powers.timelapse.enc_icon = 18
    tt.powers.sentinel = E:clone_c("power")
    tt.powers.sentinel.max_level = 3
    tt.powers.sentinel.price_base = 250
    tt.powers.sentinel.price_inc = 200
    tt.powers.sentinel.range = 120
    tt.powers.sentinel.range_inc = 40
    tt.powers.sentinel.max_range = 240
    tt.powers.sentinel.enc_icon = 19
    tt.powers.sentinel.ts = 0
    tt.powers.sentinel.cooldown = 0.5
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].name = "terrains_%04i"
    tt.render.sprites[1].offset = vec_2(0, 10)
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].name = "mage_towers_layer1_0098"
    tt.render.sprites[2].offset = vec_2(0, 36)
    tt.render.sprites[3] = E:clone_c("sprite")
    tt.render.sprites[3].prefix = "tower_high_elven_shooter"
    tt.render.sprites[3].name = "idleDown"
    tt.render.sprites[3].angles = {}
    tt.render.sprites[3].angles.idle = {"idleUp", "idleDown"}
    tt.render.sprites[3].angles.shoot = {"shootUp", "shootDown"}
    tt.render.sprites[3].angles.timelapse = {"timeLapseUp", "timeLapseDown"}
    tt.render.sprites[3].anchor.y = 0
    tt.render.sprites[3].offset = vec_2(0, -5)
    tt.render.sprites[3].draw_order = 5
    tt.render.sprites[4] = E:clone_c("sprite")
    tt.render.sprites[4].name = "mage_highElven_glow"
    tt.render.sprites[4].animated = false
    tt.render.sprites[4].offset = tt.render.sprites[2].offset
    tt.tween.remove = false
    tt.tween.props[1].keys = {{0, 0}, {0.16, 255}, {0.42, 255}, {0.68, 0}}
    tt.tween.props[1].sprite_id = 4
    tt.tween.props[1].ts = -10
    tt.sound_events.insert = "ElvesMageHighElvenTaunt"
    tt.sentinels = {}
    tt.max_sentinels = 2

    tt = E:register_t("mod_high_elven", "modifier")
    E:add_comps(tt, "render", "tween")
    tt.enhance_damage_factor = 0.1
    tt.enhance_damage_factor_inc = 0.05
    tt.main_script.insert = scripts.mod_high_elven.insert
    tt.main_script.remove = scripts.mod_high_elven.remove
    tt.render.sprites[1].draw_order = 10
    tt.render.sprites[1].loop = true
    tt.render.sprites[1].offset.y = 36
    tt.render.sprites[1].name = "mod_blackburn_tower"
    tt.render.sprites[1].z = Z_OBJECTS
    tt.tween.remove = false
    tt.tween.disabled = false
    tt.tween.reverse = false
    tt.tween.props[1].keys = {{0, 0}, {fts(10), 255}}
    tt.render.sprites[1].color = {0, 255, 255}

    local decal_high_elven_sentinel_preview = E:register_t("decal_high_elven_sentinel_preview", "decal_tween")
    decal_high_elven_sentinel_preview.render.sprites[1].name = "CrossbowHunterDecalDotted"
    decal_high_elven_sentinel_preview.render.sprites[1].animated = false
    decal_high_elven_sentinel_preview.render.sprites[1].anchor = vec_2(0.5, 0.32)
    decal_high_elven_sentinel_preview.render.sprites[1].offset.y = 0
    decal_high_elven_sentinel_preview.render.sprites[1].color = {40, 0, 255}
    decal_high_elven_sentinel_preview.tween.remove = false
    decal_high_elven_sentinel_preview.tween.props[1].name = "scale"
    decal_high_elven_sentinel_preview.tween.props[1].loop = true
    decal_high_elven_sentinel_preview.tween.props[1].keys = {{0, vec_2(1, 1)}, {0.25, vec_2(1.15, 1.15)},
                                                             {0.5, vec_2(1, 1)}}

    tt = E:register_t("high_elven_sentinel", "decal_scripted")
    E:add_comps(tt, "force_motion", "ranged", "tween")
    tt.charge_time = 4
    tt.flight_height = 50
    tt.force_motion.max_a = 135000
    tt.force_motion.max_v = 450
    tt.force_motion.ramp_radius = 10
    tt.main_script.update = scripts.high_elven_sentinel.update
    tt.owner = nil
    tt.owner_idx = nil
    tt.tower_rotation_speed = 7.5 * math.pi / 180 * 30
    tt.tower_rotation_offset = vec_2(0, -6)
    tt.tower_rotation_radius = 20
    tt.wait_time = 5
    tt.wait_spent_time = 1
    tt.particles_name = "ps_high_elven_sentinel"
    tt.ranged.attacks[1].bullet = "ray_high_elven_sentinel"
    tt.ranged.attacks[1].shoot_time = fts(9)
    tt.ranged.attacks[1].cooldown = 0.5
    tt.ranged.attacks[1].search_cooldown = 0.25
    tt.ranged.attacks[1].shoot_range = 25
    tt.ranged.attacks[1].launch_range = 350
    tt.ranged.attacks[1].max_range = 250
    tt.ranged.attacks[1].min_range = 0
    tt.ranged.attacks[1].animation = "shoot"
    tt.ranged.attacks[1].bullet_start_offset = vec_2(0, 0)
    tt.ranged.attacks[1].vis_flags = F_RANGED
    tt.ranged.attacks[1].vis_bans = 0
    tt.ranged.attacks[1].max_shots = 12
    tt.render.sprites[1].prefix = "high_elven_sentinel"
    tt.render.sprites[1].name = "small"
    tt.render.sprites[1].z = Z_BULLETS
    tt.render.sprites[1].offset = vec_2(0, tt.flight_height)
    tt.render.sprites[1].draw_order = 4
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].name = "decal_flying_shadow"
    tt.render.sprites[2].offset = vec_2(0, 0)
    tt.render.sprites[2].hidden = true
    tt.tween.remove = false
    tt.tween.props[1].keys = {{0, 0}, {fts(10), 255}}
    tt.tween.props[2] = E:clone_c("tween_prop")
    tt.tween.props[2].keys = {{0, vec_2(0.75, 1)}, {fts(10), vec_2(1, 1)}}
    tt.tween.props[2].name = "scale"

    tt = E:register_t("bolt_high_elven_weak", "bolt_elves")
    tt.alter_reality_chance = 0.03
    tt.alter_reality_mod = "mod_teleport_high_elven"
    tt.bullet.damage_max = 3
    tt.bullet.damage_min = 2
    tt.bullet.hit_fx = "fx_bolt_high_elven_weak_hit"
    tt.bullet.particles_name = "ps_bolt_high_elven"
    tt.bullet.pop = {"pop_mage"}
    tt.bullet.pop_mage_el_empowerment = {"pop_crit_high_elven"}
    tt.bullet.max_speed = 750
    tt.render.sprites[1].prefix = "bolt_high_elven_weak"
    tt.render.sprites[1].scale = vec_2(0.8, 0.8)

    tt = E:register_t("bolt_high_elven_strong", "bolt_elves")
    tt.alter_reality_chance = 0.03
    tt.alter_reality_mod = "mod_teleport_high_elven"
    tt.bullet.align_with_trajectory = true
    tt.bullet.damage_max = 25
    tt.bullet.damage_min = 14
    tt.bullet.hit_fx = "fx_bolt_high_elven_strong_hit"
    tt.bullet.particles_name = "ps_bolt_high_elven"
    tt.bullet.pop = {"pop_high_elven"}
    tt.bullet.pop_mage_el_empowerment = {"pop_crit_high_elven"}
    tt.bullet.max_speed = 750
    tt.initial_impulse = nil
    tt.render.sprites[1].prefix = "bolt_high_elven_strong"
    tt.sound_events.insert = "TowerHighMageBoltCast"

    tt = E:register_t("ray_high_elven_sentinel", "bullet")
    tt.image_width = 72
    tt.main_script.update = scripts.ray_simple.update
    tt.render.sprites[1].name = "ray_high_elven_sentinel"
    tt.render.sprites[1].loop = false
    tt.render.sprites[1].anchor = vec_2(0, 0.5)
    tt.bullet.mod = "mod_ray_high_elven_sentinel_hit"
    tt.bullet.damage_min = 9
    tt.bullet.damage_max = 16
    tt.bullet.damage_type = DAMAGE_MAGICAL
    tt.bullet.hit_time = fts(4)
    tt.sound_events.insert = "TowerHighMageSentinelShot"

    tt = E:register_t("mod_timelapse", "modifier")
    E:add_comps(tt, "render", "tween")
    tt.modifier.remove_banned = true
    tt.modifier.bans = {"mod_faerie_dragon_l0", "mod_faerie_dragon_l1", "mod_faerie_dragon_l2", "mod_arivan_freeze",
                        "mod_arivan_ultimate_freeze", "mod_crystal_arcane_freeze", "mod_blood_elves",
                        "mod_bruce_sharp_claws", "mod_lynn_ultimate", "mod_ogre_magi_shield"}
    tt.modifier.type = MOD_TYPE_TIMELAPSE
    tt.modifier.vis_flags = bor(F_MOD)
    tt.modifier.vis_bans = F_BOSS
    tt.render.sprites[1].prefix = "mod_timelapse"
    tt.render.sprites[1].name = "start"
    tt.render.sprites[1].sort_y_offset = -1
    tt.render.sprites[1].z = Z_OBJECTS
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].name = "mage_highElven_energyBall_shadow"
    tt.render.sprites[2].z = Z_DECALS
    tt.render.sprites[2].anchor.y = 0.16666666666666666
    tt.tween.remove = false
    tt.tween.props[1].keys = {{0, 0}, {fts(10), 0}, {fts(15), 255}}
    tt.tween.props[1].sprite_id = 2
    tt.main_script.queue = scripts.mod_timelapse.queue
    tt.main_script.dequeue = scripts.mod_timelapse.dequeue
    tt.main_script.update = scripts.mod_timelapse.update
    tt.main_script.insert = scripts.mod_timelapse.insert
    tt.main_script.remove = scripts.mod_timelapse.remove
    tt.damage_levels = {100, 135, 150}
    tt.damage_type = bor(DAMAGE_MAGICAL, DAMAGE_NO_SPAWNS)
    tt.modifier.duration = 5

    tt = E:register_t("timelapse_enemy_decal", "decal_tween")
    tt.tween.remove = false
    tt.tween.disabled = true
    tt.tween.props[1].keys = {{0, 255}, {0.13, 0}}

    tt = E:register_t("mod_ray_high_elven_sentinel_hit", "mod_track_target_fx")
    tt.render.sprites[1].name = "fx_ray_high_elven_sentinel_hit"
    tt.render.sprites[1].loop = false
    tt.render.sprites[1].hide_after_runs = 1
    tt.modifier.duration = fts(11)

    tt = E:register_t("tower_wild_magus", "tower")
    E:add_comps(tt, "attacks", "powers", "tween")
    tt.info.enc_icon = 16
    tt.info.i18n_key = "TOWER_MAGE_WILD_MAGUS"
    tt.info.portrait = (IS_PHONE and "portraits_towers" or "kr3_info_portraits_towers") .. "_0007"
    tt.info.fn = scripts.tower_mage.get_info
    tt.main_script.update = scripts.tower_wild_magus.update
    tt.tower.type = "wild_magus"
    tt.tower.level = 1
    tt.tower.price = 300
    tt.tower.size = TOWER_SIZE_LARGE
    tt.attacks.range = 190
    tt.attacks.list[1] = E:clone_c("bullet_attack")
    tt.attacks.list[1].animations = {"shoot_rh", "shoot_lh"}
    tt.attacks.list[1].bullet = "bolt_wild_magus"
    tt.attacks.list[1].bullet_start_offset = {{vec_2(10, 42), vec_2(4, 24)}, {vec_2(-6, 38), vec_2(12, 26)}}
    tt.attacks.list[1].cooldown = 0.3
    tt.attacks.list[1].shoot_time = fts(4)
    tt.attacks.list[2] = E:clone_c("bullet_attack")
    tt.attacks.list[2].animation = "ray"
    tt.attacks.list[2].bullet = "ray_wild_magus"
    tt.attacks.list[2].bullet_start_offset = {vec_2(0, 38), vec_2(0, 32)}
    tt.attacks.list[2].cooldown = 28
    tt.attacks.list[2].shoot_time = fts(20)
    tt.attacks.list[2].sound = "TowerWildMagusDoomCast"
    tt.attacks.list[2].vis_flags = bor(F_MOD, F_INSTAKILL, F_EAT)
    tt.attacks.list[2].vis_bans = bor(F_BOSS)
    tt.attacks.list[3] = E:clone_c("spell_attack")
    tt.attacks.list[3].cooldown = 10
    tt.attacks.list[3].spell = "mod_ward"
    tt.attacks.list[3].animation = "ward"
    tt.attacks.list[3].cast_time = fts(14)
    tt.attacks.list[3].vis_bans = bor(F_CLIFF)
    tt.attacks.list[3].vis_flags = bor(F_RANGED)
    tt.attacks.list[3].sound = "TowerWildMagusDisruptionCast"
    tt.powers.eldritch = E:clone_c("power")
    tt.powers.eldritch.attack_idx = 2
    tt.powers.eldritch.price_base = 300
    tt.powers.eldritch.price_inc = 175
    tt.powers.eldritch.cooldowns = {28, 24, 20}
    tt.powers.eldritch.enc_icon = 16
    tt.powers.ward = E:clone_c("power")
    tt.powers.ward.attack_idx = 3
    tt.powers.ward.price_base = 100
    tt.powers.ward.price_inc = 150
    tt.powers.ward.target_count = {1, 3, 5}
    tt.powers.ward.enc_icon = 17
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].name = "terrains_%04i"
    tt.render.sprites[1].offset = vec_2(0, 10)
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].name = "mage_towers_layer1_0097"
    tt.render.sprites[2].offset = vec_2(0, 36)
    tt.render.sprites[3] = E:clone_c("sprite")
    tt.render.sprites[3].animated = false
    tt.render.sprites[3].name = "mage_towers_layer2_0097"
    tt.render.sprites[3].offset = vec_2(0, 36)
    tt.render.sprites[4] = E:clone_c("sprite")
    tt.render.sprites[4].prefix = "tower_wild_magus_shooter"
    tt.render.sprites[4].name = "idleDown"
    tt.render.sprites[4].angles = {}
    tt.render.sprites[4].angles.idle = {"idleUp", "idleDown"}
    tt.render.sprites[4].angles.shoot_rh = {"rh_shootUp", "rh_shootDown"}
    tt.render.sprites[4].angles.shoot_lh = {"lh_shootUp", "lh_shootDown"}
    tt.render.sprites[4].angles.ray = {"rayUp", "rayDown"}
    tt.render.sprites[4].angles.ward = {"wardUp", "wardDown"}
    tt.render.sprites[4].anchor.y = 0
    tt.render.sprites[4].offset = vec_2(2, 22)
    tt.render.sprites[5] = E:clone_c("sprite")
    tt.render.sprites[5].name = "mage_wild_shooter_0167"
    tt.render.sprites[5].animated = false
    tt.render.sprites[5].anchor.y = 0
    tt.render.sprites[5].hidden = true
    tt.render.sprites[5].offset = vec_2(0, 22)
    tt.render.sprites[6] = table.deepclone(tt.render.sprites[5])
    tt.render.sprites[6].name = "mage_wild_shooter_0168"
    tt.render.sprites[7] = E:clone_c("sprite")
    tt.render.sprites[7].name = "tower_wild_magus_ward_rune"
    tt.render.sprites[7].anchor.y = 0
    tt.render.sprites[7].animated = true
    tt.render.sprites[7].offset = vec_2(0, 22)
    tt.render.sprites[7].hidden = true

    for i = 1, 10 do
        local s = E:clone_c("sprite")

        s.name = string.format("mage_wild_stones_%04i", i)
        s.animated = false
        s.offset.y = 36
        s.sort_y_offset = i < 4 and 1 or -1
        tt.render.sprites[#tt.render.sprites + 1] = s
    end

    tt.render.sid_tower = 3
    tt.render.sid_shooter = 4
    tt.render.sid_rune = 7
    tt.sound_events.insert = "ElvesMageWildMagusTaunt"
    tt.tween.remove = false
    tt.tween.props[1].name = "offset"
    tt.tween.props[1].keys = {{0, vec_2(0, 35)}, {1, vec_2(0, 37)}, {2, vec_2(0, 35)}}
    tt.tween.props[1].sprite_id = 3
    tt.tween.props[1].loop = true
    tt.tween.props[1].ts = 0
    tt.tween.props[2] = E:clone_c("tween_prop")
    tt.tween.props[2].name = "offset"
    tt.tween.props[2].keys = {{0, vec_2(0, 19)}, {1, vec_2(0, 21)}, {2, vec_2(0, 19)}}
    tt.tween.props[2].sprite_id = 4
    tt.tween.props[2].loop = true
    tt.tween.props[2].ts = 0
    tt.tween.props[3] = table.deepclone(tt.tween.props[2])
    tt.tween.props[3].sprite_id = 5
    tt.tween.props[4] = table.deepclone(tt.tween.props[2])
    tt.tween.props[4].sprite_id = 6
    tt.tween.props[5] = table.deepclone(tt.tween.props[2])
    tt.tween.props[5].sprite_id = 7
    tt.tween.props[6] = E:clone_c("tween_prop")
    tt.tween.props[6].keys = {{0, 0}, {fts(2), 0}, {fts(16), 255}, {fts(25), 255}, {fts(30), 0}}
    tt.tween.props[6].sprite_id = 5
    tt.tween.props[7] = table.deepclone(tt.tween.props[6])
    tt.tween.props[7].sprite_id = 6

    for i = 1, 10 do
        local t = E:clone_c("tween_prop")
        t.sprite_id = tt.render.sid_rune + i
        t.name = "offset"
        t.keys = {{0, vec_2(0, 35)}, {1, vec_2(0, 37)}, {2, vec_2(0, 35)}}
        t.ts = math.random()
        t.loop = true
        tt.tween.props[#tt.tween.props + 1] = t
    end

    tt = E:register_t("bolt_wild_magus", "bolt")
    E:add_comps(tt, "tween")
    tt.alter_reality_chance = 0.01
    tt.alter_reality_mod = "mod_teleport_wild_magus"
    tt.render.sprites[1].prefix = "bolt_wild_magus"
    tt.bullet.damage_max = 33
    tt.bullet.damage_min = 25
    tt.bullet.damage_same_target_inc = 0.5
    tt.bullet.damage_same_target_max = 24
    tt.bullet.acceleration_factor = 0.25
    tt.bullet.min_speed = 30
    tt.bullet.max_speed = 2100
    tt.bullet.hit_fx = "fx_wild_magus_hit"
    tt.bullet.particles_name = "ps_bolt_wild_magus"
    tt.sound_events.insert = "TowerWildMagusBoltcast"
    tt.tween.remove = false
    tt.tween.props[1].keys = {{0, 0}, {fts(4), 255}}

    tt = E:register_t("ray_wild_magus", "bullet")
    tt.image_width = 144
    tt.main_script.update = scripts.ray_simple.update
    tt.render.sprites[1].name = "ray_wild_magus"
    tt.render.sprites[1].loop = false
    tt.render.sprites[1].anchor = vec_2(0, 0.5)
    tt.bullet.mod = "mod_eldritch"
    tt.bullet.hit_fx = "fx_ray_wild_magus_hit"
    tt.bullet.damage_type = DAMAGE_NONE
    tt.bullet.hit_time = fts(2)
    tt.track_target = true

    tt = E:register_t("tower_faerie_dragon", "tower")
    E:add_comps(tt, "powers", "attacks")
    tt.attacks.list[1] = E:clone_c("custom_attack")
    tt.attacks.list[1].cooldown = 3
    tt.attacks.list[1].vis_flags = bor(F_RANGED)
    tt.attacks.list[1].vis_bans = 0
    tt.attacks.range = 240
    tt.info.i18n_key = "ELVES_TOWER_SPECIAL_FAERIE_DRAGONS"
    tt.info.fn = scripts.tower_faerie_dragon.get_info
    tt.info.portrait = (IS_PHONE and "portraits_towers" or "kr3_info_portraits_towers") .. "_0018"
    tt.main_script.update = scripts.tower_faerie_dragon.update
    tt.main_script.insert = scripts.tower_faerie_dragon.insert
    tt.powers.more_dragons = E:clone_c("power")
    tt.powers.more_dragons.price_base = 200
    tt.powers.more_dragons.price_inc = 200
    tt.powers.more_dragons.level = 1
    tt.powers.more_dragons.changed = true
    tt.powers.more_dragons.max_level = 3
    tt.powers.more_dragons.idle_offsets = {vec_2(14, 3), vec_2(-12, 7), vec_2(28, -3)}
    tt.powers.improve_shot = E:clone_c("power")
    tt.powers.improve_shot.price_base = 200
    tt.powers.improve_shot.price_inc = 200
    tt.powers.improve_shot.max_level = 2
    tt.render.sprites[1].animated = false
    tt.render.sprites[1].name = "terrains_0002"
    tt.render.sprites[1].offset = vec_2(0, 10)
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].name = "fairy_dragon_tower"
    tt.render.sprites[2].offset = vec_2(0, 36)
    tt.render.sprites[3] = E:clone_c("sprite")
    tt.render.sprites[3].prefix = "tower_faerie_dragon_egg"
    tt.render.sprites[3].offset = vec_2(-19, 50)
    tt.render.sprites[3].r = d2r(15)
    tt.render.sprites[4] = E:clone_c("sprite")
    tt.render.sprites[4].prefix = "tower_faerie_dragon_egg"
    tt.render.sprites[4].offset = vec_2(25, 41)
    tt.render.sprites[4].r = d2r(-6)
    tt.sound_events.insert = nil
    tt.tower.menu_offset = vec_2(2, 20)
    tt.tower.price = 250
    tt.tower.type = "faerie_dragon"
    tt.tower.level = 1
    tt.aura = "aura_tower_faerie_dragon"
    tt.aura_rate = 0.3
    tt.aura_rate_inc = 0.15
    tt.sound_events.insert = "ElvesFaeryDragonDragonBuy"

    tt = E:register_t("aura_tower_faerie_dragon", "aura")
    tt.main_script.update = scripts.aura_tower_faerie_dragon.update
    tt.aura.duration = -1
    tt.aura.mod = "mod_faerie_dragon_l0"
    tt.aura.damage_type = DAMAGE_MAGICAL_EXPLOSION
    tt.aura.damage = 10

    tt = E:register_t("faerie_dragon", "decal_scripted")
    E:add_comps(tt, "force_motion", "custom_attack")
    anchor_y = 0.5
    image_y = 30
    tt.flight_height = 80
    tt.flight_speed_idle = 80
    tt.flight_speed_busy = 120
    tt.ramp_dist_idle = 80
    tt.ramp_dist_busy = 80
    tt.idle_pos = nil
    tt.main_script.update = scripts.faerie_dragon.update
    tt.custom_attack = E:clone_c("bullet_attack")
    tt.custom_attack.bullet = "bolt_faerie_dragon"
    tt.custom_attack.shoot_time = fts(12)
    tt.custom_attack.bullet_start_offset = {vec_2(13, -30)}
    tt.custom_attack.cooldown = 3
    tt.render.sprites[1].anchor.y = anchor_y
    tt.render.sprites[1].prefix = "faerie_dragon"
    tt.render.sprites[1].name = "idle"
    tt.render.sprites[1].draw_order = 2
    tt.render.sprites[1].loop_forced = true
    tt.render.sprites[1].sort_y_offset = -12
    tt.render.sprites[2] = E:clone_c("sprite")
    tt.render.sprites[2].animated = false
    tt.render.sprites[2].name = "decal_flying_shadow"
    tt.render.sprites[2].offset = vec_2(0, 0)
    tt.owner = nil

    tt = E:register_t("bolt_faerie_dragon", "bolt")
    tt.render.sprites[1].prefix = "faerie_dragon_proy"
    tt.bullet.damage_type = DAMAGE_MAGICAL
    tt.bullet.acceleration_factor = 0.25
    tt.bullet.damage_min = 75
    tt.bullet.damage_max = 100
    tt.bullet.min_speed = 90
    tt.bullet.max_speed = 180
    tt.bullet.hit_fx = "fx_bolt_faerie_dragon"
    tt.bullet.mod = "mod_faerie_dragon"
    tt.sound_events.insert = "ElvesFaeryDragonAttack"

    tt = E:register_t("fx_bolt_faerie_dragon", "fx")
    tt.render.sprites[1].name = "faerie_dragon_proy_hit"
    tt = E:register_t("fx_faerie_dragon_shoot", "fx")
    tt.render.sprites[1].name = "faerie_dragon_shoot_fx"
    tt = E:register_t("mod_faerie_dragon", "mod_freeze")
    E:add_comps(tt, "render")
    tt.modifier.duration = nil
    tt.modifier.vis_bans = F_BOSS
    tt.modifier.vis_flags = bor(F_STUN, F_MOD)
    tt.render.sprites[1].prefix = "mod_faerie_dragon"
    tt.render.sprites[1].sort_y_offset = -2
    tt.custom_offsets = {}
    tt.custom_offsets.flying = vec_2(-5, 28)
    tt.custom_suffixes = {}
    tt.custom_suffixes.flying = "_air"
    tt.custom_animations = {"start", "end"}
    tt.freeze_decal_name = "decal_faerie_dragon_freeze_enemy"
    tt.sound_events.insert = "ElvesFaeryDragonAttackCristalization"

    tt = E:register_t("mod_faerie_dragon_l0", "mod_faerie_dragon")
    tt.modifier.duration = 1
    tt = E:register_t("mod_faerie_dragon_l1", "mod_faerie_dragon")
    tt.modifier.duration = 1.25
    tt = E:register_t("mod_faerie_dragon_l2", "mod_faerie_dragon")
    tt.modifier.duration = 1.5
end

return mage_towers
